{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $advancedTextSplit?", "Assistant": "Split and get all at the same time multiple times\n\nExample usage:\n```js\n$advancedTextSplit[text_example;split;index_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $advancedTextSplit?", "Assistant": "Use `$advancedTextSplit` like this:\n```js\n$advancedTextSplit[text_example;split;index_example]\n```\n\nThis function split and get all at the same time multiple times."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $advancedTextSplit in forgescript?", "Assistant": "Yes, You use `$advancedTextSplit` like this:\n```js\n$advancedTextSplit[text_example;split;index_example]\n```\n\nThis function split and get all at the same time multiple times."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $advancedTextSplit?", "Assistant": "The arguments for `$advancedTextSplit` are as follows:\n\n- **text** (String): The text to use (Required)\n- **split;index** (String): The split followed by the index to get (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $advancedTextSplit added?", "Assistant": "$advancedTextSplit was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $advancedTextSplit nativly to forgescipt?", "Assistant": "Yes, $advancedTextSplit is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $arrayAdvancedSort?", "Assistant": "Advanced array sort\n\nExample usage:\n```js\n$arrayAdvancedSort[variable_example;var1_example;var2_example;code_example;other_variable_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $arrayAdvancedSort?", "Assistant": "Use `$arrayAdvancedSort` like this:\n```js\n$arrayAdvancedSort[variable_example;var1_example;var2_example;code_example;other_variable_example]\n```\n\nThis function advanced array sort."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayAdvancedSort in forgescript?", "Assistant": "Yes, You use `$arrayAdvancedSort` like this:\n```js\n$arrayAdvancedSort[variable_example;var1_example;var2_example;code_example;other_variable_example]\n```\n\nThis function advanced array sort."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $arrayAdvancedSort?", "Assistant": "The arguments for `$arrayAdvancedSort` are as follows:\n\n- **variable** (String): The variable the array is held on (Required)\n- **var1** (String): The $env variable 1 to hold x value (Required)\n- **var2** (String): The $env variable 2 to hold y value (Required)\n- **code** (String): Optional code to use for sorting, previous 2 vars must have been given (Required)\n- **other variable** (String): The variable to load result to, leave empty to return output (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $arrayAdvancedSort added?", "Assistant": "$arrayAdvancedSort was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayAdvancedSort nativly to forgescipt?", "Assistant": "Yes, $arrayAdvancedSort is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $arrayAt?", "Assistant": "Returns the element at given index\n\nExample usage:\n```js\n$arrayAt[variable_example;87]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $arrayAt?", "Assistant": "Use `$arrayAt` like this:\n```js\n$arrayAt[variable_example;87]\n```\n\nThis function returns the element at given index."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayAt in forgescript?", "Assistant": "Yes, You use `$arrayAt` like this:\n```js\n$arrayAt[variable_example;87]\n```\n\nThis function returns the element at given index."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $arrayAt?", "Assistant": "The arguments for `$arrayAt` are as follows:\n\n- **variable** (String): The variable the array is held on (Required)\n- **index** (Number): The index to get the element of (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $arrayAt added?", "Assistant": "$arrayAt was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayAt nativly to forgescipt?", "Assistant": "Yes, $arrayAt is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $arrayClear?", "Assistant": "Clears all elements from an array\n\nExample usage:\n```js\n$arrayClear[variable_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $arrayClear?", "Assistant": "Use `$arrayClear` like this:\n```js\n$arrayClear[variable_example]\n```\n\nThis function clears all elements from an array."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayClear in forgescript?", "Assistant": "Yes, You use `$arrayClear` like this:\n```js\n$arrayClear[variable_example]\n```\n\nThis function clears all elements from an array."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $arrayClear?", "Assistant": "The arguments for `$arrayClear` are as follows:\n\n- **variable** (String): The variable the array is held on (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $arrayClear added?", "Assistant": "$arrayClear was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayClear nativly to forgescipt?", "Assistant": "Yes, $arrayClear is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $arrayConcat?", "Assistant": "Concat arrays and load them into another variable\n\nExample usage:\n```js\n$arrayConcat[variable_example;variables_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $arrayConcat?", "Assistant": "Use `$arrayConcat` like this:\n```js\n$arrayConcat[variable_example;variables_example]\n```\n\nThis function concat arrays and load them into another variable."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayConcat in forgescript?", "Assistant": "Yes, You use `$arrayConcat` like this:\n```js\n$arrayConcat[variable_example;variables_example]\n```\n\nThis function concat arrays and load them into another variable."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $arrayConcat?", "Assistant": "The arguments for `$arrayConcat` are as follows:\n\n- **variable** (String): The variable to load the result to, leave empty to return output (Optional)\n- **variables** (String): The variable names to concat (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $arrayConcat added?", "Assistant": "$arrayConcat was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayConcat nativly to forgescipt?", "Assistant": "Yes, $arrayConcat is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $arrayCreate?", "Assistant": "Initializes an array and loads it to a variable\n\nExample usage:\n```js\n$arrayCreate[variable_example;91]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $arrayCreate?", "Assistant": "Use `$arrayCreate` like this:\n```js\n$arrayCreate[variable_example;91]\n```\n\nThis function initializes an array and loads it to a variable."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayCreate in forgescript?", "Assistant": "Yes, You use `$arrayCreate` like this:\n```js\n$arrayCreate[variable_example;91]\n```\n\nThis function initializes an array and loads it to a variable."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $arrayCreate?", "Assistant": "The arguments for `$arrayCreate` are as follows:\n\n- **variable** (String): The variable to load it to, accessed with $env (Required)\n- **length** (Number): The default length of the array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $arrayCreate added?", "Assistant": "$arrayCreate was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayCreate nativly to forgescipt?", "Assistant": "Yes, $arrayCreate is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $arrayEvery?", "Assistant": "Loops through every element of the array with a condition that must pass every element\n\nExample usage:\n```js\n$arrayEvery[name_example;variable_example;code_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $arrayEvery?", "Assistant": "Use `$arrayEvery` like this:\n```js\n$arrayEvery[name_example;variable_example;code_example]\n```\n\nThis function loops through every element of the array with a condition that must pass every element."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayEvery in forgescript?", "Assistant": "Yes, You use `$arrayEvery` like this:\n```js\n$arrayEvery[name_example;variable_example;code_example]\n```\n\nThis function loops through every element of the array with a condition that must pass every element."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $arrayEvery?", "Assistant": "The arguments for `$arrayEvery` are as follows:\n\n- **name** (String): The variable that holds the array (Required)\n- **variable** (String): The variable to load the element value to (Required)\n- **code** (String): The code to execute for every element (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $arrayEvery added?", "Assistant": "$arrayEvery was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayEvery nativly to forgescipt?", "Assistant": "Yes, $arrayEvery is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $arrayFill?", "Assistant": "Fills an array with given value\n\nExample usage:\n```js\n$arrayFill[variable_example;{key: value_value}]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $arrayFill?", "Assistant": "Use `$arrayFill` like this:\n```js\n$arrayFill[variable_example;{key: value_value}]\n```\n\nThis function fills an array with given value."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayFill in forgescript?", "Assistant": "Yes, You use `$arrayFill` like this:\n```js\n$arrayFill[variable_example;{key: value_value}]\n```\n\nThis function fills an array with given value."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $arrayFill?", "Assistant": "The arguments for `$arrayFill` are as follows:\n\n- **variable** (String): The variable to load array from (Required)\n- **value** (Json): The value to fill the array with (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $arrayFill added?", "Assistant": "$arrayFill was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayFill nativly to forgescipt?", "Assistant": "Yes, $arrayFill is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $arrayFindIndex?", "Assistant": "Finds the index of a first found element in the array\n\nExample usage:\n```js\n$arrayFindIndex[name_example;variable_example;code_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $arrayFindIndex?", "Assistant": "Use `$arrayFindIndex` like this:\n```js\n$arrayFindIndex[name_example;variable_example;code_example]\n```\n\nThis function finds the index of a first found element in the array."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayFindIndex in forgescript?", "Assistant": "Yes, You use `$arrayFindIndex` like this:\n```js\n$arrayFindIndex[name_example;variable_example;code_example]\n```\n\nThis function finds the index of a first found element in the array."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $arrayFindIndex?", "Assistant": "The arguments for `$arrayFindIndex` are as follows:\n\n- **name** (String): The variable that holds the array (Required)\n- **variable** (String): The variable to load the element value to (Required)\n- **code** (String): The code to execute for every element (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $arrayFindIndex added?", "Assistant": "$arrayFindIndex was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayFindIndex nativly to forgescipt?", "Assistant": "Yes, $arrayFindIndex is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $arrayFindLastIndex?", "Assistant": "Finds the index of a last found element in the array\n\nExample usage:\n```js\n$arrayFindLastIndex[name_example;variable_example;code_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $arrayFindLastIndex?", "Assistant": "Use `$arrayFindLastIndex` like this:\n```js\n$arrayFindLastIndex[name_example;variable_example;code_example]\n```\n\nThis function finds the index of a last found element in the array."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayFindLastIndex in forgescript?", "Assistant": "Yes, You use `$arrayFindLastIndex` like this:\n```js\n$arrayFindLastIndex[name_example;variable_example;code_example]\n```\n\nThis function finds the index of a last found element in the array."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $arrayFindLastIndex?", "Assistant": "The arguments for `$arrayFindLastIndex` are as follows:\n\n- **name** (String): The variable that holds the array (Required)\n- **variable** (String): The variable to load the element value to (Required)\n- **code** (String): The code to execute for every element (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $arrayFindLastIndex added?", "Assistant": "$arrayFindLastIndex was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayFindLastIndex nativly to forgescipt?", "Assistant": "Yes, $arrayFindLastIndex is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $arrayForEach?", "Assistant": "Loops through every element of the array\n\nExample usage:\n```js\n$arrayForEach[name_example;variable_example;code_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $arrayForEach?", "Assistant": "Use `$arrayForEach` like this:\n```js\n$arrayForEach[name_example;variable_example;code_example]\n```\n\nThis function loops through every element of the array."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayForEach in forgescript?", "Assistant": "Yes, You use `$arrayForEach` like this:\n```js\n$arrayForEach[name_example;variable_example;code_example]\n```\n\nThis function loops through every element of the array."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $arrayForEach?", "Assistant": "The arguments for `$arrayForEach` are as follows:\n\n- **name** (String): The variable that holds the array (Required)\n- **variable** (String): The variable to load the element value to (Required)\n- **code** (String): The code to execute for every element (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $arrayForEach added?", "Assistant": "$arrayForEach was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayForEach nativly to forgescipt?", "Assistant": "Yes, $arrayForEach is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $arrayIncludes?", "Assistant": "Checks whether a value exists in an array\n\nExample usage:\n```js\n$arrayIncludes[variable_example;value_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $arrayIncludes?", "Assistant": "Use `$arrayIncludes` like this:\n```js\n$arrayIncludes[variable_example;value_example]\n```\n\nThis function checks whether a value exists in an array."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayIncludes in forgescript?", "Assistant": "Yes, You use `$arrayIncludes` like this:\n```js\n$arrayIncludes[variable_example;value_example]\n```\n\nThis function checks whether a value exists in an array."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $arrayIncludes?", "Assistant": "The arguments for `$arrayIncludes` are as follows:\n\n- **variable** (String): The variable the array is held on (Required)\n- **value** (String): The value to check for (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $arrayIncludes added?", "Assistant": "$arrayIncludes was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayIncludes nativly to forgescipt?", "Assistant": "Yes, $arrayIncludes is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $arrayIndexOf?", "Assistant": "Gets the index of a first found element in the array\n\nExample usage:\n```js\n$arrayIndexOf[name_example;value_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $arrayIndexOf?", "Assistant": "Use `$arrayIndexOf` like this:\n```js\n$arrayIndexOf[name_example;value_example]\n```\n\nThis function gets the index of a first found element in the array."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayIndexOf in forgescript?", "Assistant": "Yes, You use `$arrayIndexOf` like this:\n```js\n$arrayIndexOf[name_example;value_example]\n```\n\nThis function gets the index of a first found element in the array."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $arrayIndexOf?", "Assistant": "The arguments for `$arrayIndexOf` are as follows:\n\n- **name** (String): The variable that holds the array (Required)\n- **value** (String): The exact value to get its index (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $arrayIndexOf added?", "Assistant": "$arrayIndexOf was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayIndexOf nativly to forgescipt?", "Assistant": "Yes, $arrayIndexOf is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $arrayJoin?", "Assistant": "Joins all elements from an array with given separator\n\nExample usage:\n```js\n$arrayJoin[variable_example;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $arrayJoin?", "Assistant": "Use `$arrayJoin` like this:\n```js\n$arrayJoin[variable_example;separator_example]\n```\n\nThis function joins all elements from an array with given separator."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayJoin in forgescript?", "Assistant": "Yes, You use `$arrayJoin` like this:\n```js\n$arrayJoin[variable_example;separator_example]\n```\n\nThis function joins all elements from an array with given separator."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $arrayJoin?", "Assistant": "The arguments for `$arrayJoin` are as follows:\n\n- **variable** (String): The variable the array is held on (Required)\n- **separator** (String): The separator to use for every element (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $arrayJoin added?", "Assistant": "$arrayJoin was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayJoin nativly to forgescipt?", "Assistant": "Yes, $arrayJoin is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $arrayLastIndexOf?", "Assistant": "Gets the index of a last found element in the array\n\nExample usage:\n```js\n$arrayLastIndexOf[name_example;value_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $arrayLastIndexOf?", "Assistant": "Use `$arrayLastIndexOf` like this:\n```js\n$arrayLastIndexOf[name_example;value_example]\n```\n\nThis function gets the index of a last found element in the array."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayLastIndexOf in forgescript?", "Assistant": "Yes, You use `$arrayLastIndexOf` like this:\n```js\n$arrayLastIndexOf[name_example;value_example]\n```\n\nThis function gets the index of a last found element in the array."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $arrayLastIndexOf?", "Assistant": "The arguments for `$arrayLastIndexOf` are as follows:\n\n- **name** (String): The variable that holds the array (Required)\n- **value** (String): The exact value to get its last index (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $arrayLastIndexOf added?", "Assistant": "$arrayLastIndexOf was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayLastIndexOf nativly to forgescipt?", "Assistant": "Yes, $arrayLastIndexOf is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $arrayLength?", "Assistant": "Returns the numbers of elements in an array\n\nExample usage:\n```js\n$arrayLength[name_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $arrayLength?", "Assistant": "Use `$arrayLength` like this:\n```js\n$arrayLength[name_example]\n```\n\nThis function returns the numbers of elements in an array."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayLength in forgescript?", "Assistant": "Yes, You use `$arrayLength` like this:\n```js\n$arrayLength[name_example]\n```\n\nThis function returns the numbers of elements in an array."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $arrayLength?", "Assistant": "The arguments for `$arrayLength` are as follows:\n\n- **name** (String): The variable that holds the array (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $arrayLength added?", "Assistant": "$arrayLength was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayLength nativly to forgescipt?", "Assistant": "Yes, $arrayLength is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $arrayLoad?", "Assistant": "Loads an array to an environment variable\n\nExample usage:\n```js\n$arrayLoad[variable_example;separator_example;values_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $arrayLoad?", "Assistant": "Use `$arrayLoad` like this:\n```js\n$arrayLoad[variable_example;separator_example;values_example]\n```\n\nThis function loads an array to an environment variable."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayLoad in forgescript?", "Assistant": "Yes, You use `$arrayLoad` like this:\n```js\n$arrayLoad[variable_example;separator_example;values_example]\n```\n\nThis function loads an array to an environment variable."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $arrayLoad?", "Assistant": "The arguments for `$arrayLoad` are as follows:\n\n- **variable** (String): The variable name to load this array to (Required)\n- **separator** (String): The separator to use for the array elements (Optional)\n- **values** (String): The elements of the array (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $arrayLoad added?", "Assistant": "$arrayLoad was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayLoad nativly to forgescipt?", "Assistant": "Yes, $arrayLoad is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $arrayMap?", "Assistant": "Maps through every element of the array and loads the results to another array\n\nExample usage:\n```js\n$arrayMap[name_example;variable_example;code_example;other_variable_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $arrayMap?", "Assistant": "Use `$arrayMap` like this:\n```js\n$arrayMap[name_example;variable_example;code_example;other_variable_example]\n```\n\nThis function maps through every element of the array and loads the results to another array."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayMap in forgescript?", "Assistant": "Yes, You use `$arrayMap` like this:\n```js\n$arrayMap[name_example;variable_example;code_example;other_variable_example]\n```\n\nThis function maps through every element of the array and loads the results to another array."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $arrayMap?", "Assistant": "The arguments for `$arrayMap` are as follows:\n\n- **name** (String): The variable that holds the array (Required)\n- **variable** (String): The variable to load the element value to (Required)\n- **code** (String): The code to execute for every element (Required)\n- **other variable** (String): The other variable to load the result to, leave empty to return output (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $arrayMap added?", "Assistant": "$arrayMap was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayMap nativly to forgescipt?", "Assistant": "Yes, $arrayMap is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $arrayPop?", "Assistant": "Deletes the last element of the array and returns it\n\nExample usage:\n```js\n$arrayPop[name_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $arrayPop?", "Assistant": "Use `$arrayPop` like this:\n```js\n$arrayPop[name_example]\n```\n\nThis function deletes the last element of the array and returns it."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayPop in forgescript?", "Assistant": "Yes, You use `$arrayPop` like this:\n```js\n$arrayPop[name_example]\n```\n\nThis function deletes the last element of the array and returns it."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $arrayPop?", "Assistant": "The arguments for `$arrayPop` are as follows:\n\n- **name** (String): The variable that holds the array (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $arrayPop added?", "Assistant": "$arrayPop was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayPop nativly to forgescipt?", "Assistant": "Yes, $arrayPop is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $arrayPush?", "Assistant": "Appends an element to an array\n\nExample usage:\n```js\n$arrayPush[name_example;values_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $arrayPush?", "Assistant": "Use `$arrayPush` like this:\n```js\n$arrayPush[name_example;values_example]\n```\n\nThis function appends an element to an array."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayPush in forgescript?", "Assistant": "Yes, You use `$arrayPush` like this:\n```js\n$arrayPush[name_example;values_example]\n```\n\nThis function appends an element to an array."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $arrayPush?", "Assistant": "The arguments for `$arrayPush` are as follows:\n\n- **name** (String): The variable that holds the array (Required)\n- **values** (String): The values to append at the end of the array (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $arrayPush added?", "Assistant": "$arrayPush was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayPush nativly to forgescipt?", "Assistant": "Yes, $arrayPush is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $arrayPushJSON?", "Assistant": "Appends an element to an array\n\nExample usage:\n```js\n$arrayPushJSON[name_example;{key: values_value}]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $arrayPushJSON?", "Assistant": "Use `$arrayPushJSON` like this:\n```js\n$arrayPushJSON[name_example;{key: values_value}]\n```\n\nThis function appends an element to an array."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayPushJSON in forgescript?", "Assistant": "Yes, You use `$arrayPushJSON` like this:\n```js\n$arrayPushJSON[name_example;{key: values_value}]\n```\n\nThis function appends an element to an array."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $arrayPushJSON?", "Assistant": "The arguments for `$arrayPushJSON` are as follows:\n\n- **name** (String): The variable that holds the array (Required)\n- **values** (Json): The values to append at the end of the array (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $arrayPushJSON added?", "Assistant": "$arrayPushJSON was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayPushJSON nativly to forgescipt?", "Assistant": "Yes, $arrayPushJSON is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $arrayRandomIndex?", "Assistant": "Returns a random index\n\nExample usage:\n```js\n$arrayRandomIndex[variable_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $arrayRandomIndex?", "Assistant": "Use `$arrayRandomIndex` like this:\n```js\n$arrayRandomIndex[variable_example]\n```\n\nThis function returns a random index."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayRandomIndex in forgescript?", "Assistant": "Yes, You use `$arrayRandomIndex` like this:\n```js\n$arrayRandomIndex[variable_example]\n```\n\nThis function returns a random index."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $arrayRandomIndex?", "Assistant": "The arguments for `$arrayRandomIndex` are as follows:\n\n- **variable** (String): The variable the array is held on (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $arrayRandomIndex added?", "Assistant": "$arrayRandomIndex was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayRandomIndex nativly to forgescipt?", "Assistant": "Yes, $arrayRandomIndex is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $arrayRandomValue?", "Assistant": "Returns a random element\n\nExample usage:\n```js\n$arrayRandomValue[variable_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $arrayRandomValue?", "Assistant": "Use `$arrayRandomValue` like this:\n```js\n$arrayRandomValue[variable_example]\n```\n\nThis function returns a random element."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayRandomValue in forgescript?", "Assistant": "Yes, You use `$arrayRandomValue` like this:\n```js\n$arrayRandomValue[variable_example]\n```\n\nThis function returns a random element."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $arrayRandomValue?", "Assistant": "The arguments for `$arrayRandomValue` are as follows:\n\n- **variable** (String): The variable the array is held on (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $arrayRandomValue added?", "Assistant": "$arrayRandomValue was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayRandomValue nativly to forgescipt?", "Assistant": "Yes, $arrayRandomValue is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $arrayReduce?", "Assistant": "Reduces an array of elements and returns the result\n\nExample usage:\n```js\n$arrayReduce[name_example;variable_example;other_variable_example;code_example;76]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $arrayReduce?", "Assistant": "Use `$arrayReduce` like this:\n```js\n$arrayReduce[name_example;variable_example;other_variable_example;code_example;76]\n```\n\nThis function reduces an array of elements and returns the result."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayReduce in forgescript?", "Assistant": "Yes, You use `$arrayReduce` like this:\n```js\n$arrayReduce[name_example;variable_example;other_variable_example;code_example;76]\n```\n\nThis function reduces an array of elements and returns the result."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $arrayReduce?", "Assistant": "The arguments for `$arrayReduce` are as follows:\n\n- **name** (String): The variable that holds the array (Required)\n- **variable** (String): The variable to load the element value to (Required)\n- **other variable** (String): The other variable to load the second element to (Required)\n- **code** (String): The code to execute for every element, must return a number (Required)\n- **default value** (Number): The default value, defaults to 0 (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $arrayReduce added?", "Assistant": "$arrayReduce was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayReduce nativly to forgescipt?", "Assistant": "Yes, $arrayReduce is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $arrayReverse?", "Assistant": "Reverses an array and loads it to another variable\n\nExample usage:\n```js\n$arrayReverse[variable_example;other_variable_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $arrayReverse?", "Assistant": "Use `$arrayReverse` like this:\n```js\n$arrayReverse[variable_example;other_variable_example]\n```\n\nThis function reverses an array and loads it to another variable."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayReverse in forgescript?", "Assistant": "Yes, You use `$arrayReverse` like this:\n```js\n$arrayReverse[variable_example;other_variable_example]\n```\n\nThis function reverses an array and loads it to another variable."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $arrayReverse?", "Assistant": "The arguments for `$arrayReverse` are as follows:\n\n- **variable** (String): The variable where the array is held (Required)\n- **other variable** (String): The variable to load the result to, leave empty to return output (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $arrayReverse added?", "Assistant": "$arrayReverse was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayReverse nativly to forgescipt?", "Assistant": "Yes, $arrayReverse is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $arrayShift?", "Assistant": "Deletes the first element of the array and returns it\n\nExample usage:\n```js\n$arrayShift[name_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $arrayShift?", "Assistant": "Use `$arrayShift` like this:\n```js\n$arrayShift[name_example]\n```\n\nThis function deletes the first element of the array and returns it."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayShift in forgescript?", "Assistant": "Yes, You use `$arrayShift` like this:\n```js\n$arrayShift[name_example]\n```\n\nThis function deletes the first element of the array and returns it."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $arrayShift?", "Assistant": "The arguments for `$arrayShift` are as follows:\n\n- **name** (String): The variable that holds the array (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $arrayShift added?", "Assistant": "$arrayShift was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayShift nativly to forgescipt?", "Assistant": "Yes, $arrayShift is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $arrayShuffle?", "Assistant": "Shuffles given array\n\nExample usage:\n```js\n$arrayShuffle[variable_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $arrayShuffle?", "Assistant": "Use `$arrayShuffle` like this:\n```js\n$arrayShuffle[variable_example]\n```\n\nThis function shuffles given array."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayShuffle in forgescript?", "Assistant": "Yes, You use `$arrayShuffle` like this:\n```js\n$arrayShuffle[variable_example]\n```\n\nThis function shuffles given array."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $arrayShuffle?", "Assistant": "The arguments for `$arrayShuffle` are as follows:\n\n- **variable** (String): The variable the array is held on (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $arrayShuffle added?", "Assistant": "$arrayShuffle was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayShuffle nativly to forgescipt?", "Assistant": "Yes, $arrayShuffle is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $arraySlice?", "Assistant": "Slices an array and loads it to another variable\n\nExample usage:\n```js\n$arraySlice[variable_example;other_variable_example;5;61]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $arraySlice?", "Assistant": "Use `$arraySlice` like this:\n```js\n$arraySlice[variable_example;other_variable_example;5;61]\n```\n\nThis function slices an array and loads it to another variable."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arraySlice in forgescript?", "Assistant": "Yes, You use `$arraySlice` like this:\n```js\n$arraySlice[variable_example;other_variable_example;5;61]\n```\n\nThis function slices an array and loads it to another variable."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $arraySlice?", "Assistant": "The arguments for `$arraySlice` are as follows:\n\n- **variable** (String): The variable where the array is held (Required)\n- **other variable** (String): The variable to load the result to, leave empty to return output (Optional)\n- **start** (Number): The start index to slice (Required)\n- **end** (Number): The end index to slice (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $arraySlice added?", "Assistant": "$arraySlice was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arraySlice nativly to forgescipt?", "Assistant": "Yes, $arraySlice is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $arraySome?", "Assistant": "Loops through every element of the array to find a match\n\nExample usage:\n```js\n$arraySome[name_example;variable_example;code_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $arraySome?", "Assistant": "Use `$arraySome` like this:\n```js\n$arraySome[name_example;variable_example;code_example]\n```\n\nThis function loops through every element of the array to find a match."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arraySome in forgescript?", "Assistant": "Yes, You use `$arraySome` like this:\n```js\n$arraySome[name_example;variable_example;code_example]\n```\n\nThis function loops through every element of the array to find a match."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $arraySome?", "Assistant": "The arguments for `$arraySome` are as follows:\n\n- **name** (String): The variable that holds the array (Required)\n- **variable** (String): The variable to load the element value to (Required)\n- **code** (String): The code to execute for every element (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $arraySome added?", "Assistant": "$arraySome was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arraySome nativly to forgescipt?", "Assistant": "Yes, $arraySome is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $arraySort?", "Assistant": "Sorts given array\n\nExample usage:\n```js\n$arraySort[variable_example;other_variable_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $arraySort?", "Assistant": "Use `$arraySort` like this:\n```js\n$arraySort[variable_example;other_variable_example]\n```\n\nThis function sorts given array."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arraySort in forgescript?", "Assistant": "Yes, You use `$arraySort` like this:\n```js\n$arraySort[variable_example;other_variable_example]\n```\n\nThis function sorts given array."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $arraySort?", "Assistant": "The arguments for `$arraySort` are as follows:\n\n- **variable** (String): The variable the array is held on (Required)\n- **other variable** (String): The variable to load result to, leave empty to return output (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $arraySort added?", "Assistant": "$arraySort was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arraySort nativly to forgescipt?", "Assistant": "Yes, $arraySort is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $arraySplice?", "Assistant": "Removes x elements starting from y index, returns deleted elements\n\nExample usage:\n```js\n$arraySplice[variable_example;14;69;elements_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $arraySplice?", "Assistant": "Use `$arraySplice` like this:\n```js\n$arraySplice[variable_example;14;69;elements_example]\n```\n\nThis function removes x elements starting from y index, returns deleted elements."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arraySplice in forgescript?", "Assistant": "Yes, You use `$arraySplice` like this:\n```js\n$arraySplice[variable_example;14;69;elements_example]\n```\n\nThis function removes x elements starting from y index, returns deleted elements."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $arraySplice?", "Assistant": "The arguments for `$arraySplice` are as follows:\n\n- **variable** (String): The variable the array is held on (Required)\n- **index** (Number): The start index (Required)\n- **delete count** (Number): The number of items to delete (Required)\n- **elements** (String): The elements to insert in the deleted indexes (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $arraySplice added?", "Assistant": "$arraySplice was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arraySplice nativly to forgescipt?", "Assistant": "Yes, $arraySplice is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $arrayUnload?", "Assistant": "Unloads an array from an environment variable\n\nExample usage:\n```js\n$arrayUnload[variable_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $arrayUnload?", "Assistant": "Use `$arrayUnload` like this:\n```js\n$arrayUnload[variable_example]\n```\n\nThis function unloads an array from an environment variable."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayUnload in forgescript?", "Assistant": "Yes, You use `$arrayUnload` like this:\n```js\n$arrayUnload[variable_example]\n```\n\nThis function unloads an array from an environment variable."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $arrayUnload?", "Assistant": "The arguments for `$arrayUnload` are as follows:\n\n- **variable** (String): The variable name to unload this array from (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $arrayUnload added?", "Assistant": "$arrayUnload was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayUnload nativly to forgescipt?", "Assistant": "Yes, $arrayUnload is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $arrayUnshift?", "Assistant": "Adds elements to the beginning of an array\n\nExample usage:\n```js\n$arrayUnshift[name_example;values_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $arrayUnshift?", "Assistant": "Use `$arrayUnshift` like this:\n```js\n$arrayUnshift[name_example;values_example]\n```\n\nThis function adds elements to the beginning of an array."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayUnshift in forgescript?", "Assistant": "Yes, You use `$arrayUnshift` like this:\n```js\n$arrayUnshift[name_example;values_example]\n```\n\nThis function adds elements to the beginning of an array."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $arrayUnshift?", "Assistant": "The arguments for `$arrayUnshift` are as follows:\n\n- **name** (String): The variable that holds the array (Required)\n- **values** (String): The values to append at the start of the array (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $arrayUnshift added?", "Assistant": "$arrayUnshift was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayUnshift nativly to forgescipt?", "Assistant": "Yes, $arrayUnshift is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $arrayUnshiftJSON?", "Assistant": "Adds elements to the beginning of an array\n\nExample usage:\n```js\n$arrayUnshiftJSON[name_example;{key: values_value}]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $arrayUnshiftJSON?", "Assistant": "Use `$arrayUnshiftJSON` like this:\n```js\n$arrayUnshiftJSON[name_example;{key: values_value}]\n```\n\nThis function adds elements to the beginning of an array."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayUnshiftJSON in forgescript?", "Assistant": "Yes, You use `$arrayUnshiftJSON` like this:\n```js\n$arrayUnshiftJSON[name_example;{key: values_value}]\n```\n\nThis function adds elements to the beginning of an array."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $arrayUnshiftJSON?", "Assistant": "The arguments for `$arrayUnshiftJSON` are as follows:\n\n- **name** (String): The variable that holds the array (Required)\n- **values** (Json): The values to append at the start of the array (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $arrayUnshiftJSON added?", "Assistant": "$arrayUnshiftJSON was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $arrayUnshiftJSON nativly to forgescipt?", "Assistant": "Yes, $arrayUnshiftJSON is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $getSplitTextLength?", "Assistant": "Gets count of elements from $textSplit\n\nExample usage:\n```js\n$getSplitTextLength[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $getSplitTextLength?", "Assistant": "Use `$getSplitTextLength` like this:\n```js\n$getSplitTextLength[]\n```\n\nThis function gets count of elements from $textsplit."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $getSplitTextLength in forgescript?", "Assistant": "Yes, You use `$getSplitTextLength` like this:\n```js\n$getSplitTextLength[]\n```\n\nThis function gets count of elements from $textsplit."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $getSplitTextLength?", "Assistant": "The arguments for `$getSplitTextLength` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $getSplitTextLength added?", "Assistant": "$getSplitTextLength was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $getSplitTextLength nativly to forgescipt?", "Assistant": "Yes, $getSplitTextLength is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $segmentTextSplit?", "Assistant": "Creates an array on given text using segmenter\n\nExample usage:\n```js\n$segmentTextSplit[text_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $segmentTextSplit?", "Assistant": "Use `$segmentTextSplit` like this:\n```js\n$segmentTextSplit[text_example]\n```\n\nThis function creates an array on given text using segmenter."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $segmentTextSplit in forgescript?", "Assistant": "Yes, You use `$segmentTextSplit` like this:\n```js\n$segmentTextSplit[text_example]\n```\n\nThis function creates an array on given text using segmenter."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $segmentTextSplit?", "Assistant": "The arguments for `$segmentTextSplit` are as follows:\n\n- **text** (String): The text to split (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $segmentTextSplit added?", "Assistant": "$segmentTextSplit was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $segmentTextSplit nativly to forgescipt?", "Assistant": "Yes, $segmentTextSplit is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $splitText?", "Assistant": "Gets element of textSplit\n\nExample usage:\n```js\n$splitText[33]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $splitText?", "Assistant": "Use `$splitText` like this:\n```js\n$splitText[33]\n```\n\nThis function gets element of textsplit."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $splitText in forgescript?", "Assistant": "Yes, You use `$splitText` like this:\n```js\n$splitText[33]\n```\n\nThis function gets element of textsplit."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $splitText?", "Assistant": "The arguments for `$splitText` are as follows:\n\n- **index** (Number): The index to get split at (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $splitText added?", "Assistant": "$splitText was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $splitText nativly to forgescipt?", "Assistant": "Yes, $splitText is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $splitTextJoin?", "Assistant": "Joins all elements from array with given separator\n\nExample usage:\n```js\n$splitTextJoin[separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $splitTextJoin?", "Assistant": "Use `$splitTextJoin` like this:\n```js\n$splitTextJoin[separator_example]\n```\n\nThis function joins all elements from array with given separator."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $splitTextJoin in forgescript?", "Assistant": "Yes, You use `$splitTextJoin` like this:\n```js\n$splitTextJoin[separator_example]\n```\n\nThis function joins all elements from array with given separator."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $splitTextJoin?", "Assistant": "The arguments for `$splitTextJoin` are as follows:\n\n- **separator** (String): The separator to use for every element (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $splitTextJoin added?", "Assistant": "$splitTextJoin was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $splitTextJoin nativly to forgescipt?", "Assistant": "Yes, $splitTextJoin is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $textSplit?", "Assistant": "Creates an array on given text with a separator\n\nExample usage:\n```js\n$textSplit[text_example;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $textSplit?", "Assistant": "Use `$textSplit` like this:\n```js\n$textSplit[text_example;separator_example]\n```\n\nThis function creates an array on given text with a separator."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $textSplit in forgescript?", "Assistant": "Yes, You use `$textSplit` like this:\n```js\n$textSplit[text_example;separator_example]\n```\n\nThis function creates an array on given text with a separator."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $textSplit?", "Assistant": "The arguments for `$textSplit` are as follows:\n\n- **text** (String): The text to split (Required)\n- **separator** (String): The separator to use (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $textSplit added?", "Assistant": "$textSplit was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $textSplit nativly to forgescipt?", "Assistant": "Yes, $textSplit is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $fetchAuditLog?", "Assistant": "Fetches an audit log using the type of it\n\nExample usage:\n```js\n$fetchAuditLog[data;ThreadCreate;id;59;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $fetchAuditLog?", "Assistant": "Use `$fetchAuditLog` like this:\n```js\n$fetchAuditLog[data;ThreadCreate;id;59;separator_example]\n```\n\nThis function fetches an audit log using the type of it."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $fetchAuditLog in forgescript?", "Assistant": "Yes, You use `$fetchAuditLog` like this:\n```js\n$fetchAuditLog[data;ThreadCreate;id;59;separator_example]\n```\n\nThis function fetches an audit log using the type of it."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $fetchAuditLog?", "Assistant": "The arguments for `$fetchAuditLog` are as follows:\n\n- **guild ID** (Guild): The guild to get audit log from (Required)\n- **type** (Enum): The event type of the log (Required)\n- **property** (Enum): The property to pull from the audit log (Required)\n- **index** (Number): The index of the entry to use (Optional)\n- **separator** (String): The separator to use in case of array output (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $fetchAuditLog added?", "Assistant": "$fetchAuditLog was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $fetchAuditLog nativly to forgescipt?", "Assistant": "Yes, $fetchAuditLog is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $fetchAuditLogCount?", "Assistant": "Fetches audit log count using the type of it\n\nExample usage:\n```js\n$fetchAuditLogCount[data;StickerCreate;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $fetchAuditLogCount?", "Assistant": "Use `$fetchAuditLogCount` like this:\n```js\n$fetchAuditLogCount[data;StickerCreate;data]\n```\n\nThis function fetches audit log count using the type of it."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $fetchAuditLogCount in forgescript?", "Assistant": "Yes, You use `$fetchAuditLogCount` like this:\n```js\n$fetchAuditLogCount[data;StickerCreate;data]\n```\n\nThis function fetches audit log count using the type of it."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $fetchAuditLogCount?", "Assistant": "The arguments for `$fetchAuditLogCount` are as follows:\n\n- **guild ID** (Guild): The guild to get audit log from (Required)\n- **type** (Enum): The event type of the log (Required)\n- **user** (User): The user to filter by (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $fetchAuditLogCount added?", "Assistant": "$fetchAuditLogCount was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $fetchAuditLogCount nativly to forgescipt?", "Assistant": "Yes, $fetchAuditLogCount is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $fetchUserAuditLog?", "Assistant": "Fetches an audit log from an user using the type of it\n\nExample usage:\n```js\n$fetchUserAuditLog[data;data;MessageBulkDelete;id;44;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $fetchUserAuditLog?", "Assistant": "Use `$fetchUserAuditLog` like this:\n```js\n$fetchUserAuditLog[data;data;MessageBulkDelete;id;44;separator_example]\n```\n\nThis function fetches an audit log from an user using the type of it."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $fetchUserAuditLog in forgescript?", "Assistant": "Yes, You use `$fetchUserAuditLog` like this:\n```js\n$fetchUserAuditLog[data;data;MessageBulkDelete;id;44;separator_example]\n```\n\nThis function fetches an audit log from an user using the type of it."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $fetchUserAuditLog?", "Assistant": "The arguments for `$fetchUserAuditLog` are as follows:\n\n- **guild ID** (Guild): The guild to get audit log from (Required)\n- **user** (User): The user to filter by (Optional)\n- **type** (Enum): The event type of the log (Required)\n- **property** (Enum): The property to pull from the audit log (Required)\n- **index** (Number): The index of the entry to use (Optional)\n- **separator** (String): The separator to use in case of array output (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $fetchUserAuditLog added?", "Assistant": "$fetchUserAuditLog was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $fetchUserAuditLog nativly to forgescipt?", "Assistant": "Yes, $fetchUserAuditLog is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $automodActionType?", "Assistant": "The action type automod used\n\nExample usage:\n```js\n$automodActionType[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $automodActionType?", "Assistant": "Use `$automodActionType` like this:\n```js\n$automodActionType[]\n```\n\nThis function the action type automod used."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $automodActionType in forgescript?", "Assistant": "Yes, You use `$automodActionType` like this:\n```js\n$automodActionType[]\n```\n\nThis function the action type automod used."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $automodActionType?", "Assistant": "The arguments for `$automodActionType` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $automodActionType added?", "Assistant": "$automodActionType was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $automodActionType nativly to forgescipt?", "Assistant": "Yes, $automodActionType is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $automodAlertSystemMessageID?", "Assistant": "The message sent by automod\n\nExample usage:\n```js\n$automodAlertSystemMessageID[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $automodAlertSystemMessageID?", "Assistant": "Use `$automodAlertSystemMessageID` like this:\n```js\n$automodAlertSystemMessageID[]\n```\n\nThis function the message sent by automod."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $automodAlertSystemMessageID in forgescript?", "Assistant": "Yes, You use `$automodAlertSystemMessageID` like this:\n```js\n$automodAlertSystemMessageID[]\n```\n\nThis function the message sent by automod."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $automodAlertSystemMessageID?", "Assistant": "The arguments for `$automodAlertSystemMessageID` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $automodAlertSystemMessageID added?", "Assistant": "$automodAlertSystemMessageID was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $automodAlertSystemMessageID nativly to forgescipt?", "Assistant": "Yes, $automodAlertSystemMessageID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $automodChannelID?", "Assistant": "The channel id for automod\n\nExample usage:\n```js\n$automodChannelID[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $automodChannelID?", "Assistant": "Use `$automodChannelID` like this:\n```js\n$automodChannelID[]\n```\n\nThis function the channel id for automod."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $automodChannelID in forgescript?", "Assistant": "Yes, You use `$automodChannelID` like this:\n```js\n$automodChannelID[]\n```\n\nThis function the channel id for automod."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $automodChannelID?", "Assistant": "The arguments for `$automodChannelID` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $automodChannelID added?", "Assistant": "$automodChannelID was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $automodChannelID nativly to forgescipt?", "Assistant": "Yes, $automodChannelID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $automodContent?", "Assistant": "The content automod acted upon\n\nExample usage:\n```js\n$automodContent[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $automodContent?", "Assistant": "Use `$automodContent` like this:\n```js\n$automodContent[]\n```\n\nThis function the content automod acted upon."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $automodContent in forgescript?", "Assistant": "Yes, You use `$automodContent` like this:\n```js\n$automodContent[]\n```\n\nThis function the content automod acted upon."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $automodContent?", "Assistant": "The arguments for `$automodContent` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $automodContent added?", "Assistant": "$automodContent was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $automodContent nativly to forgescipt?", "Assistant": "Yes, $automodContent is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $automodCustomMessage?", "Assistant": "The custom message used by automod on this detection\n\nExample usage:\n```js\n$automodCustomMessage[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $automodCustomMessage?", "Assistant": "Use `$automodCustomMessage` like this:\n```js\n$automodCustomMessage[]\n```\n\nThis function the custom message used by automod on this detection."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $automodCustomMessage in forgescript?", "Assistant": "Yes, You use `$automodCustomMessage` like this:\n```js\n$automodCustomMessage[]\n```\n\nThis function the custom message used by automod on this detection."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $automodCustomMessage?", "Assistant": "The arguments for `$automodCustomMessage` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $automodCustomMessage added?", "Assistant": "$automodCustomMessage was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $automodCustomMessage nativly to forgescipt?", "Assistant": "Yes, $automodCustomMessage is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $automodDuration?", "Assistant": "The duration in ms by this automod action\n\nExample usage:\n```js\n$automodDuration[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $automodDuration?", "Assistant": "Use `$automodDuration` like this:\n```js\n$automodDuration[]\n```\n\nThis function the duration in ms by this automod action."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $automodDuration in forgescript?", "Assistant": "Yes, You use `$automodDuration` like this:\n```js\n$automodDuration[]\n```\n\nThis function the duration in ms by this automod action."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $automodDuration?", "Assistant": "The arguments for `$automodDuration` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $automodDuration added?", "Assistant": "$automodDuration was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $automodDuration nativly to forgescipt?", "Assistant": "Yes, $automodDuration is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $automodMatchedContent?", "Assistant": "The matched content automod acted upon\n\nExample usage:\n```js\n$automodMatchedContent[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $automodMatchedContent?", "Assistant": "Use `$automodMatchedContent` like this:\n```js\n$automodMatchedContent[]\n```\n\nThis function the matched content automod acted upon."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $automodMatchedContent in forgescript?", "Assistant": "Yes, You use `$automodMatchedContent` like this:\n```js\n$automodMatchedContent[]\n```\n\nThis function the matched content automod acted upon."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $automodMatchedContent?", "Assistant": "The arguments for `$automodMatchedContent` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $automodMatchedContent added?", "Assistant": "$automodMatchedContent was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $automodMatchedContent nativly to forgescipt?", "Assistant": "Yes, $automodMatchedContent is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $automodMatchedKeyword?", "Assistant": "The matched keyword the automod caught\n\nExample usage:\n```js\n$automodMatchedKeyword[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $automodMatchedKeyword?", "Assistant": "Use `$automodMatchedKeyword` like this:\n```js\n$automodMatchedKeyword[]\n```\n\nThis function the matched keyword the automod caught."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $automodMatchedKeyword in forgescript?", "Assistant": "Yes, You use `$automodMatchedKeyword` like this:\n```js\n$automodMatchedKeyword[]\n```\n\nThis function the matched keyword the automod caught."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $automodMatchedKeyword?", "Assistant": "The arguments for `$automodMatchedKeyword` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $automodMatchedKeyword added?", "Assistant": "$automodMatchedKeyword was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $automodMatchedKeyword nativly to forgescipt?", "Assistant": "Yes, $automodMatchedKeyword is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $automodRuleID?", "Assistant": "The rule id used by automod\n\nExample usage:\n```js\n$automodRuleID[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $automodRuleID?", "Assistant": "Use `$automodRuleID` like this:\n```js\n$automodRuleID[]\n```\n\nThis function the rule id used by automod."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $automodRuleID in forgescript?", "Assistant": "Yes, You use `$automodRuleID` like this:\n```js\n$automodRuleID[]\n```\n\nThis function the rule id used by automod."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $automodRuleID?", "Assistant": "The arguments for `$automodRuleID` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $automodRuleID added?", "Assistant": "$automodRuleID was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $automodRuleID nativly to forgescipt?", "Assistant": "Yes, $automodRuleID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $automodRuleTriggerType?", "Assistant": "The rule trigger type used by automod\n\nExample usage:\n```js\n$automodRuleTriggerType[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $automodRuleTriggerType?", "Assistant": "Use `$automodRuleTriggerType` like this:\n```js\n$automodRuleTriggerType[]\n```\n\nThis function the rule trigger type used by automod."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $automodRuleTriggerType in forgescript?", "Assistant": "Yes, You use `$automodRuleTriggerType` like this:\n```js\n$automodRuleTriggerType[]\n```\n\nThis function the rule trigger type used by automod."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $automodRuleTriggerType?", "Assistant": "The arguments for `$automodRuleTriggerType` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $automodRuleTriggerType added?", "Assistant": "$automodRuleTriggerType was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $automodRuleTriggerType nativly to forgescipt?", "Assistant": "Yes, $automodRuleTriggerType is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $createAutomodRule?", "Assistant": "Creates a new automod rule for a guild, returns rule id\n\nExample usage:\n```js\n$createAutomodRule[data;name_example;MentionSpam;MemberUpdate;false;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $createAutomodRule?", "Assistant": "Use `$createAutomodRule` like this:\n```js\n$createAutomodRule[data;name_example;MentionSpam;MemberUpdate;false;reason_example]\n```\n\nThis function creates a new automod rule for a guild, returns rule id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $createAutomodRule in forgescript?", "Assistant": "Yes, You use `$createAutomodRule` like this:\n```js\n$createAutomodRule[data;name_example;MentionSpam;MemberUpdate;false;reason_example]\n```\n\nThis function creates a new automod rule for a guild, returns rule id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $createAutomodRule?", "Assistant": "The arguments for `$createAutomodRule` are as follows:\n\n- **guild ID** (Guild): The guild to create automod rule on (Required)\n- **name** (String): The name of the automod rule (Required)\n- **trigger** (Enum): The trigger type of the automod rule (Required)\n- **event** (Enum): The event type of the automod rule (Required)\n- **enabled** (Boolean): Whether the automod rule should be enabled (Optional)\n- **reason** (String): The reason for creating the automod rule (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $createAutomodRule added?", "Assistant": "$createAutomodRule was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $createAutomodRule nativly to forgescipt?", "Assistant": "Yes, $createAutomodRule is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $deleteAutomodRule?", "Assistant": "Deletes an automod rule from a guild, returns bool\n\nExample usage:\n```js\n$deleteAutomodRule[data;data;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $deleteAutomodRule?", "Assistant": "Use `$deleteAutomodRule` like this:\n```js\n$deleteAutomodRule[data;data;reason_example]\n```\n\nThis function deletes an automod rule from a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteAutomodRule in forgescript?", "Assistant": "Yes, You use `$deleteAutomodRule` like this:\n```js\n$deleteAutomodRule[data;data;reason_example]\n```\n\nThis function deletes an automod rule from a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $deleteAutomodRule?", "Assistant": "The arguments for `$deleteAutomodRule` are as follows:\n\n- **guild ID** (Guild): The guild to delete automod rule from (Required)\n- **rule ID** (AutomodRule): The id of the automod rule to delete (Required)\n- **reason** (String): The reason for deleting the rule (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $deleteAutomodRule added?", "Assistant": "$deleteAutomodRule was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteAutomodRule nativly to forgescipt?", "Assistant": "Yes, $deleteAutomodRule is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $editAutomodRule?", "Assistant": "Edits an automod rule on a guild, returns bool\n\nExample usage:\n```js\n$editAutomodRule[data;data;name_example;MemberUpdate;true;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $editAutomodRule?", "Assistant": "Use `$editAutomodRule` like this:\n```js\n$editAutomodRule[data;data;name_example;MemberUpdate;true;reason_example]\n```\n\nThis function edits an automod rule on a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editAutomodRule in forgescript?", "Assistant": "Yes, You use `$editAutomodRule` like this:\n```js\n$editAutomodRule[data;data;name_example;MemberUpdate;true;reason_example]\n```\n\nThis function edits an automod rule on a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $editAutomodRule?", "Assistant": "The arguments for `$editAutomodRule` are as follows:\n\n- **guild ID** (Guild): The guild to edit automod rule on (Required)\n- **rule ID** (AutomodRule): The id of the automod rule to edit (Required)\n- **name** (String): The new name for the automod rule (Optional)\n- **event** (Enum): The new event type for the automod rule (Optional)\n- **enabled** (Boolean): Whether the automod rule should be enabled (Optional)\n- **reason** (String): The reason for editing the automod rule (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $editAutomodRule added?", "Assistant": "$editAutomodRule was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editAutomodRule nativly to forgescipt?", "Assistant": "Yes, $editAutomodRule is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $getAutomodRule?", "Assistant": "Returns an automod rule of a guild\n\nExample usage:\n```js\n$getAutomodRule[data;data;mentionTotalLimit;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $getAutomodRule?", "Assistant": "Use `$getAutomodRule` like this:\n```js\n$getAutomodRule[data;data;mentionTotalLimit;separator_example]\n```\n\nThis function returns an automod rule of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $getAutomodRule in forgescript?", "Assistant": "Yes, You use `$getAutomodRule` like this:\n```js\n$getAutomodRule[data;data;mentionTotalLimit;separator_example]\n```\n\nThis function returns an automod rule of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $getAutomodRule?", "Assistant": "The arguments for `$getAutomodRule` are as follows:\n\n- **guild ID** (Guild): The guild to get automod rule from (Required)\n- **rule ID** (AutomodRule): The id of the automod rule to get (Required)\n- **property** (Enum): The property of the automod rule to return (Optional)\n- **separator** (String): The separator to use in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $getAutomodRule added?", "Assistant": "$getAutomodRule was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $getAutomodRule nativly to forgescipt?", "Assistant": "Yes, $getAutomodRule is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setAutomodAction?", "Assistant": "Sets a new action for current automod rule\n\nExample usage:\n```js\n$setAutomodAction[SendAlertMessage;data;80;message_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setAutomodAction?", "Assistant": "Use `$setAutomodAction` like this:\n```js\n$setAutomodAction[SendAlertMessage;data;80;message_example]\n```\n\nThis function sets a new action for current automod rule."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setAutomodAction in forgescript?", "Assistant": "Yes, You use `$setAutomodAction` like this:\n```js\n$setAutomodAction[SendAlertMessage;data;80;message_example]\n```\n\nThis function sets a new action for current automod rule."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setAutomodAction?", "Assistant": "The arguments for `$setAutomodAction` are as follows:\n\n- **type** (Enum): The type of the automod rule action (Required)\n- **channel ID** (Channel): The channel to which content will be logged (Optional)\n- **duration** (Number): The timeout duration in seconds (Optional)\n- **message** (String): The custom message that is shown whenever a message is blocked (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setAutomodAction added?", "Assistant": "$setAutomodAction was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setAutomodAction nativly to forgescipt?", "Assistant": "Yes, $setAutomodAction is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setAutomodAllowList?", "Assistant": "Sets allowed words for current automod rule\n\nExample usage:\n```js\n$setAutomodAllowList[words_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setAutomodAllowList?", "Assistant": "Use `$setAutomodAllowList` like this:\n```js\n$setAutomodAllowList[words_example]\n```\n\nThis function sets allowed words for current automod rule."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setAutomodAllowList in forgescript?", "Assistant": "Yes, You use `$setAutomodAllowList` like this:\n```js\n$setAutomodAllowList[words_example]\n```\n\nThis function sets allowed words for current automod rule."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setAutomodAllowList?", "Assistant": "The arguments for `$setAutomodAllowList` are as follows:\n\n- **words** (String): The words to allow and whitelist (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setAutomodAllowList added?", "Assistant": "$setAutomodAllowList was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setAutomodAllowList nativly to forgescipt?", "Assistant": "Yes, $setAutomodAllowList is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setAutomodExemptChannels?", "Assistant": "Sets exempt channels for current automod rule\n\nExample usage:\n```js\n$setAutomodExemptChannels[channels_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setAutomodExemptChannels?", "Assistant": "Use `$setAutomodExemptChannels` like this:\n```js\n$setAutomodExemptChannels[channels_example]\n```\n\nThis function sets exempt channels for current automod rule."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setAutomodExemptChannels in forgescript?", "Assistant": "Yes, You use `$setAutomodExemptChannels` like this:\n```js\n$setAutomodExemptChannels[channels_example]\n```\n\nThis function sets exempt channels for current automod rule."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setAutomodExemptChannels?", "Assistant": "The arguments for `$setAutomodExemptChannels` are as follows:\n\n- **channels** (String): The channels that should not be affected by the automod rule (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setAutomodExemptChannels added?", "Assistant": "$setAutomodExemptChannels was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setAutomodExemptChannels nativly to forgescipt?", "Assistant": "Yes, $setAutomodExemptChannels is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setAutomodExemptRoles?", "Assistant": "Sets exempt roles for current automod rule\n\nExample usage:\n```js\n$setAutomodExemptRoles[roles_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setAutomodExemptRoles?", "Assistant": "Use `$setAutomodExemptRoles` like this:\n```js\n$setAutomodExemptRoles[roles_example]\n```\n\nThis function sets exempt roles for current automod rule."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setAutomodExemptRoles in forgescript?", "Assistant": "Yes, You use `$setAutomodExemptRoles` like this:\n```js\n$setAutomodExemptRoles[roles_example]\n```\n\nThis function sets exempt roles for current automod rule."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setAutomodExemptRoles?", "Assistant": "The arguments for `$setAutomodExemptRoles` are as follows:\n\n- **roles** (String): The roles that should not be affected by the automod rule (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setAutomodExemptRoles added?", "Assistant": "$setAutomodExemptRoles was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setAutomodExemptRoles nativly to forgescipt?", "Assistant": "Yes, $setAutomodExemptRoles is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setAutomodKeywordFilter?", "Assistant": "Sets disallowed words for current automod rule\n\nExample usage:\n```js\n$setAutomodKeywordFilter[words_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setAutomodKeywordFilter?", "Assistant": "Use `$setAutomodKeywordFilter` like this:\n```js\n$setAutomodKeywordFilter[words_example]\n```\n\nThis function sets disallowed words for current automod rule."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setAutomodKeywordFilter in forgescript?", "Assistant": "Yes, You use `$setAutomodKeywordFilter` like this:\n```js\n$setAutomodKeywordFilter[words_example]\n```\n\nThis function sets disallowed words for current automod rule."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setAutomodKeywordFilter?", "Assistant": "The arguments for `$setAutomodKeywordFilter` are as follows:\n\n- **words** (String): The words to disallow and blacklist (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setAutomodKeywordFilter added?", "Assistant": "$setAutomodKeywordFilter was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setAutomodKeywordFilter nativly to forgescipt?", "Assistant": "Yes, $setAutomodKeywordFilter is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setAutomodMentionRaidProtection?", "Assistant": "Sets mention raid protection for current automod rule\n\nExample usage:\n```js\n$setAutomodMentionRaidProtection[false]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setAutomodMentionRaidProtection?", "Assistant": "Use `$setAutomodMentionRaidProtection` like this:\n```js\n$setAutomodMentionRaidProtection[false]\n```\n\nThis function sets mention raid protection for current automod rule."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setAutomodMentionRaidProtection in forgescript?", "Assistant": "Yes, You use `$setAutomodMentionRaidProtection` like this:\n```js\n$setAutomodMentionRaidProtection[false]\n```\n\nThis function sets mention raid protection for current automod rule."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setAutomodMentionRaidProtection?", "Assistant": "The arguments for `$setAutomodMentionRaidProtection` are as follows:\n\n- **enabled** (Boolean): Whether to enable mention raid protection (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setAutomodMentionRaidProtection added?", "Assistant": "$setAutomodMentionRaidProtection was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setAutomodMentionRaidProtection nativly to forgescipt?", "Assistant": "Yes, $setAutomodMentionRaidProtection is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setAutomodMentionTotalLimit?", "Assistant": "Sets a total mention limit for current automod rule\n\nExample usage:\n```js\n$setAutomodMentionTotalLimit[68]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setAutomodMentionTotalLimit?", "Assistant": "Use `$setAutomodMentionTotalLimit` like this:\n```js\n$setAutomodMentionTotalLimit[68]\n```\n\nThis function sets a total mention limit for current automod rule."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setAutomodMentionTotalLimit in forgescript?", "Assistant": "Yes, You use `$setAutomodMentionTotalLimit` like this:\n```js\n$setAutomodMentionTotalLimit[68]\n```\n\nThis function sets a total mention limit for current automod rule."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setAutomodMentionTotalLimit?", "Assistant": "The arguments for `$setAutomodMentionTotalLimit` are as follows:\n\n- **limit** (Number): The limit of mentions to set (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setAutomodMentionTotalLimit added?", "Assistant": "$setAutomodMentionTotalLimit was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setAutomodMentionTotalLimit nativly to forgescipt?", "Assistant": "Yes, $setAutomodMentionTotalLimit is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setAutomodPresets?", "Assistant": "Sets preset keyword wordsets for current automod rule\n\nExample usage:\n```js\n$setAutomodPresets[Slurs]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setAutomodPresets?", "Assistant": "Use `$setAutomodPresets` like this:\n```js\n$setAutomodPresets[Slurs]\n```\n\nThis function sets preset keyword wordsets for current automod rule."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setAutomodPresets in forgescript?", "Assistant": "Yes, You use `$setAutomodPresets` like this:\n```js\n$setAutomodPresets[Slurs]\n```\n\nThis function sets preset keyword wordsets for current automod rule."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setAutomodPresets?", "Assistant": "The arguments for `$setAutomodPresets` are as follows:\n\n- **presets** (Enum): The preset keyword types to set (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setAutomodPresets added?", "Assistant": "$setAutomodPresets was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setAutomodPresets nativly to forgescipt?", "Assistant": "Yes, $setAutomodPresets is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setAutomodRegexFilter?", "Assistant": "Sets regex filter for current automod rule\n\nExample usage:\n```js\n$setAutomodRegexFilter[regexes_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setAutomodRegexFilter?", "Assistant": "Use `$setAutomodRegexFilter` like this:\n```js\n$setAutomodRegexFilter[regexes_example]\n```\n\nThis function sets regex filter for current automod rule."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setAutomodRegexFilter in forgescript?", "Assistant": "Yes, You use `$setAutomodRegexFilter` like this:\n```js\n$setAutomodRegexFilter[regexes_example]\n```\n\nThis function sets regex filter for current automod rule."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setAutomodRegexFilter?", "Assistant": "The arguments for `$setAutomodRegexFilter` are as follows:\n\n- **regexes** (String): The regexes to use for filtering (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setAutomodRegexFilter added?", "Assistant": "$setAutomodRegexFilter was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setAutomodRegexFilter nativly to forgescipt?", "Assistant": "Yes, $setAutomodRegexFilter is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $applicationCommandCount?", "Assistant": "Returns the amount of application commands registered by this bot\n\nExample usage:\n```js\n$applicationCommandCount[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $applicationCommandCount?", "Assistant": "Use `$applicationCommandCount` like this:\n```js\n$applicationCommandCount[data]\n```\n\nThis function returns the amount of application commands registered by this bot."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $applicationCommandCount in forgescript?", "Assistant": "Yes, You use `$applicationCommandCount` like this:\n```js\n$applicationCommandCount[data]\n```\n\nThis function returns the amount of application commands registered by this bot."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $applicationCommandCount?", "Assistant": "The arguments for `$applicationCommandCount` are as follows:\n\n- **guild ID** (Guild): The guild to get application command count from (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $applicationCommandCount added?", "Assistant": "$applicationCommandCount was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $applicationCommandCount nativly to forgescipt?", "Assistant": "Yes, $applicationCommandCount is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $applicationCommands?", "Assistant": "Returns all application commands\n\nExample usage:\n```js\n$applicationCommands[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $applicationCommands?", "Assistant": "Use `$applicationCommands` like this:\n```js\n$applicationCommands[]\n```\n\nThis function returns all application commands."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $applicationCommands in forgescript?", "Assistant": "Yes, You use `$applicationCommands` like this:\n```js\n$applicationCommands[]\n```\n\nThis function returns all application commands."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $applicationCommands?", "Assistant": "The arguments for `$applicationCommands` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $applicationCommands added?", "Assistant": "$applicationCommands was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $applicationCommands nativly to forgescipt?", "Assistant": "Yes, $applicationCommands is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $botCount?", "Assistant": "Returns the bot count of the bot\n\nExample usage:\n```js\n$botCount[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $botCount?", "Assistant": "Use `$botCount` like this:\n```js\n$botCount[]\n```\n\nThis function returns the bot count of the bot."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $botCount in forgescript?", "Assistant": "Yes, You use `$botCount` like this:\n```js\n$botCount[]\n```\n\nThis function returns the bot count of the bot."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $botCount?", "Assistant": "The arguments for `$botCount` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $botCount added?", "Assistant": "$botCount was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $botCount nativly to forgescipt?", "Assistant": "Yes, $botCount is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $botCustomInvite?", "Assistant": "Returns the client's custom invite link\n\nExample usage:\n```js\n$botCustomInvite[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $botCustomInvite?", "Assistant": "Use `$botCustomInvite` like this:\n```js\n$botCustomInvite[]\n```\n\nThis function returns the client's custom invite link."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $botCustomInvite in forgescript?", "Assistant": "Yes, You use `$botCustomInvite` like this:\n```js\n$botCustomInvite[]\n```\n\nThis function returns the client's custom invite link."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $botCustomInvite?", "Assistant": "The arguments for `$botCustomInvite` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $botCustomInvite added?", "Assistant": "$botCustomInvite was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $botCustomInvite nativly to forgescipt?", "Assistant": "Yes, $botCustomInvite is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $botDescription?", "Assistant": "Returns the description of the bot\n\nExample usage:\n```js\n$botDescription[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $botDescription?", "Assistant": "Use `$botDescription` like this:\n```js\n$botDescription[]\n```\n\nThis function returns the description of the bot."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $botDescription in forgescript?", "Assistant": "Yes, You use `$botDescription` like this:\n```js\n$botDescription[]\n```\n\nThis function returns the description of the bot."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $botDescription?", "Assistant": "The arguments for `$botDescription` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $botDescription added?", "Assistant": "$botDescription was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $botDescription nativly to forgescipt?", "Assistant": "Yes, $botDescription is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $botDestroy?", "Assistant": "Destroys the discord.js client\n\nExample usage:\n```js\n$botDestroy[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $botDestroy?", "Assistant": "Use `$botDestroy` like this:\n```js\n$botDestroy[]\n```\n\nThis function destroys the discord.js client."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $botDestroy in forgescript?", "Assistant": "Yes, You use `$botDestroy` like this:\n```js\n$botDestroy[]\n```\n\nThis function destroys the discord.js client."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $botDestroy?", "Assistant": "The arguments for `$botDestroy` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $botDestroy added?", "Assistant": "$botDestroy was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $botDestroy nativly to forgescipt?", "Assistant": "Yes, $botDestroy is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $botID?", "Assistant": "Returns the client's id\n\nExample usage:\n```js\n$botID[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $botID?", "Assistant": "Use `$botID` like this:\n```js\n$botID[]\n```\n\nThis function returns the client's id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $botID in forgescript?", "Assistant": "Yes, You use `$botID` like this:\n```js\n$botID[]\n```\n\nThis function returns the client's id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $botID?", "Assistant": "The arguments for `$botID` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $botID added?", "Assistant": "$botID was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $botID nativly to forgescipt?", "Assistant": "Yes, $botID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $botInvite?", "Assistant": "Returns a bot's invite link\n\nExample usage:\n```js\n$botInvite[perms_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $botInvite?", "Assistant": "Use `$botInvite` like this:\n```js\n$botInvite[perms_example]\n```\n\nThis function returns a bot's invite link."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $botInvite in forgescript?", "Assistant": "Yes, You use `$botInvite` like this:\n```js\n$botInvite[perms_example]\n```\n\nThis function returns a bot's invite link."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $botInvite?", "Assistant": "The arguments for `$botInvite` are as follows:\n\n- **perms** (String): The perms for the invite link (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $botInvite added?", "Assistant": "$botInvite was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $botInvite nativly to forgescipt?", "Assistant": "Yes, $botInvite is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $botMutualGuilds?", "Assistant": "Returns the client's mutual guilds with a user\n\nExample usage:\n```js\n$botMutualGuilds[data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $botMutualGuilds?", "Assistant": "Use `$botMutualGuilds` like this:\n```js\n$botMutualGuilds[data;separator_example]\n```\n\nThis function returns the client's mutual guilds with a user."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $botMutualGuilds in forgescript?", "Assistant": "Yes, You use `$botMutualGuilds` like this:\n```js\n$botMutualGuilds[data;separator_example]\n```\n\nThis function returns the client's mutual guilds with a user."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $botMutualGuilds?", "Assistant": "The arguments for `$botMutualGuilds` are as follows:\n\n- **user ID** (User): The user to get mutual guilds from (Required)\n- **separator** (String): The separator to use for every guild (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $botMutualGuilds added?", "Assistant": "$botMutualGuilds was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $botMutualGuilds nativly to forgescipt?", "Assistant": "Yes, $botMutualGuilds is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $botOwnerID?", "Assistant": "Returns the bot owner id\n\nExample usage:\n```js\n$botOwnerID[false;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $botOwnerID?", "Assistant": "Use `$botOwnerID` like this:\n```js\n$botOwnerID[false;separator_example]\n```\n\nThis function returns the bot owner id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $botOwnerID in forgescript?", "Assistant": "Yes, You use `$botOwnerID` like this:\n```js\n$botOwnerID[false;separator_example]\n```\n\nThis function returns the bot owner id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $botOwnerID?", "Assistant": "The arguments for `$botOwnerID` are as follows:\n\n- **return members** (Boolean): Whether to return all members (Optional)\n- **separator** (String): The separator to use for every id (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $botOwnerID added?", "Assistant": "$botOwnerID was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $botOwnerID nativly to forgescipt?", "Assistant": "Yes, $botOwnerID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $botTags?", "Assistant": "Returns the client tags\n\nExample usage:\n```js\n$botTags[separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $botTags?", "Assistant": "Use `$botTags` like this:\n```js\n$botTags[separator_example]\n```\n\nThis function returns the client tags."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $botTags in forgescript?", "Assistant": "Yes, You use `$botTags` like this:\n```js\n$botTags[separator_example]\n```\n\nThis function returns the client tags."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $botTags?", "Assistant": "The arguments for `$botTags` are as follows:\n\n- **separator** (String): The separator to use for every tag (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $botTags added?", "Assistant": "$botTags was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $botTags nativly to forgescipt?", "Assistant": "Yes, $botTags is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $botToken?", "Assistant": "Returns the client token\n\nExample usage:\n```js\n$botToken[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $botToken?", "Assistant": "Use `$botToken` like this:\n```js\n$botToken[]\n```\n\nThis function returns the client token."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $botToken in forgescript?", "Assistant": "Yes, You use `$botToken` like this:\n```js\n$botToken[]\n```\n\nThis function returns the client token."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $botToken?", "Assistant": "The arguments for `$botToken` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $botToken added?", "Assistant": "$botToken was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $botToken nativly to forgescipt?", "Assistant": "Yes, $botToken is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $botUserInstallCount?", "Assistant": "Returns the user install count of the bot\n\nExample usage:\n```js\n$botUserInstallCount[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $botUserInstallCount?", "Assistant": "Use `$botUserInstallCount` like this:\n```js\n$botUserInstallCount[]\n```\n\nThis function returns the user install count of the bot."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $botUserInstallCount in forgescript?", "Assistant": "Yes, You use `$botUserInstallCount` like this:\n```js\n$botUserInstallCount[]\n```\n\nThis function returns the user install count of the bot."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $botUserInstallCount?", "Assistant": "The arguments for `$botUserInstallCount` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $botUserInstallCount added?", "Assistant": "$botUserInstallCount was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $botUserInstallCount nativly to forgescipt?", "Assistant": "Yes, $botUserInstallCount is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $extensionVersion?", "Assistant": "Returns the version a extension is running on\n\nExample usage:\n```js\n$extensionVersion[name_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $extensionVersion?", "Assistant": "Use `$extensionVersion` like this:\n```js\n$extensionVersion[name_example]\n```\n\nThis function returns the version a extension is running on."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $extensionVersion in forgescript?", "Assistant": "Yes, You use `$extensionVersion` like this:\n```js\n$extensionVersion[name_example]\n```\n\nThis function returns the version a extension is running on."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $extensionVersion?", "Assistant": "The arguments for `$extensionVersion` are as follows:\n\n- **name** (String): The extension name to retrieve its version (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $extensionVersion added?", "Assistant": "$extensionVersion was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $extensionVersion nativly to forgescipt?", "Assistant": "Yes, $extensionVersion is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $hasExtension?", "Assistant": "Checks whether client has an extension\n\nExample usage:\n```js\n$hasExtension[name_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $hasExtension?", "Assistant": "Use `$hasExtension` like this:\n```js\n$hasExtension[name_example]\n```\n\nThis function checks whether client has an extension."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $hasExtension in forgescript?", "Assistant": "Yes, You use `$hasExtension` like this:\n```js\n$hasExtension[name_example]\n```\n\nThis function checks whether client has an extension."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $hasExtension?", "Assistant": "The arguments for `$hasExtension` are as follows:\n\n- **name** (String): The extension name to check for (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $hasExtension added?", "Assistant": "$hasExtension was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $hasExtension nativly to forgescipt?", "Assistant": "Yes, $hasExtension is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $ping?", "Assistant": "The current bot ping\n\nExample usage:\n```js\n$ping[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $ping?", "Assistant": "Use `$ping` like this:\n```js\n$ping[]\n```\n\nThis function the current bot ping."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $ping in forgescript?", "Assistant": "Yes, You use `$ping` like this:\n```js\n$ping[]\n```\n\nThis function the current bot ping."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $ping?", "Assistant": "The arguments for `$ping` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $ping added?", "Assistant": "$ping was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $ping nativly to forgescipt?", "Assistant": "Yes, $ping is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setBotAvatar?", "Assistant": "Sets the bot profile icon\n\nExample usage:\n```js\n$setBotAvatar[url_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setBotAvatar?", "Assistant": "Use `$setBotAvatar` like this:\n```js\n$setBotAvatar[url_example]\n```\n\nThis function sets the bot profile icon."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setBotAvatar in forgescript?", "Assistant": "Yes, You use `$setBotAvatar` like this:\n```js\n$setBotAvatar[url_example]\n```\n\nThis function sets the bot profile icon."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setBotAvatar?", "Assistant": "The arguments for `$setBotAvatar` are as follows:\n\n- **url** (String): The icon url (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setBotAvatar added?", "Assistant": "$setBotAvatar was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setBotAvatar nativly to forgescipt?", "Assistant": "Yes, $setBotAvatar is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setBotBanner?", "Assistant": "Sets the bot banner\n\nExample usage:\n```js\n$setBotBanner[url_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setBotBanner?", "Assistant": "Use `$setBotBanner` like this:\n```js\n$setBotBanner[url_example]\n```\n\nThis function sets the bot banner."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setBotBanner in forgescript?", "Assistant": "Yes, You use `$setBotBanner` like this:\n```js\n$setBotBanner[url_example]\n```\n\nThis function sets the bot banner."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setBotBanner?", "Assistant": "The arguments for `$setBotBanner` are as follows:\n\n- **url** (String): The banner url (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setBotBanner added?", "Assistant": "$setBotBanner was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setBotBanner nativly to forgescipt?", "Assistant": "Yes, $setBotBanner is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setBotDescription?", "Assistant": "Sets the bot description\n\nExample usage:\n```js\n$setBotDescription[description_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setBotDescription?", "Assistant": "Use `$setBotDescription` like this:\n```js\n$setBotDescription[description_example]\n```\n\nThis function sets the bot description."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setBotDescription in forgescript?", "Assistant": "Yes, You use `$setBotDescription` like this:\n```js\n$setBotDescription[description_example]\n```\n\nThis function sets the bot description."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setBotDescription?", "Assistant": "The arguments for `$setBotDescription` are as follows:\n\n- **description** (String): The new description (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setBotDescription added?", "Assistant": "$setBotDescription was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setBotDescription nativly to forgescipt?", "Assistant": "Yes, $setBotDescription is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setBotName?", "Assistant": "Sets the bot name\n\nExample usage:\n```js\n$setBotName[name_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setBotName?", "Assistant": "Use `$setBotName` like this:\n```js\n$setBotName[name_example]\n```\n\nThis function sets the bot name."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setBotName in forgescript?", "Assistant": "Yes, You use `$setBotName` like this:\n```js\n$setBotName[name_example]\n```\n\nThis function sets the bot name."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setBotName?", "Assistant": "The arguments for `$setBotName` are as follows:\n\n- **name** (String): The new name (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setBotName added?", "Assistant": "$setBotName was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setBotName nativly to forgescipt?", "Assistant": "Yes, $setBotName is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setBotTags?", "Assistant": "Sets the bot tags\n\nExample usage:\n```js\n$setBotTags[tags_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setBotTags?", "Assistant": "Use `$setBotTags` like this:\n```js\n$setBotTags[tags_example]\n```\n\nThis function sets the bot tags."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setBotTags in forgescript?", "Assistant": "Yes, You use `$setBotTags` like this:\n```js\n$setBotTags[tags_example]\n```\n\nThis function sets the bot tags."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setBotTags?", "Assistant": "The arguments for `$setBotTags` are as follows:\n\n- **tags** (String): The new tags (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setBotTags added?", "Assistant": "$setBotTags was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setBotTags nativly to forgescipt?", "Assistant": "Yes, $setBotTags is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setStatus?", "Assistant": "Sets the client's status\n\nExample usage:\n```js\n$setStatus[presence_example;Competing;name_example;state_example;url_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setStatus?", "Assistant": "Use `$setStatus` like this:\n```js\n$setStatus[presence_example;Competing;name_example;state_example;url_example]\n```\n\nThis function sets the client's status."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setStatus in forgescript?", "Assistant": "Yes, You use `$setStatus` like this:\n```js\n$setStatus[presence_example;Competing;name_example;state_example;url_example]\n```\n\nThis function sets the client's status."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setStatus?", "Assistant": "The arguments for `$setStatus` are as follows:\n\n- **presence** (String): The presence status (Required)\n- **type** (Enum): The activity type (Required)\n- **name** (String): The status name (Required)\n- **state** (String): The status state (Optional)\n- **url** (String): The url to use for the stream (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setStatus added?", "Assistant": "$setStatus was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setStatus nativly to forgescipt?", "Assistant": "Yes, $setStatus is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $shardCount?", "Assistant": "Returns the shard count of the client\n\nExample usage:\n```js\n$shardCount[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $shardCount?", "Assistant": "Use `$shardCount` like this:\n```js\n$shardCount[]\n```\n\nThis function returns the shard count of the client."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $shardCount in forgescript?", "Assistant": "Yes, You use `$shardCount` like this:\n```js\n$shardCount[]\n```\n\nThis function returns the shard count of the client."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $shardCount?", "Assistant": "The arguments for `$shardCount` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $shardCount added?", "Assistant": "$shardCount was added in ForgeScript version 2.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $shardCount nativly to forgescipt?", "Assistant": "Yes, $shardCount is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $shardID?", "Assistant": "Returns the shard id of the client\n\nExample usage:\n```js\n$shardID[separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $shardID?", "Assistant": "Use `$shardID` like this:\n```js\n$shardID[separator_example]\n```\n\nThis function returns the shard id of the client."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $shardID in forgescript?", "Assistant": "Yes, You use `$shardID` like this:\n```js\n$shardID[separator_example]\n```\n\nThis function returns the shard id of the client."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $shardID?", "Assistant": "The arguments for `$shardID` are as follows:\n\n- **separator** (String): The separator to use for every id (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $shardID added?", "Assistant": "$shardID was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $shardID nativly to forgescipt?", "Assistant": "Yes, $shardID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $shardStatus?", "Assistant": "Returns the shard status of the client\n\nExample usage:\n```js\n$shardStatus[separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $shardStatus?", "Assistant": "Use `$shardStatus` like this:\n```js\n$shardStatus[separator_example]\n```\n\nThis function returns the shard status of the client."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $shardStatus in forgescript?", "Assistant": "Yes, You use `$shardStatus` like this:\n```js\n$shardStatus[separator_example]\n```\n\nThis function returns the shard status of the client."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $shardStatus?", "Assistant": "The arguments for `$shardStatus` are as follows:\n\n- **separator** (String): The separator to use for every status (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $shardStatus added?", "Assistant": "$shardStatus was added in ForgeScript version 2.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $shardStatus nativly to forgescipt?", "Assistant": "Yes, $shardStatus is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $updateApplicationCommands?", "Assistant": "Updates application commands, also registers new ones\n\nExample usage:\n```js\n$updateApplicationCommands[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $updateApplicationCommands?", "Assistant": "Use `$updateApplicationCommands` like this:\n```js\n$updateApplicationCommands[]\n```\n\nThis function updates application commands, also registers new ones."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $updateApplicationCommands in forgescript?", "Assistant": "Yes, You use `$updateApplicationCommands` like this:\n```js\n$updateApplicationCommands[]\n```\n\nThis function updates application commands, also registers new ones."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $updateApplicationCommands?", "Assistant": "The arguments for `$updateApplicationCommands` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $updateApplicationCommands added?", "Assistant": "$updateApplicationCommands was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $updateApplicationCommands nativly to forgescipt?", "Assistant": "Yes, $updateApplicationCommands is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $updateCommands?", "Assistant": "Updates bot commands, also registers new ones\n\nExample usage:\n```js\n$updateCommands[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $updateCommands?", "Assistant": "Use `$updateCommands` like this:\n```js\n$updateCommands[]\n```\n\nThis function updates bot commands, also registers new ones."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $updateCommands in forgescript?", "Assistant": "Yes, You use `$updateCommands` like this:\n```js\n$updateCommands[]\n```\n\nThis function updates bot commands, also registers new ones."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $updateCommands?", "Assistant": "The arguments for `$updateCommands` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $updateCommands added?", "Assistant": "$updateCommands was added in ForgeScript version 1.0.2."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $updateCommands nativly to forgescipt?", "Assistant": "Yes, $updateCommands is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $uptime?", "Assistant": "Returns the bots uptime\n\nExample usage:\n```js\n$uptime[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $uptime?", "Assistant": "Use `$uptime` like this:\n```js\n$uptime[]\n```\n\nThis function returns the bots uptime."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $uptime in forgescript?", "Assistant": "Yes, You use `$uptime` like this:\n```js\n$uptime[]\n```\n\nThis function returns the bots uptime."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $uptime?", "Assistant": "The arguments for `$uptime` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $uptime added?", "Assistant": "$uptime was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $uptime nativly to forgescipt?", "Assistant": "Yes, $uptime is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $version?", "Assistant": "Returns the package version you're using\n\nExample usage:\n```js\n$version[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $version?", "Assistant": "Use `$version` like this:\n```js\n$version[]\n```\n\nThis function returns the package version you're using."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $version in forgescript?", "Assistant": "Yes, You use `$version` like this:\n```js\n$version[]\n```\n\nThis function returns the package version you're using."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $version?", "Assistant": "The arguments for `$version` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $version added?", "Assistant": "$version was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $version nativly to forgescipt?", "Assistant": "Yes, $version is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $bufferAlloc?", "Assistant": "Allocates given number of bytes in a buffer\n\nExample usage:\n```js\n$bufferAlloc[variable_name_example;77]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $bufferAlloc?", "Assistant": "Use `$bufferAlloc` like this:\n```js\n$bufferAlloc[variable_name_example;77]\n```\n\nThis function allocates given number of bytes in a buffer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $bufferAlloc in forgescript?", "Assistant": "Yes, You use `$bufferAlloc` like this:\n```js\n$bufferAlloc[variable_name_example;77]\n```\n\nThis function allocates given number of bytes in a buffer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $bufferAlloc?", "Assistant": "The arguments for `$bufferAlloc` are as follows:\n\n- **variable name** (String): The variable to load it to, accessed with $env[<name>] (Required)\n- **bytes** (Number): The number of bytes to alloc (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $bufferAlloc added?", "Assistant": "$bufferAlloc was added in ForgeScript version 1.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $bufferAlloc nativly to forgescipt?", "Assistant": "Yes, $bufferAlloc is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $bufferAllocUnsafe?", "Assistant": "Unsafely allocates given number of bytes in a buffer\n\nExample usage:\n```js\n$bufferAllocUnsafe[variable_name_example;36]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $bufferAllocUnsafe?", "Assistant": "Use `$bufferAllocUnsafe` like this:\n```js\n$bufferAllocUnsafe[variable_name_example;36]\n```\n\nThis function unsafely allocates given number of bytes in a buffer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $bufferAllocUnsafe in forgescript?", "Assistant": "Yes, You use `$bufferAllocUnsafe` like this:\n```js\n$bufferAllocUnsafe[variable_name_example;36]\n```\n\nThis function unsafely allocates given number of bytes in a buffer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $bufferAllocUnsafe?", "Assistant": "The arguments for `$bufferAllocUnsafe` are as follows:\n\n- **variable name** (String): The variable to load it to, accessed with $env[<name>] (Required)\n- **bytes** (Number): The number of bytes to alloc (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $bufferAllocUnsafe added?", "Assistant": "$bufferAllocUnsafe was added in ForgeScript version 1.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $bufferAllocUnsafe nativly to forgescipt?", "Assistant": "Yes, $bufferAllocUnsafe is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $bufferLength?", "Assistant": "Returns the length of a buffer\n\nExample usage:\n```js\n$bufferLength[variable_name_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $bufferLength?", "Assistant": "Use `$bufferLength` like this:\n```js\n$bufferLength[variable_name_example]\n```\n\nThis function returns the length of a buffer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $bufferLength in forgescript?", "Assistant": "Yes, You use `$bufferLength` like this:\n```js\n$bufferLength[variable_name_example]\n```\n\nThis function returns the length of a buffer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $bufferLength?", "Assistant": "The arguments for `$bufferLength` are as follows:\n\n- **variable name** (String): The variable the buffer is allocated on (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $bufferLength added?", "Assistant": "$bufferLength was added in ForgeScript version 1.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $bufferLength nativly to forgescipt?", "Assistant": "Yes, $bufferLength is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $bufferReadInt32?", "Assistant": "Reads int from a buffer\n\nExample usage:\n```js\n$bufferReadInt32[variable_name_example;72]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $bufferReadInt32?", "Assistant": "Use `$bufferReadInt32` like this:\n```js\n$bufferReadInt32[variable_name_example;72]\n```\n\nThis function reads int from a buffer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $bufferReadInt32 in forgescript?", "Assistant": "Yes, You use `$bufferReadInt32` like this:\n```js\n$bufferReadInt32[variable_name_example;72]\n```\n\nThis function reads int from a buffer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $bufferReadInt32?", "Assistant": "The arguments for `$bufferReadInt32` are as follows:\n\n- **variable name** (String): The variable the buffer is allocated on (Required)\n- **index** (Number): The index to start reading at (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $bufferReadInt32 added?", "Assistant": "$bufferReadInt32 was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $bufferReadInt32 nativly to forgescipt?", "Assistant": "Yes, $bufferReadInt32 is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $bufferReadUtf8?", "Assistant": "Reads utf8 string from a buffer\n\nExample usage:\n```js\n$bufferReadUtf8[variable_name_example;64;62]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $bufferReadUtf8?", "Assistant": "Use `$bufferReadUtf8` like this:\n```js\n$bufferReadUtf8[variable_name_example;64;62]\n```\n\nThis function reads utf8 string from a buffer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $bufferReadUtf8 in forgescript?", "Assistant": "Yes, You use `$bufferReadUtf8` like this:\n```js\n$bufferReadUtf8[variable_name_example;64;62]\n```\n\nThis function reads utf8 string from a buffer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $bufferReadUtf8?", "Assistant": "The arguments for `$bufferReadUtf8` are as follows:\n\n- **variable name** (String): The variable the buffer is allocated on (Required)\n- **index** (Number): The index to start reading at (Required)\n- **end index** (Number): The index to end reading at (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $bufferReadUtf8 added?", "Assistant": "$bufferReadUtf8 was added in ForgeScript version 1.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $bufferReadUtf8 nativly to forgescipt?", "Assistant": "Yes, $bufferReadUtf8 is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $bufferResize?", "Assistant": "Resizes a buffer\n\nExample usage:\n```js\n$bufferResize[variable_name_example;10]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $bufferResize?", "Assistant": "Use `$bufferResize` like this:\n```js\n$bufferResize[variable_name_example;10]\n```\n\nThis function resizes a buffer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $bufferResize in forgescript?", "Assistant": "Yes, You use `$bufferResize` like this:\n```js\n$bufferResize[variable_name_example;10]\n```\n\nThis function resizes a buffer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $bufferResize?", "Assistant": "The arguments for `$bufferResize` are as follows:\n\n- **variable name** (String): The variable the buffer is allocated on (Required)\n- **length** (Number): The new length for this buffer (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $bufferResize added?", "Assistant": "$bufferResize was added in ForgeScript version 1.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $bufferResize nativly to forgescipt?", "Assistant": "Yes, $bufferResize is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $bufferToString?", "Assistant": "Stringifies a buffer\n\nExample usage:\n```js\n$bufferToString[variable_name_example;encoding_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $bufferToString?", "Assistant": "Use `$bufferToString` like this:\n```js\n$bufferToString[variable_name_example;encoding_example]\n```\n\nThis function stringifies a buffer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $bufferToString in forgescript?", "Assistant": "Yes, You use `$bufferToString` like this:\n```js\n$bufferToString[variable_name_example;encoding_example]\n```\n\nThis function stringifies a buffer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $bufferToString?", "Assistant": "The arguments for `$bufferToString` are as follows:\n\n- **variable name** (String): The variable the buffer is allocated on (Required)\n- **encoding** (String): The encoding to stringify with (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $bufferToString added?", "Assistant": "$bufferToString was added in ForgeScript version 1.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $bufferToString nativly to forgescipt?", "Assistant": "Yes, $bufferToString is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $bufferWriteInt32?", "Assistant": "Writes int32 to a buffer\n\nExample usage:\n```js\n$bufferWriteInt32[variable_name_example;8;42]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $bufferWriteInt32?", "Assistant": "Use `$bufferWriteInt32` like this:\n```js\n$bufferWriteInt32[variable_name_example;8;42]\n```\n\nThis function writes int32 to a buffer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $bufferWriteInt32 in forgescript?", "Assistant": "Yes, You use `$bufferWriteInt32` like this:\n```js\n$bufferWriteInt32[variable_name_example;8;42]\n```\n\nThis function writes int32 to a buffer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $bufferWriteInt32?", "Assistant": "The arguments for `$bufferWriteInt32` are as follows:\n\n- **variable name** (String): The variable the buffer is allocated on (Required)\n- **index** (Number): The index to start writing on (Required)\n- **int** (Number): The int to write (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $bufferWriteInt32 added?", "Assistant": "$bufferWriteInt32 was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $bufferWriteInt32 nativly to forgescipt?", "Assistant": "Yes, $bufferWriteInt32 is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $bufferWriteUtf8?", "Assistant": "Writes utf8 string to a buffer\n\nExample usage:\n```js\n$bufferWriteUtf8[variable_name_example;97;text_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $bufferWriteUtf8?", "Assistant": "Use `$bufferWriteUtf8` like this:\n```js\n$bufferWriteUtf8[variable_name_example;97;text_example]\n```\n\nThis function writes utf8 string to a buffer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $bufferWriteUtf8 in forgescript?", "Assistant": "Yes, You use `$bufferWriteUtf8` like this:\n```js\n$bufferWriteUtf8[variable_name_example;97;text_example]\n```\n\nThis function writes utf8 string to a buffer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $bufferWriteUtf8?", "Assistant": "The arguments for `$bufferWriteUtf8` are as follows:\n\n- **variable name** (String): The variable the buffer is allocated on (Required)\n- **index** (Number): The index to start writing on (Required)\n- **text** (String): The text to write (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $bufferWriteUtf8 added?", "Assistant": "$bufferWriteUtf8 was added in ForgeScript version 1.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $bufferWriteUtf8 nativly to forgescipt?", "Assistant": "Yes, $bufferWriteUtf8 is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $addChannelPerms?", "Assistant": "Adds permission overwrites to a channel, returns bool\n\nExample usage:\n```js\n$addChannelPerms[data;id_example;perms_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $addChannelPerms?", "Assistant": "Use `$addChannelPerms` like this:\n```js\n$addChannelPerms[data;id_example;perms_example]\n```\n\nThis function adds permission overwrites to a channel, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addChannelPerms in forgescript?", "Assistant": "Yes, You use `$addChannelPerms` like this:\n```js\n$addChannelPerms[data;id_example;perms_example]\n```\n\nThis function adds permission overwrites to a channel, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $addChannelPerms?", "Assistant": "The arguments for `$addChannelPerms` are as follows:\n\n- **channel ID** (Channel): The channel to add perms to (Required)\n- **id** (String): The role or member id to add these perms to (Required)\n- **perms** (String): The perms to add to the id (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $addChannelPerms added?", "Assistant": "$addChannelPerms was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addChannelPerms nativly to forgescipt?", "Assistant": "Yes, $addChannelPerms is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $addForumTags?", "Assistant": "Adds tags to a forum post, returns bool\n\nExample usage:\n```js\n$addForumTags[data;reason_example;tags_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $addForumTags?", "Assistant": "Use `$addForumTags` like this:\n```js\n$addForumTags[data;reason_example;tags_example]\n```\n\nThis function adds tags to a forum post, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addForumTags in forgescript?", "Assistant": "Yes, You use `$addForumTags` like this:\n```js\n$addForumTags[data;reason_example;tags_example]\n```\n\nThis function adds tags to a forum post, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $addForumTags?", "Assistant": "The arguments for `$addForumTags` are as follows:\n\n- **channel ID** (Channel): The post to edit tags on (Required)\n- **reason** (String): The reason for adding post tags (Optional)\n- **tags** (String): The tags for the post (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $addForumTags added?", "Assistant": "$addForumTags was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addForumTags nativly to forgescipt?", "Assistant": "Yes, $addForumTags is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $addThreadMember?", "Assistant": "Adds a member to a thread, returns bool\n\nExample usage:\n```js\n$addThreadMember[data;data;data;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $addThreadMember?", "Assistant": "Use `$addThreadMember` like this:\n```js\n$addThreadMember[data;data;data;reason_example]\n```\n\nThis function adds a member to a thread, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addThreadMember in forgescript?", "Assistant": "Yes, You use `$addThreadMember` like this:\n```js\n$addThreadMember[data;data;data;reason_example]\n```\n\nThis function adds a member to a thread, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $addThreadMember?", "Assistant": "The arguments for `$addThreadMember` are as follows:\n\n- **guild ID** (Guild): The guild to pull member from (Required)\n- **channel ID** (Channel): The thread to add member to (Required)\n- **user ID** (Member): The member to add (Required)\n- **reason** (String): The reason to add this member to thread (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $addThreadMember added?", "Assistant": "$addThreadMember was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addThreadMember nativly to forgescipt?", "Assistant": "Yes, $addThreadMember is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $archiveThread?", "Assistant": "Archives a thread, returns bool\n\nExample usage:\n```js\n$archiveThread[data;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $archiveThread?", "Assistant": "Use `$archiveThread` like this:\n```js\n$archiveThread[data;reason_example]\n```\n\nThis function archives a thread, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $archiveThread in forgescript?", "Assistant": "Yes, You use `$archiveThread` like this:\n```js\n$archiveThread[data;reason_example]\n```\n\nThis function archives a thread, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $archiveThread?", "Assistant": "The arguments for `$archiveThread` are as follows:\n\n- **channel ID** (Channel): The thread to archive (Required)\n- **reason** (String): The reason to archive this thread (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $archiveThread added?", "Assistant": "$archiveThread was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $archiveThread nativly to forgescipt?", "Assistant": "Yes, $archiveThread is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $channelBitrate?", "Assistant": "Returns the bitrate of the voice channel\n\nExample usage:\n```js\n$channelBitrate[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $channelBitrate?", "Assistant": "Use `$channelBitrate` like this:\n```js\n$channelBitrate[data]\n```\n\nThis function returns the bitrate of the voice channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelBitrate in forgescript?", "Assistant": "Yes, You use `$channelBitrate` like this:\n```js\n$channelBitrate[data]\n```\n\nThis function returns the bitrate of the voice channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $channelBitrate?", "Assistant": "The arguments for `$channelBitrate` are as follows:\n\n- **channel ID** (Channel): The id of the channel (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $channelBitrate added?", "Assistant": "$channelBitrate was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelBitrate nativly to forgescipt?", "Assistant": "Yes, $channelBitrate is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $channelCategoryID?", "Assistant": "Returns the channel category id\n\nExample usage:\n```js\n$channelCategoryID[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $channelCategoryID?", "Assistant": "Use `$channelCategoryID` like this:\n```js\n$channelCategoryID[data]\n```\n\nThis function returns the channel category id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelCategoryID in forgescript?", "Assistant": "Yes, You use `$channelCategoryID` like this:\n```js\n$channelCategoryID[data]\n```\n\nThis function returns the channel category id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $channelCategoryID?", "Assistant": "The arguments for `$channelCategoryID` are as follows:\n\n- **channel ID** (Channel): The id of the channel (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $channelCategoryID added?", "Assistant": "$channelCategoryID was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelCategoryID nativly to forgescipt?", "Assistant": "Yes, $channelCategoryID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $channelChildrenCount?", "Assistant": "Returns the amount of children this category has\n\nExample usage:\n```js\n$channelChildrenCount[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $channelChildrenCount?", "Assistant": "Use `$channelChildrenCount` like this:\n```js\n$channelChildrenCount[data]\n```\n\nThis function returns the amount of children this category has."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelChildrenCount in forgescript?", "Assistant": "Yes, You use `$channelChildrenCount` like this:\n```js\n$channelChildrenCount[data]\n```\n\nThis function returns the amount of children this category has."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $channelChildrenCount?", "Assistant": "The arguments for `$channelChildrenCount` are as follows:\n\n- **channel ID** (Channel): The category to get its child count (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $channelChildrenCount added?", "Assistant": "$channelChildrenCount was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelChildrenCount nativly to forgescipt?", "Assistant": "Yes, $channelChildrenCount is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $channelChildrenIDs?", "Assistant": "Returns the children ids this category has\n\nExample usage:\n```js\n$channelChildrenIDs[data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $channelChildrenIDs?", "Assistant": "Use `$channelChildrenIDs` like this:\n```js\n$channelChildrenIDs[data;separator_example]\n```\n\nThis function returns the children ids this category has."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelChildrenIDs in forgescript?", "Assistant": "Yes, You use `$channelChildrenIDs` like this:\n```js\n$channelChildrenIDs[data;separator_example]\n```\n\nThis function returns the children ids this category has."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $channelChildrenIDs?", "Assistant": "The arguments for `$channelChildrenIDs` are as follows:\n\n- **channel ID** (Channel): The category to get its children (Required)\n- **separator** (String): The separator to use for every channel (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $channelChildrenIDs added?", "Assistant": "$channelChildrenIDs was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelChildrenIDs nativly to forgescipt?", "Assistant": "Yes, $channelChildrenIDs is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $channelCount?", "Assistant": "Returns the channel count of all servers\n\nExample usage:\n```js\n$channelCount[GuildCategory]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $channelCount?", "Assistant": "Use `$channelCount` like this:\n```js\n$channelCount[GuildCategory]\n```\n\nThis function returns the channel count of all servers."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelCount in forgescript?", "Assistant": "Yes, You use `$channelCount` like this:\n```js\n$channelCount[GuildCategory]\n```\n\nThis function returns the channel count of all servers."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $channelCount?", "Assistant": "The arguments for `$channelCount` are as follows:\n\n- **categories** (Enum): The categories to filter by (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $channelCount added?", "Assistant": "$channelCount was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelCount nativly to forgescipt?", "Assistant": "Yes, $channelCount is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $channelCreatedAt?", "Assistant": "Returns the channel timestamp\n\nExample usage:\n```js\n$channelCreatedAt[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $channelCreatedAt?", "Assistant": "Use `$channelCreatedAt` like this:\n```js\n$channelCreatedAt[data]\n```\n\nThis function returns the channel timestamp."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelCreatedAt in forgescript?", "Assistant": "Yes, You use `$channelCreatedAt` like this:\n```js\n$channelCreatedAt[data]\n```\n\nThis function returns the channel timestamp."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $channelCreatedAt?", "Assistant": "The arguments for `$channelCreatedAt` are as follows:\n\n- **channel ID** (Channel): The id of the channel (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $channelCreatedAt added?", "Assistant": "$channelCreatedAt was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelCreatedAt nativly to forgescipt?", "Assistant": "Yes, $channelCreatedAt is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $channelExists?", "Assistant": "Returns whether an channel id exists\n\nExample usage:\n```js\n$channelExists[channel_ID_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $channelExists?", "Assistant": "Use `$channelExists` like this:\n```js\n$channelExists[channel_ID_example]\n```\n\nThis function returns whether an channel id exists."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelExists in forgescript?", "Assistant": "Yes, You use `$channelExists` like this:\n```js\n$channelExists[channel_ID_example]\n```\n\nThis function returns whether an channel id exists."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $channelExists?", "Assistant": "The arguments for `$channelExists` are as follows:\n\n- **channel ID** (String): The channel to check (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $channelExists added?", "Assistant": "$channelExists was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelExists nativly to forgescipt?", "Assistant": "Yes, $channelExists is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $channelFlags?", "Assistant": "Returns the flags of a channel\n\nExample usage:\n```js\n$channelFlags[data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $channelFlags?", "Assistant": "Use `$channelFlags` like this:\n```js\n$channelFlags[data;separator_example]\n```\n\nThis function returns the flags of a channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelFlags in forgescript?", "Assistant": "Yes, You use `$channelFlags` like this:\n```js\n$channelFlags[data;separator_example]\n```\n\nThis function returns the flags of a channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $channelFlags?", "Assistant": "The arguments for `$channelFlags` are as follows:\n\n- **channel ID** (Channel): The id of the channel (Required)\n- **separator** (String): The separator to use for every flag (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $channelFlags added?", "Assistant": "$channelFlags was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelFlags nativly to forgescipt?", "Assistant": "Yes, $channelFlags is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $channelFull?", "Assistant": "Returns whether the voice channel is full\n\nExample usage:\n```js\n$channelFull[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $channelFull?", "Assistant": "Use `$channelFull` like this:\n```js\n$channelFull[data]\n```\n\nThis function returns whether the voice channel is full."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelFull in forgescript?", "Assistant": "Yes, You use `$channelFull` like this:\n```js\n$channelFull[data]\n```\n\nThis function returns whether the voice channel is full."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $channelFull?", "Assistant": "The arguments for `$channelFull` are as follows:\n\n- **channel ID** (Channel): The id of the channel (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $channelFull added?", "Assistant": "$channelFull was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelFull nativly to forgescipt?", "Assistant": "Yes, $channelFull is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $channelGuildID?", "Assistant": "Returns the channel guild id\n\nExample usage:\n```js\n$channelGuildID[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $channelGuildID?", "Assistant": "Use `$channelGuildID` like this:\n```js\n$channelGuildID[data]\n```\n\nThis function returns the channel guild id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelGuildID in forgescript?", "Assistant": "Yes, You use `$channelGuildID` like this:\n```js\n$channelGuildID[data]\n```\n\nThis function returns the channel guild id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $channelGuildID?", "Assistant": "The arguments for `$channelGuildID` are as follows:\n\n- **channel ID** (Channel): The id of the channel (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $channelGuildID added?", "Assistant": "$channelGuildID was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelGuildID nativly to forgescipt?", "Assistant": "Yes, $channelGuildID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $channelHasAnyPerms?", "Assistant": "Returns whether role or member has any of the perms in a channel\n\nExample usage:\n```js\n$channelHasAnyPerms[data;id_example;UseApplicationCommands]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $channelHasAnyPerms?", "Assistant": "Use `$channelHasAnyPerms` like this:\n```js\n$channelHasAnyPerms[data;id_example;UseApplicationCommands]\n```\n\nThis function returns whether role or member has any of the perms in a channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelHasAnyPerms in forgescript?", "Assistant": "Yes, You use `$channelHasAnyPerms` like this:\n```js\n$channelHasAnyPerms[data;id_example;UseApplicationCommands]\n```\n\nThis function returns whether role or member has any of the perms in a channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $channelHasAnyPerms?", "Assistant": "The arguments for `$channelHasAnyPerms` are as follows:\n\n- **channel ID** (Channel): The channel to get perms from (Required)\n- **id** (String): The role or user to get perms of (Required)\n- **permissions** (Enum): The perms to check for (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $channelHasAnyPerms added?", "Assistant": "$channelHasAnyPerms was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelHasAnyPerms nativly to forgescipt?", "Assistant": "Yes, $channelHasAnyPerms is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $channelHasPerms?", "Assistant": "Returns whether role or member has perms in a channel\n\nExample usage:\n```js\n$channelHasPerms[data;id_example;UseApplicationCommands]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $channelHasPerms?", "Assistant": "Use `$channelHasPerms` like this:\n```js\n$channelHasPerms[data;id_example;UseApplicationCommands]\n```\n\nThis function returns whether role or member has perms in a channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelHasPerms in forgescript?", "Assistant": "Yes, You use `$channelHasPerms` like this:\n```js\n$channelHasPerms[data;id_example;UseApplicationCommands]\n```\n\nThis function returns whether role or member has perms in a channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $channelHasPerms?", "Assistant": "The arguments for `$channelHasPerms` are as follows:\n\n- **channel ID** (Channel): The channel to get perms from (Required)\n- **id** (String): The role or user to get perms of (Required)\n- **permissions** (Enum): The perms to check for (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $channelHasPerms added?", "Assistant": "$channelHasPerms was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelHasPerms nativly to forgescipt?", "Assistant": "Yes, $channelHasPerms is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $channelID?", "Assistant": "Gets the channel id of a channel name\n\nExample usage:\n```js\n$channelID[name_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $channelID?", "Assistant": "Use `$channelID` like this:\n```js\n$channelID[name_example]\n```\n\nThis function gets the channel id of a channel name."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelID in forgescript?", "Assistant": "Yes, You use `$channelID` like this:\n```js\n$channelID[name_example]\n```\n\nThis function gets the channel id of a channel name."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $channelID?", "Assistant": "The arguments for `$channelID` are as follows:\n\n- **name** (String): The channel name to get it's id (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $channelID added?", "Assistant": "$channelID was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelID nativly to forgescipt?", "Assistant": "Yes, $channelID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $channelIDs?", "Assistant": "Returns every channel id\n\nExample usage:\n```js\n$channelIDs[separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $channelIDs?", "Assistant": "Use `$channelIDs` like this:\n```js\n$channelIDs[separator_example]\n```\n\nThis function returns every channel id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelIDs in forgescript?", "Assistant": "Yes, You use `$channelIDs` like this:\n```js\n$channelIDs[separator_example]\n```\n\nThis function returns every channel id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $channelIDs?", "Assistant": "The arguments for `$channelIDs` are as follows:\n\n- **separator** (String): The separator to use for every channel (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $channelIDs added?", "Assistant": "$channelIDs was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelIDs nativly to forgescipt?", "Assistant": "Yes, $channelIDs is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $channelIsChildrenOf?", "Assistant": "Checks whether given channel is a children of a category\n\nExample usage:\n```js\n$channelIsChildrenOf[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $channelIsChildrenOf?", "Assistant": "Use `$channelIsChildrenOf` like this:\n```js\n$channelIsChildrenOf[data;data]\n```\n\nThis function checks whether given channel is a children of a category."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelIsChildrenOf in forgescript?", "Assistant": "Yes, You use `$channelIsChildrenOf` like this:\n```js\n$channelIsChildrenOf[data;data]\n```\n\nThis function checks whether given channel is a children of a category."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $channelIsChildrenOf?", "Assistant": "The arguments for `$channelIsChildrenOf` are as follows:\n\n- **channel ID** (Channel): The channel to know if is children of category (Required)\n- **category ID** (Channel): The category to check against (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $channelIsChildrenOf added?", "Assistant": "$channelIsChildrenOf was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelIsChildrenOf nativly to forgescipt?", "Assistant": "Yes, $channelIsChildrenOf is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $channelJoinable?", "Assistant": "Returns whether the voice channel is joinable by the bot\n\nExample usage:\n```js\n$channelJoinable[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $channelJoinable?", "Assistant": "Use `$channelJoinable` like this:\n```js\n$channelJoinable[data]\n```\n\nThis function returns whether the voice channel is joinable by the bot."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelJoinable in forgescript?", "Assistant": "Yes, You use `$channelJoinable` like this:\n```js\n$channelJoinable[data]\n```\n\nThis function returns whether the voice channel is joinable by the bot."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $channelJoinable?", "Assistant": "The arguments for `$channelJoinable` are as follows:\n\n- **channel ID** (Channel): The id of the channel (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $channelJoinable added?", "Assistant": "$channelJoinable was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelJoinable nativly to forgescipt?", "Assistant": "Yes, $channelJoinable is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $channelMembers?", "Assistant": "Returns the members of a channel\n\nExample usage:\n```js\n$channelMembers[data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $channelMembers?", "Assistant": "Use `$channelMembers` like this:\n```js\n$channelMembers[data;separator_example]\n```\n\nThis function returns the members of a channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelMembers in forgescript?", "Assistant": "Yes, You use `$channelMembers` like this:\n```js\n$channelMembers[data;separator_example]\n```\n\nThis function returns the members of a channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $channelMembers?", "Assistant": "The arguments for `$channelMembers` are as follows:\n\n- **channel ID** (Channel): The id of the channel to get its members (Required)\n- **separator** (String): The separator to use for each member (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $channelMembers added?", "Assistant": "$channelMembers was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelMembers nativly to forgescipt?", "Assistant": "Yes, $channelMembers is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $channelName?", "Assistant": "Returns the channel name\n\nExample usage:\n```js\n$channelName[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $channelName?", "Assistant": "Use `$channelName` like this:\n```js\n$channelName[data]\n```\n\nThis function returns the channel name."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelName in forgescript?", "Assistant": "Yes, You use `$channelName` like this:\n```js\n$channelName[data]\n```\n\nThis function returns the channel name."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $channelName?", "Assistant": "The arguments for `$channelName` are as follows:\n\n- **channel ID** (Channel): The id of the channel (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $channelName added?", "Assistant": "$channelName was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelName nativly to forgescipt?", "Assistant": "Yes, $channelName is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $channelNames?", "Assistant": "Returns the channel names of a guild\n\nExample usage:\n```js\n$channelNames[data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $channelNames?", "Assistant": "Use `$channelNames` like this:\n```js\n$channelNames[data;separator_example]\n```\n\nThis function returns the channel names of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelNames in forgescript?", "Assistant": "Yes, You use `$channelNames` like this:\n```js\n$channelNames[data;separator_example]\n```\n\nThis function returns the channel names of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $channelNames?", "Assistant": "The arguments for `$channelNames` are as follows:\n\n- **guild ID** (Guild): The guild to return the channels of (Required)\n- **separator** (String): The separator to use for each channel (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $channelNames added?", "Assistant": "$channelNames was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelNames nativly to forgescipt?", "Assistant": "Yes, $channelNames is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $channelNSFW?", "Assistant": "Returns whether the channel is nsfw\n\nExample usage:\n```js\n$channelNSFW[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $channelNSFW?", "Assistant": "Use `$channelNSFW` like this:\n```js\n$channelNSFW[data]\n```\n\nThis function returns whether the channel is nsfw."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelNSFW in forgescript?", "Assistant": "Yes, You use `$channelNSFW` like this:\n```js\n$channelNSFW[data]\n```\n\nThis function returns whether the channel is nsfw."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $channelNSFW?", "Assistant": "The arguments for `$channelNSFW` are as follows:\n\n- **channel ID** (Channel): The id of the channel (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $channelNSFW added?", "Assistant": "$channelNSFW was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelNSFW nativly to forgescipt?", "Assistant": "Yes, $channelNSFW is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $channelPermissions?", "Assistant": "Returns all permission overwrites of a channel\n\nExample usage:\n```js\n$channelPermissions[data;deny;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $channelPermissions?", "Assistant": "Use `$channelPermissions` like this:\n```js\n$channelPermissions[data;deny;separator_example]\n```\n\nThis function returns all permission overwrites of a channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelPermissions in forgescript?", "Assistant": "Yes, You use `$channelPermissions` like this:\n```js\n$channelPermissions[data;deny;separator_example]\n```\n\nThis function returns all permission overwrites of a channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $channelPermissions?", "Assistant": "The arguments for `$channelPermissions` are as follows:\n\n- **channel ID** (Channel): The channel to get perms from (Required)\n- **property** (Enum): The property of the overwrites to return (Required)\n- **separator** (String): The separator to use for every overwrite (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $channelPermissions added?", "Assistant": "$channelPermissions was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelPermissions nativly to forgescipt?", "Assistant": "Yes, $channelPermissions is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $channelPermissionsFor?", "Assistant": "Returns permissions for a role or member in a channel\n\nExample usage:\n```js\n$channelPermissionsFor[data;id_example;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $channelPermissionsFor?", "Assistant": "Use `$channelPermissionsFor` like this:\n```js\n$channelPermissionsFor[data;id_example;separator_example]\n```\n\nThis function returns permissions for a role or member in a channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelPermissionsFor in forgescript?", "Assistant": "Yes, You use `$channelPermissionsFor` like this:\n```js\n$channelPermissionsFor[data;id_example;separator_example]\n```\n\nThis function returns permissions for a role or member in a channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $channelPermissionsFor?", "Assistant": "The arguments for `$channelPermissionsFor` are as follows:\n\n- **channel ID** (Channel): The channel to get perms from (Required)\n- **id** (String): The role or user to get perms for (Required)\n- **separator** (String): The separator to use for every perm (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $channelPermissionsFor added?", "Assistant": "$channelPermissionsFor was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelPermissionsFor nativly to forgescipt?", "Assistant": "Yes, $channelPermissionsFor is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $channelPermissionsOf?", "Assistant": "Returns specific permissions of a role or member in a channel\n\nExample usage:\n```js\n$channelPermissionsOf[data;id_example;deny;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $channelPermissionsOf?", "Assistant": "Use `$channelPermissionsOf` like this:\n```js\n$channelPermissionsOf[data;id_example;deny;separator_example]\n```\n\nThis function returns specific permissions of a role or member in a channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelPermissionsOf in forgescript?", "Assistant": "Yes, You use `$channelPermissionsOf` like this:\n```js\n$channelPermissionsOf[data;id_example;deny;separator_example]\n```\n\nThis function returns specific permissions of a role or member in a channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $channelPermissionsOf?", "Assistant": "The arguments for `$channelPermissionsOf` are as follows:\n\n- **channel ID** (Channel): The channel to get perms from (Required)\n- **id** (String): The role or user to get perms of (Required)\n- **state** (Enum): The state of the perms to return (Required)\n- **separator** (String): The separator to use for every perm (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $channelPermissionsOf added?", "Assistant": "$channelPermissionsOf was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelPermissionsOf nativly to forgescipt?", "Assistant": "Yes, $channelPermissionsOf is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $channelPinnedMessages?", "Assistant": "Returns the pinned messages of a channel\n\nExample usage:\n```js\n$channelPinnedMessages[data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $channelPinnedMessages?", "Assistant": "Use `$channelPinnedMessages` like this:\n```js\n$channelPinnedMessages[data;separator_example]\n```\n\nThis function returns the pinned messages of a channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelPinnedMessages in forgescript?", "Assistant": "Yes, You use `$channelPinnedMessages` like this:\n```js\n$channelPinnedMessages[data;separator_example]\n```\n\nThis function returns the pinned messages of a channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $channelPinnedMessages?", "Assistant": "The arguments for `$channelPinnedMessages` are as follows:\n\n- **channel ID** (Channel): The channel to pull pinned messages from (Required)\n- **separator** (String): The separator to use for every message id (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $channelPinnedMessages added?", "Assistant": "$channelPinnedMessages was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelPinnedMessages nativly to forgescipt?", "Assistant": "Yes, $channelPinnedMessages is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $channelPosition?", "Assistant": "Returns the channel position\n\nExample usage:\n```js\n$channelPosition[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $channelPosition?", "Assistant": "Use `$channelPosition` like this:\n```js\n$channelPosition[data]\n```\n\nThis function returns the channel position."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelPosition in forgescript?", "Assistant": "Yes, You use `$channelPosition` like this:\n```js\n$channelPosition[data]\n```\n\nThis function returns the channel position."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $channelPosition?", "Assistant": "The arguments for `$channelPosition` are as follows:\n\n- **channel ID** (Channel): The id of the channel to get its position (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $channelPosition added?", "Assistant": "$channelPosition was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelPosition nativly to forgescipt?", "Assistant": "Yes, $channelPosition is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $channelRawData?", "Assistant": "Returns the raw data of a channel\n\nExample usage:\n```js\n$channelRawData[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $channelRawData?", "Assistant": "Use `$channelRawData` like this:\n```js\n$channelRawData[data]\n```\n\nThis function returns the raw data of a channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelRawData in forgescript?", "Assistant": "Yes, You use `$channelRawData` like this:\n```js\n$channelRawData[data]\n```\n\nThis function returns the raw data of a channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $channelRawData?", "Assistant": "The arguments for `$channelRawData` are as follows:\n\n- **channel ID** (Channel): The channel to get raw data from (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $channelRawData added?", "Assistant": "$channelRawData was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelRawData nativly to forgescipt?", "Assistant": "Yes, $channelRawData is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $channelSlowmode?", "Assistant": "Returns the channel slowmode in seconds\n\nExample usage:\n```js\n$channelSlowmode[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $channelSlowmode?", "Assistant": "Use `$channelSlowmode` like this:\n```js\n$channelSlowmode[data]\n```\n\nThis function returns the channel slowmode in seconds."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelSlowmode in forgescript?", "Assistant": "Yes, You use `$channelSlowmode` like this:\n```js\n$channelSlowmode[data]\n```\n\nThis function returns the channel slowmode in seconds."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $channelSlowmode?", "Assistant": "The arguments for `$channelSlowmode` are as follows:\n\n- **channel ID** (Channel): The id of the channel to get its slowmode (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $channelSlowmode added?", "Assistant": "$channelSlowmode was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelSlowmode nativly to forgescipt?", "Assistant": "Yes, $channelSlowmode is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $channelTags?", "Assistant": "Retrieves tags from a forum thread\n\nExample usage:\n```js\n$channelTags[data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $channelTags?", "Assistant": "Use `$channelTags` like this:\n```js\n$channelTags[data;separator_example]\n```\n\nThis function retrieves tags from a forum thread."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelTags in forgescript?", "Assistant": "Yes, You use `$channelTags` like this:\n```js\n$channelTags[data;separator_example]\n```\n\nThis function retrieves tags from a forum thread."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $channelTags?", "Assistant": "The arguments for `$channelTags` are as follows:\n\n- **channel ID** (Channel): The channel to get tags of (Optional)\n- **separator** (String): The separator to use for every tag (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $channelTags added?", "Assistant": "$channelTags was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelTags nativly to forgescipt?", "Assistant": "Yes, $channelTags is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $channelTopic?", "Assistant": "Returns the channel topic\n\nExample usage:\n```js\n$channelTopic[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $channelTopic?", "Assistant": "Use `$channelTopic` like this:\n```js\n$channelTopic[data]\n```\n\nThis function returns the channel topic."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelTopic in forgescript?", "Assistant": "Yes, You use `$channelTopic` like this:\n```js\n$channelTopic[data]\n```\n\nThis function returns the channel topic."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $channelTopic?", "Assistant": "The arguments for `$channelTopic` are as follows:\n\n- **channel ID** (Channel): The id of the channel (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $channelTopic added?", "Assistant": "$channelTopic was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelTopic nativly to forgescipt?", "Assistant": "Yes, $channelTopic is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $channelType?", "Assistant": "Returns the channel type\n\nExample usage:\n```js\n$channelType[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $channelType?", "Assistant": "Use `$channelType` like this:\n```js\n$channelType[data]\n```\n\nThis function returns the channel type."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelType in forgescript?", "Assistant": "Yes, You use `$channelType` like this:\n```js\n$channelType[data]\n```\n\nThis function returns the channel type."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $channelType?", "Assistant": "The arguments for `$channelType` are as follows:\n\n- **channel ID** (Channel): The id of the channel (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $channelType added?", "Assistant": "$channelType was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelType nativly to forgescipt?", "Assistant": "Yes, $channelType is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $channelUserLimit?", "Assistant": "Returns the user limit of the voice channel\n\nExample usage:\n```js\n$channelUserLimit[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $channelUserLimit?", "Assistant": "Use `$channelUserLimit` like this:\n```js\n$channelUserLimit[data]\n```\n\nThis function returns the user limit of the voice channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelUserLimit in forgescript?", "Assistant": "Yes, You use `$channelUserLimit` like this:\n```js\n$channelUserLimit[data]\n```\n\nThis function returns the user limit of the voice channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $channelUserLimit?", "Assistant": "The arguments for `$channelUserLimit` are as follows:\n\n- **channel ID** (Channel): The id of the channel (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $channelUserLimit added?", "Assistant": "$channelUserLimit was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelUserLimit nativly to forgescipt?", "Assistant": "Yes, $channelUserLimit is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $channelVoiceMemberCount?", "Assistant": "Returns the member count that are connected to this voice channel\n\nExample usage:\n```js\n$channelVoiceMemberCount[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $channelVoiceMemberCount?", "Assistant": "Use `$channelVoiceMemberCount` like this:\n```js\n$channelVoiceMemberCount[data]\n```\n\nThis function returns the member count that are connected to this voice channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelVoiceMemberCount in forgescript?", "Assistant": "Yes, You use `$channelVoiceMemberCount` like this:\n```js\n$channelVoiceMemberCount[data]\n```\n\nThis function returns the member count that are connected to this voice channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $channelVoiceMemberCount?", "Assistant": "The arguments for `$channelVoiceMemberCount` are as follows:\n\n- **channel ID** (Channel): The id of the channel (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $channelVoiceMemberCount added?", "Assistant": "$channelVoiceMemberCount was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelVoiceMemberCount nativly to forgescipt?", "Assistant": "Yes, $channelVoiceMemberCount is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $channelVoiceMemberIDs?", "Assistant": "Returns the members that are connected to this voice channel\n\nExample usage:\n```js\n$channelVoiceMemberIDs[data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $channelVoiceMemberIDs?", "Assistant": "Use `$channelVoiceMemberIDs` like this:\n```js\n$channelVoiceMemberIDs[data;separator_example]\n```\n\nThis function returns the members that are connected to this voice channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelVoiceMemberIDs in forgescript?", "Assistant": "Yes, You use `$channelVoiceMemberIDs` like this:\n```js\n$channelVoiceMemberIDs[data;separator_example]\n```\n\nThis function returns the members that are connected to this voice channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $channelVoiceMemberIDs?", "Assistant": "The arguments for `$channelVoiceMemberIDs` are as follows:\n\n- **channel ID** (Channel): The id of the channel (Required)\n- **separator** (String): Separator to use for every id (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $channelVoiceMemberIDs added?", "Assistant": "$channelVoiceMemberIDs was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelVoiceMemberIDs nativly to forgescipt?", "Assistant": "Yes, $channelVoiceMemberIDs is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $channelVoiceRegion?", "Assistant": "Returns the region of a voice channel\n\nExample usage:\n```js\n$channelVoiceRegion[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $channelVoiceRegion?", "Assistant": "Use `$channelVoiceRegion` like this:\n```js\n$channelVoiceRegion[data]\n```\n\nThis function returns the region of a voice channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelVoiceRegion in forgescript?", "Assistant": "Yes, You use `$channelVoiceRegion` like this:\n```js\n$channelVoiceRegion[data]\n```\n\nThis function returns the region of a voice channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $channelVoiceRegion?", "Assistant": "The arguments for `$channelVoiceRegion` are as follows:\n\n- **channel ID** (Channel): The channel to get its region (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $channelVoiceRegion added?", "Assistant": "$channelVoiceRegion was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelVoiceRegion nativly to forgescipt?", "Assistant": "Yes, $channelVoiceRegion is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $clearChannelPerms?", "Assistant": "Deletes all permission overwrites from the channel or given id, returns bool\n\nExample usage:\n```js\n$clearChannelPerms[data;id_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $clearChannelPerms?", "Assistant": "Use `$clearChannelPerms` like this:\n```js\n$clearChannelPerms[data;id_example]\n```\n\nThis function deletes all permission overwrites from the channel or given id, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $clearChannelPerms in forgescript?", "Assistant": "Yes, You use `$clearChannelPerms` like this:\n```js\n$clearChannelPerms[data;id_example]\n```\n\nThis function deletes all permission overwrites from the channel or given id, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $clearChannelPerms?", "Assistant": "The arguments for `$clearChannelPerms` are as follows:\n\n- **channel ID** (Channel): The channel to delete perms from (Required)\n- **id** (String): The role or member id to delete all perms for (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $clearChannelPerms added?", "Assistant": "$clearChannelPerms was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $clearChannelPerms nativly to forgescipt?", "Assistant": "Yes, $clearChannelPerms is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $clearMessages?", "Assistant": "Clears x amount of messages from a channel, returns the number of messages deleted\n\nExample usage:\n```js\n$clearMessages[data;6;true;true]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $clearMessages?", "Assistant": "Use `$clearMessages` like this:\n```js\n$clearMessages[data;6;true;true]\n```\n\nThis function clears x amount of messages from a channel, returns the number of messages deleted."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $clearMessages in forgescript?", "Assistant": "Yes, You use `$clearMessages` like this:\n```js\n$clearMessages[data;6;true;true]\n```\n\nThis function clears x amount of messages from a channel, returns the number of messages deleted."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $clearMessages?", "Assistant": "The arguments for `$clearMessages` are as follows:\n\n- **channel ID** (Channel): The channel to clear messages on (Required)\n- **amount** (Number): The amount of messages to delete (Required)\n- **delete pinned** (Boolean): Whether to delete pinned messages (Optional)\n- **delete bots** (Boolean): Whether to delete messages of bots (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $clearMessages added?", "Assistant": "$clearMessages was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $clearMessages nativly to forgescipt?", "Assistant": "Yes, $clearMessages is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $clearUserMessages?", "Assistant": "Clears x amount of messages from a channel of given user, returns the number of messages deleted\n\nExample usage:\n```js\n$clearUserMessages[data;data;50;true]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $clearUserMessages?", "Assistant": "Use `$clearUserMessages` like this:\n```js\n$clearUserMessages[data;data;50;true]\n```\n\nThis function clears x amount of messages from a channel of given user, returns the number of messages deleted."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $clearUserMessages in forgescript?", "Assistant": "Yes, You use `$clearUserMessages` like this:\n```js\n$clearUserMessages[data;data;50;true]\n```\n\nThis function clears x amount of messages from a channel of given user, returns the number of messages deleted."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $clearUserMessages?", "Assistant": "The arguments for `$clearUserMessages` are as follows:\n\n- **channel ID** (Channel): The channel to clear messages on (Required)\n- **user ID** (User): The user to delete their messages (Required)\n- **amount** (Number): The amount of messages to delete (Required)\n- **delete pinned** (Boolean): Whether to delete pinned messages (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $clearUserMessages added?", "Assistant": "$clearUserMessages was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $clearUserMessages nativly to forgescipt?", "Assistant": "Yes, $clearUserMessages is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $cloneChannel?", "Assistant": "Clones the given channel\n\nExample usage:\n```js\n$cloneChannel[data;name_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $cloneChannel?", "Assistant": "Use `$cloneChannel` like this:\n```js\n$cloneChannel[data;name_example]\n```\n\nThis function clones the given channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $cloneChannel in forgescript?", "Assistant": "Yes, You use `$cloneChannel` like this:\n```js\n$cloneChannel[data;name_example]\n```\n\nThis function clones the given channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $cloneChannel?", "Assistant": "The arguments for `$cloneChannel` are as follows:\n\n- **channel ID** (Channel): The channel to clone (Required)\n- **name** (String): The name for the cloned channel (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $cloneChannel added?", "Assistant": "$cloneChannel was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $cloneChannel nativly to forgescipt?", "Assistant": "Yes, $cloneChannel is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $cloneChannelPerms?", "Assistant": "Clones the given channel's perms to another channel, returns bool\n\nExample usage:\n```js\n$cloneChannelPerms[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $cloneChannelPerms?", "Assistant": "Use `$cloneChannelPerms` like this:\n```js\n$cloneChannelPerms[data;data]\n```\n\nThis function clones the given channel's perms to another channel, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $cloneChannelPerms in forgescript?", "Assistant": "Yes, You use `$cloneChannelPerms` like this:\n```js\n$cloneChannelPerms[data;data]\n```\n\nThis function clones the given channel's perms to another channel, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $cloneChannelPerms?", "Assistant": "The arguments for `$cloneChannelPerms` are as follows:\n\n- **channel ID** (Channel): The channel to clone its perms (Required)\n- **channel ID** (Channel): The other channel to set new perms for (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $cloneChannelPerms added?", "Assistant": "$cloneChannelPerms was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $cloneChannelPerms nativly to forgescipt?", "Assistant": "Yes, $cloneChannelPerms is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $createChannel?", "Assistant": "Creates a channel in a guild, returns the channel id\n\nExample usage:\n```js\n$createChannel[data;channel_name_example;GuildVoice;topic_example;parent_ID_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $createChannel?", "Assistant": "Use `$createChannel` like this:\n```js\n$createChannel[data;channel_name_example;GuildVoice;topic_example;parent_ID_example]\n```\n\nThis function creates a channel in a guild, returns the channel id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $createChannel in forgescript?", "Assistant": "Yes, You use `$createChannel` like this:\n```js\n$createChannel[data;channel_name_example;GuildVoice;topic_example;parent_ID_example]\n```\n\nThis function creates a channel in a guild, returns the channel id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $createChannel?", "Assistant": "The arguments for `$createChannel` are as follows:\n\n- **guild ID** (Guild): The guild to create this channel on (Required)\n- **channel name** (String): The name for the channel (Required)\n- **channel type** (Enum): The type of the channel, some are not supported (Required)\n- **topic** (String): The topic for the channel (Optional)\n- **parent ID** (String): The parent id for the channel (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $createChannel added?", "Assistant": "$createChannel was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $createChannel nativly to forgescipt?", "Assistant": "Yes, $createChannel is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $createForumPost?", "Assistant": "Creates a forum post, returns the post channel id\n\nExample usage:\n```js\n$createForumPost[data;title_example;description_example;tags_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $createForumPost?", "Assistant": "Use `$createForumPost` like this:\n```js\n$createForumPost[data;title_example;description_example;tags_example]\n```\n\nThis function creates a forum post, returns the post channel id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $createForumPost in forgescript?", "Assistant": "Yes, You use `$createForumPost` like this:\n```js\n$createForumPost[data;title_example;description_example;tags_example]\n```\n\nThis function creates a forum post, returns the post channel id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $createForumPost?", "Assistant": "The arguments for `$createForumPost` are as follows:\n\n- **channel ID** (Channel): The channel to create a post on (Required)\n- **title** (String): The post title (Required)\n- **description** (String): The post description (Optional)\n- **tags** (String): The tags for the post (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $createForumPost added?", "Assistant": "$createForumPost was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $createForumPost nativly to forgescipt?", "Assistant": "Yes, $createForumPost is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $createInvite?", "Assistant": "Creates an invite, returns the code\n\nExample usage:\n```js\n$createInvite[data;33;57;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $createInvite?", "Assistant": "Use `$createInvite` like this:\n```js\n$createInvite[data;33;57;reason_example]\n```\n\nThis function creates an invite, returns the code."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $createInvite in forgescript?", "Assistant": "Yes, You use `$createInvite` like this:\n```js\n$createInvite[data;33;57;reason_example]\n```\n\nThis function creates an invite, returns the code."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $createInvite?", "Assistant": "The arguments for `$createInvite` are as follows:\n\n- **channel ID** (Channel): The channel to make the invite for (Required)\n- **max uses** (Number): The max amount of uses for this invite (Optional)\n- **max age** (Number): The max age for this invite (Optional)\n- **reason** (String): The reason for creating this invite (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $createInvite added?", "Assistant": "$createInvite was added in ForgeScript version 1.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $createInvite nativly to forgescipt?", "Assistant": "Yes, $createInvite is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $createThread?", "Assistant": "Creates a thread, returns thread channel id on success\n\nExample usage:\n```js\n$createThread[data;name_example;data;false;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $createThread?", "Assistant": "Use `$createThread` like this:\n```js\n$createThread[data;name_example;data;false;reason_example]\n```\n\nThis function creates a thread, returns thread channel id on success."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $createThread in forgescript?", "Assistant": "Yes, You use `$createThread` like this:\n```js\n$createThread[data;name_example;data;false;reason_example]\n```\n\nThis function creates a thread, returns thread channel id on success."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $createThread?", "Assistant": "The arguments for `$createThread` are as follows:\n\n- **channel ID** (Channel): The channel to create the thread at (Optional)\n- **name** (String): The name for the thread (Required)\n- **message ID** (Message): The message to start thread for (Optional)\n- **private** (Boolean): Whether this thread is private (Optional)\n- **reason** (String): Reason for creating thread (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $createThread added?", "Assistant": "$createThread was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $createThread nativly to forgescipt?", "Assistant": "Yes, $createThread is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $deleteChannelPerms?", "Assistant": "Deletes some permission overwrites from a channel, returns bool\n\nExample usage:\n```js\n$deleteChannelPerms[data;id_example;perms_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $deleteChannelPerms?", "Assistant": "Use `$deleteChannelPerms` like this:\n```js\n$deleteChannelPerms[data;id_example;perms_example]\n```\n\nThis function deletes some permission overwrites from a channel, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteChannelPerms in forgescript?", "Assistant": "Yes, You use `$deleteChannelPerms` like this:\n```js\n$deleteChannelPerms[data;id_example;perms_example]\n```\n\nThis function deletes some permission overwrites from a channel, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $deleteChannelPerms?", "Assistant": "The arguments for `$deleteChannelPerms` are as follows:\n\n- **channel ID** (Channel): The channel to clear perms from (Required)\n- **id** (String): The role or member id to clear these perms for (Required)\n- **perms** (String): The perms to clear from the id (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $deleteChannelPerms added?", "Assistant": "$deleteChannelPerms was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteChannelPerms nativly to forgescipt?", "Assistant": "Yes, $deleteChannelPerms is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $deleteChannels?", "Assistant": "Delete given channel ids, returns the count of channels deleted\n\nExample usage:\n```js\n$deleteChannels[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $deleteChannels?", "Assistant": "Use `$deleteChannels` like this:\n```js\n$deleteChannels[data]\n```\n\nThis function delete given channel ids, returns the count of channels deleted."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteChannels in forgescript?", "Assistant": "Yes, You use `$deleteChannels` like this:\n```js\n$deleteChannels[data]\n```\n\nThis function delete given channel ids, returns the count of channels deleted."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $deleteChannels?", "Assistant": "The arguments for `$deleteChannels` are as follows:\n\n- **channels** (Channel): The channels to delete (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $deleteChannels added?", "Assistant": "$deleteChannels was added in ForgeScript version 1.0.5."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteChannels nativly to forgescipt?", "Assistant": "Yes, $deleteChannels is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $deleteThread?", "Assistant": "Deletes a thread, returns bool\n\nExample usage:\n```js\n$deleteThread[data;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $deleteThread?", "Assistant": "Use `$deleteThread` like this:\n```js\n$deleteThread[data;reason_example]\n```\n\nThis function deletes a thread, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteThread in forgescript?", "Assistant": "Yes, You use `$deleteThread` like this:\n```js\n$deleteThread[data;reason_example]\n```\n\nThis function deletes a thread, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $deleteThread?", "Assistant": "The arguments for `$deleteThread` are as follows:\n\n- **channel ID** (Channel): The thread to deleteive (Required)\n- **reason** (String): The reason to archive this thread (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $deleteThread added?", "Assistant": "$deleteThread was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteThread nativly to forgescipt?", "Assistant": "Yes, $deleteThread is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $dmChannelID?", "Assistant": "Returns the dm channel id of a user\n\nExample usage:\n```js\n$dmChannelID[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $dmChannelID?", "Assistant": "Use `$dmChannelID` like this:\n```js\n$dmChannelID[data]\n```\n\nThis function returns the dm channel id of a user."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $dmChannelID in forgescript?", "Assistant": "Yes, You use `$dmChannelID` like this:\n```js\n$dmChannelID[data]\n```\n\nThis function returns the dm channel id of a user."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $dmChannelID?", "Assistant": "The arguments for `$dmChannelID` are as follows:\n\n- **user ID** (User): User to get the dm channel (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $dmChannelID added?", "Assistant": "$dmChannelID was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $dmChannelID nativly to forgescipt?", "Assistant": "Yes, $dmChannelID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $firstMessageID?", "Assistant": "Returns the first message sent in a channel\n\nExample usage:\n```js\n$firstMessageID[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $firstMessageID?", "Assistant": "Use `$firstMessageID` like this:\n```js\n$firstMessageID[data]\n```\n\nThis function returns the first message sent in a channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $firstMessageID in forgescript?", "Assistant": "Yes, You use `$firstMessageID` like this:\n```js\n$firstMessageID[data]\n```\n\nThis function returns the first message sent in a channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $firstMessageID?", "Assistant": "The arguments for `$firstMessageID` are as follows:\n\n- **channel ID** (Channel): The channel to pull first message from (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $firstMessageID added?", "Assistant": "$firstMessageID was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $firstMessageID nativly to forgescipt?", "Assistant": "Yes, $firstMessageID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $forumTags?", "Assistant": "Returns all available tags of a forum\n\nExample usage:\n```js\n$forumTags[data;emoji;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $forumTags?", "Assistant": "Use `$forumTags` like this:\n```js\n$forumTags[data;emoji;separator_example]\n```\n\nThis function returns all available tags of a forum."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $forumTags in forgescript?", "Assistant": "Yes, You use `$forumTags` like this:\n```js\n$forumTags[data;emoji;separator_example]\n```\n\nThis function returns all available tags of a forum."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $forumTags?", "Assistant": "The arguments for `$forumTags` are as follows:\n\n- **channel ID** (Channel): The channel to get tags of (Required)\n- **property** (Enum): The property to return for every tag (Optional)\n- **separator** (String): The separator to use for every tag property (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $forumTags added?", "Assistant": "$forumTags was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $forumTags nativly to forgescipt?", "Assistant": "Yes, $forumTags is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildChannelID?", "Assistant": "Gets the guild channel id of a channel name\n\nExample usage:\n```js\n$guildChannelID[data;name_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildChannelID?", "Assistant": "Use `$guildChannelID` like this:\n```js\n$guildChannelID[data;name_example]\n```\n\nThis function gets the guild channel id of a channel name."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildChannelID in forgescript?", "Assistant": "Yes, You use `$guildChannelID` like this:\n```js\n$guildChannelID[data;name_example]\n```\n\nThis function gets the guild channel id of a channel name."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildChannelID?", "Assistant": "The arguments for `$guildChannelID` are as follows:\n\n- **guild ID** (Guild): The guild to use (Required)\n- **name** (String): The channel name to get it's id (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildChannelID added?", "Assistant": "$guildChannelID was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildChannelID nativly to forgescipt?", "Assistant": "Yes, $guildChannelID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $lastMessageID?", "Assistant": "Returns the latest message sent in a channel\n\nExample usage:\n```js\n$lastMessageID[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $lastMessageID?", "Assistant": "Use `$lastMessageID` like this:\n```js\n$lastMessageID[data;data]\n```\n\nThis function returns the latest message sent in a channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $lastMessageID in forgescript?", "Assistant": "Yes, You use `$lastMessageID` like this:\n```js\n$lastMessageID[data;data]\n```\n\nThis function returns the latest message sent in a channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $lastMessageID?", "Assistant": "The arguments for `$lastMessageID` are as follows:\n\n- **channel ID** (Channel): The channel to pull last message from (Required)\n- **user ID** (User): The user id to get its last message sent (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $lastMessageID added?", "Assistant": "$lastMessageID was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $lastMessageID nativly to forgescipt?", "Assistant": "Yes, $lastMessageID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $lastPinTimestamp?", "Assistant": "Returns the latest pin timestamp of a channel\n\nExample usage:\n```js\n$lastPinTimestamp[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $lastPinTimestamp?", "Assistant": "Use `$lastPinTimestamp` like this:\n```js\n$lastPinTimestamp[data]\n```\n\nThis function returns the latest pin timestamp of a channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $lastPinTimestamp in forgescript?", "Assistant": "Yes, You use `$lastPinTimestamp` like this:\n```js\n$lastPinTimestamp[data]\n```\n\nThis function returns the latest pin timestamp of a channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $lastPinTimestamp?", "Assistant": "The arguments for `$lastPinTimestamp` are as follows:\n\n- **channel ID** (Channel): The channel to pull last pin from (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $lastPinTimestamp added?", "Assistant": "$lastPinTimestamp was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $lastPinTimestamp nativly to forgescipt?", "Assistant": "Yes, $lastPinTimestamp is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $lockThread?", "Assistant": "Locks a thread, returns bool\n\nExample usage:\n```js\n$lockThread[data;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $lockThread?", "Assistant": "Use `$lockThread` like this:\n```js\n$lockThread[data;reason_example]\n```\n\nThis function locks a thread, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $lockThread in forgescript?", "Assistant": "Yes, You use `$lockThread` like this:\n```js\n$lockThread[data;reason_example]\n```\n\nThis function locks a thread, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $lockThread?", "Assistant": "The arguments for `$lockThread` are as follows:\n\n- **channel ID** (Channel): The thread to lock (Required)\n- **reason** (String): The reason to lock this thread (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $lockThread added?", "Assistant": "$lockThread was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $lockThread nativly to forgescipt?", "Assistant": "Yes, $lockThread is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $modifyChannelPerms?", "Assistant": "Modifies given channel perms for a role or user\n\nExample usage:\n```js\n$modifyChannelPerms[data;data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $modifyChannelPerms?", "Assistant": "Use `$modifyChannelPerms` like this:\n```js\n$modifyChannelPerms[data;data;data]\n```\n\nThis function modifies given channel perms for a role or user."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $modifyChannelPerms in forgescript?", "Assistant": "Yes, You use `$modifyChannelPerms` like this:\n```js\n$modifyChannelPerms[data;data;data]\n```\n\nThis function modifies given channel perms for a role or user."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $modifyChannelPerms?", "Assistant": "The arguments for `$modifyChannelPerms` are as follows:\n\n- **channel ID** (Channel): The channel to modify perms for (Required)\n- **roleOrUser** (RoleOrUser): The role or user to modify perms for (Required)\n- **perms** (OverwritePermission): The permissions to allow, nullify or disallow, (+,/,-)Perm (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $modifyChannelPerms added?", "Assistant": "$modifyChannelPerms was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $modifyChannelPerms nativly to forgescipt?", "Assistant": "Yes, $modifyChannelPerms is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $modifyForumTags?", "Assistant": "Modifies tags of a forum post, returns bool\n\nExample usage:\n```js\n$modifyForumTags[data;reason_example;tags_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $modifyForumTags?", "Assistant": "Use `$modifyForumTags` like this:\n```js\n$modifyForumTags[data;reason_example;tags_example]\n```\n\nThis function modifies tags of a forum post, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $modifyForumTags in forgescript?", "Assistant": "Yes, You use `$modifyForumTags` like this:\n```js\n$modifyForumTags[data;reason_example;tags_example]\n```\n\nThis function modifies tags of a forum post, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $modifyForumTags?", "Assistant": "The arguments for `$modifyForumTags` are as follows:\n\n- **channel ID** (Channel): The post to edit tags on (Required)\n- **reason** (String): The reason for modifying post tags (Optional)\n- **tags** (String): The tags for the post (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $modifyForumTags added?", "Assistant": "$modifyForumTags was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $modifyForumTags nativly to forgescipt?", "Assistant": "Yes, $modifyForumTags is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $randomChannelID?", "Assistant": "Returns a random channel ID\n\nExample usage:\n```js\n$randomChannelID[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $randomChannelID?", "Assistant": "Use `$randomChannelID` like this:\n```js\n$randomChannelID[]\n```\n\nThis function returns a random channel id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $randomChannelID in forgescript?", "Assistant": "Yes, You use `$randomChannelID` like this:\n```js\n$randomChannelID[]\n```\n\nThis function returns a random channel id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $randomChannelID?", "Assistant": "The arguments for `$randomChannelID` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $randomChannelID added?", "Assistant": "$randomChannelID was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $randomChannelID nativly to forgescipt?", "Assistant": "Yes, $randomChannelID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $randomGuildChannelID?", "Assistant": "Returns a random channel ID of a guild\n\nExample usage:\n```js\n$randomGuildChannelID[data;DM]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $randomGuildChannelID?", "Assistant": "Use `$randomGuildChannelID` like this:\n```js\n$randomGuildChannelID[data;DM]\n```\n\nThis function returns a random channel id of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $randomGuildChannelID in forgescript?", "Assistant": "Yes, You use `$randomGuildChannelID` like this:\n```js\n$randomGuildChannelID[data;DM]\n```\n\nThis function returns a random channel id of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $randomGuildChannelID?", "Assistant": "The arguments for `$randomGuildChannelID` are as follows:\n\n- **guild ID** (Guild): The guild to get channel from (Required)\n- **types** (Enum): The channel types to get an id from (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $randomGuildChannelID added?", "Assistant": "$randomGuildChannelID was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $randomGuildChannelID nativly to forgescipt?", "Assistant": "Yes, $randomGuildChannelID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $removeChannelPerms?", "Assistant": "Removes permission overwrites from a channel, returns bool\n\nExample usage:\n```js\n$removeChannelPerms[data;id_example;perms_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $removeChannelPerms?", "Assistant": "Use `$removeChannelPerms` like this:\n```js\n$removeChannelPerms[data;id_example;perms_example]\n```\n\nThis function removes permission overwrites from a channel, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $removeChannelPerms in forgescript?", "Assistant": "Yes, You use `$removeChannelPerms` like this:\n```js\n$removeChannelPerms[data;id_example;perms_example]\n```\n\nThis function removes permission overwrites from a channel, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $removeChannelPerms?", "Assistant": "The arguments for `$removeChannelPerms` are as follows:\n\n- **channel ID** (Channel): The channel to remove perms from (Required)\n- **id** (String): The role or member id to remove these perms from (Required)\n- **perms** (String): The perms to remove from the id (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $removeChannelPerms added?", "Assistant": "$removeChannelPerms was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $removeChannelPerms nativly to forgescipt?", "Assistant": "Yes, $removeChannelPerms is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $removeThreadMember?", "Assistant": "Removes a thread member\n\nExample usage:\n```js\n$removeThreadMember[data;data;data;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $removeThreadMember?", "Assistant": "Use `$removeThreadMember` like this:\n```js\n$removeThreadMember[data;data;data;reason_example]\n```\n\nThis function removes a thread member."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $removeThreadMember in forgescript?", "Assistant": "Yes, You use `$removeThreadMember` like this:\n```js\n$removeThreadMember[data;data;data;reason_example]\n```\n\nThis function removes a thread member."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $removeThreadMember?", "Assistant": "The arguments for `$removeThreadMember` are as follows:\n\n- **guild ID** (Guild): The guild to pull member from (Required)\n- **channel ID** (Channel): The thread to remove member from (Required)\n- **user ID** (Member): The member to remove (Required)\n- **reason** (String): The reason to remove this member from thread (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $removeThreadMember added?", "Assistant": "$removeThreadMember was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $removeThreadMember nativly to forgescipt?", "Assistant": "Yes, $removeThreadMember is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $sendMessage?", "Assistant": "Sends a message to a channel\n\nExample usage:\n```js\n$sendMessage[data;content_example;false]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $sendMessage?", "Assistant": "Use `$sendMessage` like this:\n```js\n$sendMessage[data;content_example;false]\n```\n\nThis function sends a message to a channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $sendMessage in forgescript?", "Assistant": "Yes, You use `$sendMessage` like this:\n```js\n$sendMessage[data;content_example;false]\n```\n\nThis function sends a message to a channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $sendMessage?", "Assistant": "The arguments for `$sendMessage` are as follows:\n\n- **channel ID** (Channel): The channel to send this message to (Required)\n- **content** (String): The content for the message (Optional)\n- **return message ID** (Boolean): Whether to return the message id of the newly sent message (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $sendMessage added?", "Assistant": "$sendMessage was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $sendMessage nativly to forgescipt?", "Assistant": "Yes, $sendMessage is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setChannelArchiveDuration?", "Assistant": "Modifies a channel's archive duration\n\nExample usage:\n```js\n$setChannelArchiveDuration[data;OneDay;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setChannelArchiveDuration?", "Assistant": "Use `$setChannelArchiveDuration` like this:\n```js\n$setChannelArchiveDuration[data;OneDay;reason_example]\n```\n\nThis function modifies a channel's archive duration."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setChannelArchiveDuration in forgescript?", "Assistant": "Yes, You use `$setChannelArchiveDuration` like this:\n```js\n$setChannelArchiveDuration[data;OneDay;reason_example]\n```\n\nThis function modifies a channel's archive duration."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setChannelArchiveDuration?", "Assistant": "The arguments for `$setChannelArchiveDuration` are as follows:\n\n- **channel ID** (Channel): The channel to modify (Required)\n- **duration** (Enum): The new duration of archive (Required)\n- **reason** (String): Reason for modifying archive duration (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setChannelArchiveDuration added?", "Assistant": "$setChannelArchiveDuration was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setChannelArchiveDuration nativly to forgescipt?", "Assistant": "Yes, $setChannelArchiveDuration is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setChannelCategory?", "Assistant": "Sets a channel's category, returns bool\n\nExample usage:\n```js\n$setChannelCategory[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setChannelCategory?", "Assistant": "Use `$setChannelCategory` like this:\n```js\n$setChannelCategory[data;data]\n```\n\nThis function sets a channel's category, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setChannelCategory in forgescript?", "Assistant": "Yes, You use `$setChannelCategory` like this:\n```js\n$setChannelCategory[data;data]\n```\n\nThis function sets a channel's category, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setChannelCategory?", "Assistant": "The arguments for `$setChannelCategory` are as follows:\n\n- **channel ID** (Channel): The channel id to set its category (Required)\n- **category ID** (Channel): The category to set (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setChannelCategory added?", "Assistant": "$setChannelCategory was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setChannelCategory nativly to forgescipt?", "Assistant": "Yes, $setChannelCategory is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setChannelName?", "Assistant": "Sets a channel name, returns bool\n\nExample usage:\n```js\n$setChannelName[data;name_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setChannelName?", "Assistant": "Use `$setChannelName` like this:\n```js\n$setChannelName[data;name_example]\n```\n\nThis function sets a channel name, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setChannelName in forgescript?", "Assistant": "Yes, You use `$setChannelName` like this:\n```js\n$setChannelName[data;name_example]\n```\n\nThis function sets a channel name, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setChannelName?", "Assistant": "The arguments for `$setChannelName` are as follows:\n\n- **channel ID** (Channel): The channel id to set its name (Required)\n- **name** (String): The name to set (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setChannelName added?", "Assistant": "$setChannelName was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setChannelName nativly to forgescipt?", "Assistant": "Yes, $setChannelName is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setChannelNSFW?", "Assistant": "Sets a channel nsfw state, returns bool\n\nExample usage:\n```js\n$setChannelNSFW[data;false]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setChannelNSFW?", "Assistant": "Use `$setChannelNSFW` like this:\n```js\n$setChannelNSFW[data;false]\n```\n\nThis function sets a channel nsfw state, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setChannelNSFW in forgescript?", "Assistant": "Yes, You use `$setChannelNSFW` like this:\n```js\n$setChannelNSFW[data;false]\n```\n\nThis function sets a channel nsfw state, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setChannelNSFW?", "Assistant": "The arguments for `$setChannelNSFW` are as follows:\n\n- **channel ID** (Channel): The channel id to set its nsfw state (Required)\n- **state** (Boolean): The state to set (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setChannelNSFW added?", "Assistant": "$setChannelNSFW was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setChannelNSFW nativly to forgescipt?", "Assistant": "Yes, $setChannelNSFW is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setChannelSlowmode?", "Assistant": "Sets a channel slowmode, returns bool\n\nExample usage:\n```js\n$setChannelSlowmode[data;3]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setChannelSlowmode?", "Assistant": "Use `$setChannelSlowmode` like this:\n```js\n$setChannelSlowmode[data;3]\n```\n\nThis function sets a channel slowmode, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setChannelSlowmode in forgescript?", "Assistant": "Yes, You use `$setChannelSlowmode` like this:\n```js\n$setChannelSlowmode[data;3]\n```\n\nThis function sets a channel slowmode, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setChannelSlowmode?", "Assistant": "The arguments for `$setChannelSlowmode` are as follows:\n\n- **channel ID** (Channel): The channel id to set its nsfw state (Required)\n- **seconds** (Number): The number of seconds per message (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setChannelSlowmode added?", "Assistant": "$setChannelSlowmode was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setChannelSlowmode nativly to forgescipt?", "Assistant": "Yes, $setChannelSlowmode is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setChannelTopic?", "Assistant": "Sets a channel topic, returns bool\n\nExample usage:\n```js\n$setChannelTopic[data;topic_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setChannelTopic?", "Assistant": "Use `$setChannelTopic` like this:\n```js\n$setChannelTopic[data;topic_example]\n```\n\nThis function sets a channel topic, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setChannelTopic in forgescript?", "Assistant": "Yes, You use `$setChannelTopic` like this:\n```js\n$setChannelTopic[data;topic_example]\n```\n\nThis function sets a channel topic, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setChannelTopic?", "Assistant": "The arguments for `$setChannelTopic` are as follows:\n\n- **channel ID** (Channel): The channel id to set its topic (Required)\n- **topic** (String): The topic to set (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setChannelTopic added?", "Assistant": "$setChannelTopic was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setChannelTopic nativly to forgescipt?", "Assistant": "Yes, $setChannelTopic is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setDefaultThreadArchiveDuration?", "Assistant": "Modifies a forum's auto archive thread duration\n\nExample usage:\n```js\n$setDefaultThreadArchiveDuration[data;OneWeek;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setDefaultThreadArchiveDuration?", "Assistant": "Use `$setDefaultThreadArchiveDuration` like this:\n```js\n$setDefaultThreadArchiveDuration[data;OneWeek;reason_example]\n```\n\nThis function modifies a forum's auto archive thread duration."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setDefaultThreadArchiveDuration in forgescript?", "Assistant": "Yes, You use `$setDefaultThreadArchiveDuration` like this:\n```js\n$setDefaultThreadArchiveDuration[data;OneWeek;reason_example]\n```\n\nThis function modifies a forum's auto archive thread duration."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setDefaultThreadArchiveDuration?", "Assistant": "The arguments for `$setDefaultThreadArchiveDuration` are as follows:\n\n- **channel ID** (Channel): The forum to modify (Required)\n- **duration** (Enum): The new duration of auto archive (Required)\n- **reason** (String): Reason for modifying archive duration (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setDefaultThreadArchiveDuration added?", "Assistant": "$setDefaultThreadArchiveDuration was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setDefaultThreadArchiveDuration nativly to forgescipt?", "Assistant": "Yes, $setDefaultThreadArchiveDuration is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setThreadArchiveDuration?", "Assistant": "Modifies a thread's auto archive duration\n\nExample usage:\n```js\n$setThreadArchiveDuration[data;OneWeek;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setThreadArchiveDuration?", "Assistant": "Use `$setThreadArchiveDuration` like this:\n```js\n$setThreadArchiveDuration[data;OneWeek;reason_example]\n```\n\nThis function modifies a thread's auto archive duration."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setThreadArchiveDuration in forgescript?", "Assistant": "Yes, You use `$setThreadArchiveDuration` like this:\n```js\n$setThreadArchiveDuration[data;OneWeek;reason_example]\n```\n\nThis function modifies a thread's auto archive duration."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setThreadArchiveDuration?", "Assistant": "The arguments for `$setThreadArchiveDuration` are as follows:\n\n- **channel ID** (Channel): The thread to modify (Required)\n- **duration** (Enum): The new duration of auto archive (Required)\n- **reason** (String): Reason for modifying archive duration (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setThreadArchiveDuration added?", "Assistant": "$setThreadArchiveDuration was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setThreadArchiveDuration nativly to forgescipt?", "Assistant": "Yes, $setThreadArchiveDuration is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setVoiceBitrate?", "Assistant": "Sets the bitrate quality of a voice channel, returns bool\n\nExample usage:\n```js\n$setVoiceBitrate[data;97;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setVoiceBitrate?", "Assistant": "Use `$setVoiceBitrate` like this:\n```js\n$setVoiceBitrate[data;97;reason_example]\n```\n\nThis function sets the bitrate quality of a voice channel, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setVoiceBitrate in forgescript?", "Assistant": "Yes, You use `$setVoiceBitrate` like this:\n```js\n$setVoiceBitrate[data;97;reason_example]\n```\n\nThis function sets the bitrate quality of a voice channel, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setVoiceBitrate?", "Assistant": "The arguments for `$setVoiceBitrate` are as follows:\n\n- **channel ID** (Channel): The channel to edit bitrate (Required)\n- **bitrate** (Number): The new bitrate (Required)\n- **reason** (String): Reason to change the bitrate (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setVoiceBitrate added?", "Assistant": "$setVoiceBitrate was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setVoiceBitrate nativly to forgescipt?", "Assistant": "Yes, $setVoiceBitrate is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setVoiceDeaf?", "Assistant": "Deafens a member from voice channel\n\nExample usage:\n```js\n$setVoiceDeaf[data;data;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setVoiceDeaf?", "Assistant": "Use `$setVoiceDeaf` like this:\n```js\n$setVoiceDeaf[data;data;reason_example]\n```\n\nThis function deafens a member from voice channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setVoiceDeaf in forgescript?", "Assistant": "Yes, You use `$setVoiceDeaf` like this:\n```js\n$setVoiceDeaf[data;data;reason_example]\n```\n\nThis function deafens a member from voice channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setVoiceDeaf?", "Assistant": "The arguments for `$setVoiceDeaf` are as follows:\n\n- **guild ID** (Guild): The guild to pull member from (Required)\n- **user ID** (Member): The user to deafen (Required)\n- **reason** (String): Reason to deafen this user (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setVoiceDeaf added?", "Assistant": "$setVoiceDeaf was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setVoiceDeaf nativly to forgescipt?", "Assistant": "Yes, $setVoiceDeaf is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setVoiceMute?", "Assistant": "Mutes a member from voice channel\n\nExample usage:\n```js\n$setVoiceMute[data;data;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setVoiceMute?", "Assistant": "Use `$setVoiceMute` like this:\n```js\n$setVoiceMute[data;data;reason_example]\n```\n\nThis function mutes a member from voice channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setVoiceMute in forgescript?", "Assistant": "Yes, You use `$setVoiceMute` like this:\n```js\n$setVoiceMute[data;data;reason_example]\n```\n\nThis function mutes a member from voice channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setVoiceMute?", "Assistant": "The arguments for `$setVoiceMute` are as follows:\n\n- **guild ID** (Guild): The guild to pull member from (Required)\n- **user ID** (Member): The user to mute (Required)\n- **reason** (String): Reason to mute this user (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setVoiceMute added?", "Assistant": "$setVoiceMute was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setVoiceMute nativly to forgescipt?", "Assistant": "Yes, $setVoiceMute is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setVoiceRegion?", "Assistant": "Sets the region of a voice channel, returns bool\n\nExample usage:\n```js\n$setVoiceRegion[data;japan;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setVoiceRegion?", "Assistant": "Use `$setVoiceRegion` like this:\n```js\n$setVoiceRegion[data;japan;reason_example]\n```\n\nThis function sets the region of a voice channel, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setVoiceRegion in forgescript?", "Assistant": "Yes, You use `$setVoiceRegion` like this:\n```js\n$setVoiceRegion[data;japan;reason_example]\n```\n\nThis function sets the region of a voice channel, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setVoiceRegion?", "Assistant": "The arguments for `$setVoiceRegion` are as follows:\n\n- **channel ID** (Channel): The channel to set region (Required)\n- **region** (Enum): The region to set, leave empty to remove a fixed region (Optional)\n- **reason** (String): Reason to set the voice region (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setVoiceRegion added?", "Assistant": "$setVoiceRegion was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setVoiceRegion nativly to forgescipt?", "Assistant": "Yes, $setVoiceRegion is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setVoiceUndeaf?", "Assistant": "Undeafens a member from voice channel\n\nExample usage:\n```js\n$setVoiceUndeaf[data;data;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setVoiceUndeaf?", "Assistant": "Use `$setVoiceUndeaf` like this:\n```js\n$setVoiceUndeaf[data;data;reason_example]\n```\n\nThis function undeafens a member from voice channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setVoiceUndeaf in forgescript?", "Assistant": "Yes, You use `$setVoiceUndeaf` like this:\n```js\n$setVoiceUndeaf[data;data;reason_example]\n```\n\nThis function undeafens a member from voice channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setVoiceUndeaf?", "Assistant": "The arguments for `$setVoiceUndeaf` are as follows:\n\n- **guild ID** (Guild): The guild to pull member from (Required)\n- **user ID** (Member): The user to undeafen (Required)\n- **reason** (String): Reason to undeafen this user (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setVoiceUndeaf added?", "Assistant": "$setVoiceUndeaf was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setVoiceUndeaf nativly to forgescipt?", "Assistant": "Yes, $setVoiceUndeaf is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setVoiceUnmute?", "Assistant": "Unmutes a member from voice channel\n\nExample usage:\n```js\n$setVoiceUnmute[data;data;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setVoiceUnmute?", "Assistant": "Use `$setVoiceUnmute` like this:\n```js\n$setVoiceUnmute[data;data;reason_example]\n```\n\nThis function unmutes a member from voice channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setVoiceUnmute in forgescript?", "Assistant": "Yes, You use `$setVoiceUnmute` like this:\n```js\n$setVoiceUnmute[data;data;reason_example]\n```\n\nThis function unmutes a member from voice channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setVoiceUnmute?", "Assistant": "The arguments for `$setVoiceUnmute` are as follows:\n\n- **guild ID** (Guild): The guild to pull member from (Required)\n- **user ID** (Member): The user to unmute (Required)\n- **reason** (String): Reason to unmute this user (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setVoiceUnmute added?", "Assistant": "$setVoiceUnmute was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setVoiceUnmute nativly to forgescipt?", "Assistant": "Yes, $setVoiceUnmute is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setVoiceUserLimit?", "Assistant": "Sets the limit of users that can connect to this voice channel\n\nExample usage:\n```js\n$setVoiceUserLimit[data;28;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setVoiceUserLimit?", "Assistant": "Use `$setVoiceUserLimit` like this:\n```js\n$setVoiceUserLimit[data;28;reason_example]\n```\n\nThis function sets the limit of users that can connect to this voice channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setVoiceUserLimit in forgescript?", "Assistant": "Yes, You use `$setVoiceUserLimit` like this:\n```js\n$setVoiceUserLimit[data;28;reason_example]\n```\n\nThis function sets the limit of users that can connect to this voice channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setVoiceUserLimit?", "Assistant": "The arguments for `$setVoiceUserLimit` are as follows:\n\n- **channel ID** (Channel): The channel to edit user limit (Required)\n- **limit** (Number): The new user limit (Required)\n- **reason** (String): Reason to change the user limit (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setVoiceUserLimit added?", "Assistant": "$setVoiceUserLimit was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setVoiceUserLimit nativly to forgescipt?", "Assistant": "Yes, $setVoiceUserLimit is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setVoiceVideoQuality?", "Assistant": "Sets the video quality of a voice channel, returns bool\n\nExample usage:\n```js\n$setVoiceVideoQuality[data;Auto;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setVoiceVideoQuality?", "Assistant": "Use `$setVoiceVideoQuality` like this:\n```js\n$setVoiceVideoQuality[data;Auto;reason_example]\n```\n\nThis function sets the video quality of a voice channel, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setVoiceVideoQuality in forgescript?", "Assistant": "Yes, You use `$setVoiceVideoQuality` like this:\n```js\n$setVoiceVideoQuality[data;Auto;reason_example]\n```\n\nThis function sets the video quality of a voice channel, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setVoiceVideoQuality?", "Assistant": "The arguments for `$setVoiceVideoQuality` are as follows:\n\n- **channel ID** (Channel): The channel to edit video quality (Required)\n- **quality** (Enum): The new video quality (Required)\n- **reason** (String): Reason to change the video quality (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setVoiceVideoQuality added?", "Assistant": "$setVoiceVideoQuality was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setVoiceVideoQuality nativly to forgescipt?", "Assistant": "Yes, $setVoiceVideoQuality is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $startTyping?", "Assistant": "Starts typing in a channel\n\nExample usage:\n```js\n$startTyping[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $startTyping?", "Assistant": "Use `$startTyping` like this:\n```js\n$startTyping[data]\n```\n\nThis function starts typing in a channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $startTyping in forgescript?", "Assistant": "Yes, You use `$startTyping` like this:\n```js\n$startTyping[data]\n```\n\nThis function starts typing in a channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $startTyping?", "Assistant": "The arguments for `$startTyping` are as follows:\n\n- **channel ID** (Channel): The channel to start typing at (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $startTyping added?", "Assistant": "$startTyping was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $startTyping nativly to forgescipt?", "Assistant": "Yes, $startTyping is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $threadIsArchived?", "Assistant": "Returns whether a thread is archived\n\nExample usage:\n```js\n$threadIsArchived[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $threadIsArchived?", "Assistant": "Use `$threadIsArchived` like this:\n```js\n$threadIsArchived[data]\n```\n\nThis function returns whether a thread is archived."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $threadIsArchived in forgescript?", "Assistant": "Yes, You use `$threadIsArchived` like this:\n```js\n$threadIsArchived[data]\n```\n\nThis function returns whether a thread is archived."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $threadIsArchived?", "Assistant": "The arguments for `$threadIsArchived` are as follows:\n\n- **channel ID** (Channel): The thread to check if its archived (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $threadIsArchived added?", "Assistant": "$threadIsArchived was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $threadIsArchived nativly to forgescipt?", "Assistant": "Yes, $threadIsArchived is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $threadStarterMessageID?", "Assistant": "Returns the id of the message that started this thread\n\nExample usage:\n```js\n$threadStarterMessageID[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $threadStarterMessageID?", "Assistant": "Use `$threadStarterMessageID` like this:\n```js\n$threadStarterMessageID[data]\n```\n\nThis function returns the id of the message that started this thread."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $threadStarterMessageID in forgescript?", "Assistant": "Yes, You use `$threadStarterMessageID` like this:\n```js\n$threadStarterMessageID[data]\n```\n\nThis function returns the id of the message that started this thread."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $threadStarterMessageID?", "Assistant": "The arguments for `$threadStarterMessageID` are as follows:\n\n- **channel ID** (Channel): The thread to get its starter message id (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $threadStarterMessageID added?", "Assistant": "$threadStarterMessageID was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $threadStarterMessageID nativly to forgescipt?", "Assistant": "Yes, $threadStarterMessageID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $threadTotalMessagesSent?", "Assistant": "Returns the total count of sent messages in a thread\n\nExample usage:\n```js\n$threadTotalMessagesSent[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $threadTotalMessagesSent?", "Assistant": "Use `$threadTotalMessagesSent` like this:\n```js\n$threadTotalMessagesSent[data]\n```\n\nThis function returns the total count of sent messages in a thread."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $threadTotalMessagesSent in forgescript?", "Assistant": "Yes, You use `$threadTotalMessagesSent` like this:\n```js\n$threadTotalMessagesSent[data]\n```\n\nThis function returns the total count of sent messages in a thread."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $threadTotalMessagesSent?", "Assistant": "The arguments for `$threadTotalMessagesSent` are as follows:\n\n- **channel ID** (Channel): The thread to pull data from (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $threadTotalMessagesSent added?", "Assistant": "$threadTotalMessagesSent was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $threadTotalMessagesSent nativly to forgescipt?", "Assistant": "Yes, $threadTotalMessagesSent is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $transcript?", "Assistant": "Creates a channel transcript\n\nExample usage:\n```js\n$transcript[data;variable_example;code_example;separator_example;false]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $transcript?", "Assistant": "Use `$transcript` like this:\n```js\n$transcript[data;variable_example;code_example;separator_example;false]\n```\n\nThis function creates a channel transcript."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $transcript in forgescript?", "Assistant": "Yes, You use `$transcript` like this:\n```js\n$transcript[data;variable_example;code_example;separator_example;false]\n```\n\nThis function creates a channel transcript."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $transcript?", "Assistant": "The arguments for `$transcript` are as follows:\n\n- **channel ID** (TextChannel): The channel to create transcript of (Required)\n- **variable** (String): The $env variable name to load the message id to (Required)\n- **code** (String): The code to use for every message, make sure to use $return (Required)\n- **separator** (String): The separator to use for every result (Optional)\n- **full** (Boolean): Whether to load entire message object to the variable (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $transcript added?", "Assistant": "$transcript was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $transcript nativly to forgescipt?", "Assistant": "Yes, $transcript is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $unarchiveThread?", "Assistant": "Unarchives a thread, returns bool\n\nExample usage:\n```js\n$unarchiveThread[data;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $unarchiveThread?", "Assistant": "Use `$unarchiveThread` like this:\n```js\n$unarchiveThread[data;reason_example]\n```\n\nThis function unarchives a thread, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $unarchiveThread in forgescript?", "Assistant": "Yes, You use `$unarchiveThread` like this:\n```js\n$unarchiveThread[data;reason_example]\n```\n\nThis function unarchives a thread, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $unarchiveThread?", "Assistant": "The arguments for `$unarchiveThread` are as follows:\n\n- **channel ID** (Channel): The thread to unarchive (Required)\n- **reason** (String): The reason to unarchive this thread (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $unarchiveThread added?", "Assistant": "$unarchiveThread was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $unarchiveThread nativly to forgescipt?", "Assistant": "Yes, $unarchiveThread is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $unlockThread?", "Assistant": "Unlocks a thread, returns bool\n\nExample usage:\n```js\n$unlockThread[data;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $unlockThread?", "Assistant": "Use `$unlockThread` like this:\n```js\n$unlockThread[data;reason_example]\n```\n\nThis function unlocks a thread, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $unlockThread in forgescript?", "Assistant": "Yes, You use `$unlockThread` like this:\n```js\n$unlockThread[data;reason_example]\n```\n\nThis function unlocks a thread, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $unlockThread?", "Assistant": "The arguments for `$unlockThread` are as follows:\n\n- **channel ID** (Channel): The thread to unlock (Required)\n- **reason** (String): The reason to unlock this thread (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $unlockThread added?", "Assistant": "$unlockThread was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $unlockThread nativly to forgescipt?", "Assistant": "Yes, $unlockThread is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $commandCount?", "Assistant": "Returns the command count\n\nExample usage:\n```js\n$commandCount[categories_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $commandCount?", "Assistant": "Use `$commandCount` like this:\n```js\n$commandCount[categories_example]\n```\n\nThis function returns the command count."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $commandCount in forgescript?", "Assistant": "Yes, You use `$commandCount` like this:\n```js\n$commandCount[categories_example]\n```\n\nThis function returns the command count."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $commandCount?", "Assistant": "The arguments for `$commandCount` are as follows:\n\n- **categories** (String): The event types to filter by (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $commandCount added?", "Assistant": "$commandCount was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $commandCount nativly to forgescipt?", "Assistant": "Yes, $commandCount is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $commandInfo?", "Assistant": "Retrieves command info\n\nExample usage:\n```js\n$commandInfo[type_example;name_example;property_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $commandInfo?", "Assistant": "Use `$commandInfo` like this:\n```js\n$commandInfo[type_example;name_example;property_example]\n```\n\nThis function retrieves command info."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $commandInfo in forgescript?", "Assistant": "Yes, You use `$commandInfo` like this:\n```js\n$commandInfo[type_example;name_example;property_example]\n```\n\nThis function retrieves command info."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $commandInfo?", "Assistant": "The arguments for `$commandInfo` are as follows:\n\n- **type** (String): The command type (Required)\n- **name** (String): The command name (Required)\n- **property** (String): The property to retrieve (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $commandInfo added?", "Assistant": "$commandInfo was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $commandInfo nativly to forgescipt?", "Assistant": "Yes, $commandInfo is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $commandName?", "Assistant": "Returns the current command name\n\nExample usage:\n```js\n$commandName[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $commandName?", "Assistant": "Use `$commandName` like this:\n```js\n$commandName[]\n```\n\nThis function returns the current command name."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $commandName in forgescript?", "Assistant": "Yes, You use `$commandName` like this:\n```js\n$commandName[]\n```\n\nThis function returns the current command name."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $commandName?", "Assistant": "The arguments for `$commandName` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $commandName added?", "Assistant": "$commandName was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $commandName nativly to forgescipt?", "Assistant": "Yes, $commandName is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $commandNames?", "Assistant": "Return commands with given type\n\nExample usage:\n```js\n$commandNames[type_example;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $commandNames?", "Assistant": "Use `$commandNames` like this:\n```js\n$commandNames[type_example;separator_example]\n```\n\nThis function return commands with given type."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $commandNames in forgescript?", "Assistant": "Yes, You use `$commandNames` like this:\n```js\n$commandNames[type_example;separator_example]\n```\n\nThis function return commands with given type."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $commandNames?", "Assistant": "The arguments for `$commandNames` are as follows:\n\n- **type** (String): The command type to pull names from (Required)\n- **separator** (String): The separator to use for every name (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $commandNames added?", "Assistant": "$commandNames was added in ForgeScript version 1.0.6."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $commandNames nativly to forgescipt?", "Assistant": "Yes, $commandNames is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $deleteCommand?", "Assistant": "Deletes the author's message\n\nExample usage:\n```js\n$deleteCommand[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $deleteCommand?", "Assistant": "Use `$deleteCommand` like this:\n```js\n$deleteCommand[]\n```\n\nThis function deletes the author's message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteCommand in forgescript?", "Assistant": "Yes, You use `$deleteCommand` like this:\n```js\n$deleteCommand[]\n```\n\nThis function deletes the author's message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $deleteCommand?", "Assistant": "The arguments for `$deleteCommand` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $deleteCommand added?", "Assistant": "$deleteCommand was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteCommand nativly to forgescipt?", "Assistant": "Yes, $deleteCommand is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $addActionRow?", "Assistant": "Adds an action row\n\nExample usage:\n```js\n$addActionRow[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $addActionRow?", "Assistant": "Use `$addActionRow` like this:\n```js\n$addActionRow[]\n```\n\nThis function adds an action row."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addActionRow in forgescript?", "Assistant": "Yes, You use `$addActionRow` like this:\n```js\n$addActionRow[]\n```\n\nThis function adds an action row."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $addActionRow?", "Assistant": "The arguments for `$addActionRow` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $addActionRow added?", "Assistant": "$addActionRow was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addActionRow nativly to forgescipt?", "Assistant": "Yes, $addActionRow is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $addActionRowTo?", "Assistant": "Adds an action row (or rows) to a message\n\nExample usage:\n```js\n$addActionRowTo[data;data;components_example;true]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $addActionRowTo?", "Assistant": "Use `$addActionRowTo` like this:\n```js\n$addActionRowTo[data;data;components_example;true]\n```\n\nThis function adds an action row (or rows) to a message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addActionRowTo in forgescript?", "Assistant": "Yes, You use `$addActionRowTo` like this:\n```js\n$addActionRowTo[data;data;components_example;true]\n```\n\nThis function adds an action row (or rows) to a message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $addActionRowTo?", "Assistant": "The arguments for `$addActionRowTo` are as follows:\n\n- **channel ID** (TextChannel): The channel id to pull message from (Required)\n- **message ID** (Message): The message to add row to (Required)\n- **components** (String): Components for this row (Required)\n- **keep existing rows** (Boolean): Whether to keep or remove existing rows of given message (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $addActionRowTo added?", "Assistant": "$addActionRowTo was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addActionRowTo nativly to forgescipt?", "Assistant": "Yes, $addActionRowTo is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $addButton?", "Assistant": "Adds a button component to the newest row\n\nExample usage:\n```js\n$addButton[custom_ID_example;label_example;Danger;emoji_example;true]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $addButton?", "Assistant": "Use `$addButton` like this:\n```js\n$addButton[custom_ID_example;label_example;Danger;emoji_example;true]\n```\n\nThis function adds a button component to the newest row."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addButton in forgescript?", "Assistant": "Yes, You use `$addButton` like this:\n```js\n$addButton[custom_ID_example;label_example;Danger;emoji_example;true]\n```\n\nThis function adds a button component to the newest row."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $addButton?", "Assistant": "The arguments for `$addButton` are as follows:\n\n- **custom ID** (String): The custom id for this component (Required)\n- **label** (String): The button label (Required)\n- **style** (Enum): The style for this button (Required)\n- **emoji** (String): The emoji for this button (Optional)\n- **disabled** (Boolean): Whether to disable the button (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $addButton added?", "Assistant": "$addButton was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addButton nativly to forgescipt?", "Assistant": "Yes, $addButton is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $addButtonTo?", "Assistant": "Adds a button component to the newest row in a message\n\nExample usage:\n```js\n$addButtonTo[data;data;custom_ID_example;label_example;Success;emoji_example;false]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $addButtonTo?", "Assistant": "Use `$addButtonTo` like this:\n```js\n$addButtonTo[data;data;custom_ID_example;label_example;Success;emoji_example;false]\n```\n\nThis function adds a button component to the newest row in a message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addButtonTo in forgescript?", "Assistant": "Yes, You use `$addButtonTo` like this:\n```js\n$addButtonTo[data;data;custom_ID_example;label_example;Success;emoji_example;false]\n```\n\nThis function adds a button component to the newest row in a message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $addButtonTo?", "Assistant": "The arguments for `$addButtonTo` are as follows:\n\n- **channel ID** (TextChannel): The channel id to pull message from (Required)\n- **message ID** (Message): The message to add button to (Required)\n- **custom ID** (String): The custom id for this component (Required)\n- **label** (String): The button label (Required)\n- **style** (Enum): The style for this button (Required)\n- **emoji** (String): The emoji for this button (Optional)\n- **disabled** (Boolean): Whether to disable the button (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $addButtonTo added?", "Assistant": "$addButtonTo was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addButtonTo nativly to forgescipt?", "Assistant": "Yes, $addButtonTo is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $addChannelSelectMenu?", "Assistant": "Creates a channel select menu\n\nExample usage:\n```js\n$addChannelSelectMenu[custom_ID_example;placeholder_example;86;22;true;default_channels_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $addChannelSelectMenu?", "Assistant": "Use `$addChannelSelectMenu` like this:\n```js\n$addChannelSelectMenu[custom_ID_example;placeholder_example;86;22;true;default_channels_example]\n```\n\nThis function creates a channel select menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addChannelSelectMenu in forgescript?", "Assistant": "Yes, You use `$addChannelSelectMenu` like this:\n```js\n$addChannelSelectMenu[custom_ID_example;placeholder_example;86;22;true;default_channels_example]\n```\n\nThis function creates a channel select menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $addChannelSelectMenu?", "Assistant": "The arguments for `$addChannelSelectMenu` are as follows:\n\n- **custom ID** (String): The custom id for this menu (Required)\n- **placeholder** (String): The placeholder to use for the menu (Optional)\n- **min values** (Number): The min values to choose for the menu (Optional)\n- **max values** (Number): The max values to choose for the menu (Optional)\n- **disabled** (Boolean): Whether the menu is disabled by default (Optional)\n- **default channels** (String): The default selected channels to use (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $addChannelSelectMenu added?", "Assistant": "$addChannelSelectMenu was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addChannelSelectMenu nativly to forgescipt?", "Assistant": "Yes, $addChannelSelectMenu is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $addChannelType?", "Assistant": "Adds channel types to the last select menu\n\nExample usage:\n```js\n$addChannelType[PrivateThread]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $addChannelType?", "Assistant": "Use `$addChannelType` like this:\n```js\n$addChannelType[PrivateThread]\n```\n\nThis function adds channel types to the last select menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addChannelType in forgescript?", "Assistant": "Yes, You use `$addChannelType` like this:\n```js\n$addChannelType[PrivateThread]\n```\n\nThis function adds channel types to the last select menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $addChannelType?", "Assistant": "The arguments for `$addChannelType` are as follows:\n\n- **types** (Enum): The channel types to add (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $addChannelType added?", "Assistant": "$addChannelType was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addChannelType nativly to forgescipt?", "Assistant": "Yes, $addChannelType is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $addChoice?", "Assistant": "Adds an autocomplete choice\n\nExample usage:\n```js\n$addChoice[choice_name_example;choice_value_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $addChoice?", "Assistant": "Use `$addChoice` like this:\n```js\n$addChoice[choice_name_example;choice_value_example]\n```\n\nThis function adds an autocomplete choice."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addChoice in forgescript?", "Assistant": "Yes, You use `$addChoice` like this:\n```js\n$addChoice[choice_name_example;choice_value_example]\n```\n\nThis function adds an autocomplete choice."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $addChoice?", "Assistant": "The arguments for `$addChoice` are as follows:\n\n- **choice name** (String): The name for this choice (Required)\n- **choice value** (String): The value for this choice (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $addChoice added?", "Assistant": "$addChoice was added in ForgeScript version 1.0.6."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addChoice nativly to forgescipt?", "Assistant": "Yes, $addChoice is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $addDefaultChannelOption?", "Assistant": "Adds default channel options to the last select menu\n\nExample usage:\n```js\n$addDefaultChannelOption[channel_IDs_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $addDefaultChannelOption?", "Assistant": "Use `$addDefaultChannelOption` like this:\n```js\n$addDefaultChannelOption[channel_IDs_example]\n```\n\nThis function adds default channel options to the last select menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addDefaultChannelOption in forgescript?", "Assistant": "Yes, You use `$addDefaultChannelOption` like this:\n```js\n$addDefaultChannelOption[channel_IDs_example]\n```\n\nThis function adds default channel options to the last select menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $addDefaultChannelOption?", "Assistant": "The arguments for `$addDefaultChannelOption` are as follows:\n\n- **channel IDs** (String): The channel ids (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $addDefaultChannelOption added?", "Assistant": "$addDefaultChannelOption was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addDefaultChannelOption nativly to forgescipt?", "Assistant": "Yes, $addDefaultChannelOption is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $addDefaultRoleOption?", "Assistant": "Adds default role options to the last select menu\n\nExample usage:\n```js\n$addDefaultRoleOption[role_IDs_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $addDefaultRoleOption?", "Assistant": "Use `$addDefaultRoleOption` like this:\n```js\n$addDefaultRoleOption[role_IDs_example]\n```\n\nThis function adds default role options to the last select menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addDefaultRoleOption in forgescript?", "Assistant": "Yes, You use `$addDefaultRoleOption` like this:\n```js\n$addDefaultRoleOption[role_IDs_example]\n```\n\nThis function adds default role options to the last select menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $addDefaultRoleOption?", "Assistant": "The arguments for `$addDefaultRoleOption` are as follows:\n\n- **role IDs** (String): The role ids (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $addDefaultRoleOption added?", "Assistant": "$addDefaultRoleOption was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addDefaultRoleOption nativly to forgescipt?", "Assistant": "Yes, $addDefaultRoleOption is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $addDefaultUserOption?", "Assistant": "Adds default user options to the last select menu\n\nExample usage:\n```js\n$addDefaultUserOption[user_IDs_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $addDefaultUserOption?", "Assistant": "Use `$addDefaultUserOption` like this:\n```js\n$addDefaultUserOption[user_IDs_example]\n```\n\nThis function adds default user options to the last select menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addDefaultUserOption in forgescript?", "Assistant": "Yes, You use `$addDefaultUserOption` like this:\n```js\n$addDefaultUserOption[user_IDs_example]\n```\n\nThis function adds default user options to the last select menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $addDefaultUserOption?", "Assistant": "The arguments for `$addDefaultUserOption` are as follows:\n\n- **user IDs** (String): The user ids (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $addDefaultUserOption added?", "Assistant": "$addDefaultUserOption was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addDefaultUserOption nativly to forgescipt?", "Assistant": "Yes, $addDefaultUserOption is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $addMentionableSelectMenu?", "Assistant": "Creates a mentionable select menu\n\nExample usage:\n```js\n$addMentionableSelectMenu[custom_ID_example;placeholder_example;43;18;false]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $addMentionableSelectMenu?", "Assistant": "Use `$addMentionableSelectMenu` like this:\n```js\n$addMentionableSelectMenu[custom_ID_example;placeholder_example;43;18;false]\n```\n\nThis function creates a mentionable select menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addMentionableSelectMenu in forgescript?", "Assistant": "Yes, You use `$addMentionableSelectMenu` like this:\n```js\n$addMentionableSelectMenu[custom_ID_example;placeholder_example;43;18;false]\n```\n\nThis function creates a mentionable select menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $addMentionableSelectMenu?", "Assistant": "The arguments for `$addMentionableSelectMenu` are as follows:\n\n- **custom ID** (String): The custom id for this menu (Required)\n- **placeholder** (String): The placeholder to use for the menu (Optional)\n- **min values** (Number): The min values to choose for the menu (Optional)\n- **max values** (Number): The max values to choose for the menu (Optional)\n- **disabled** (Boolean): Whether the menu is disabled by default (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $addMentionableSelectMenu added?", "Assistant": "$addMentionableSelectMenu was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addMentionableSelectMenu nativly to forgescipt?", "Assistant": "Yes, $addMentionableSelectMenu is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $addMentionableSelectMenuTo?", "Assistant": "Creates a mentionable select menu to a message\n\nExample usage:\n```js\n$addMentionableSelectMenuTo[data;data;custom_ID_example;placeholder_example;37;17;true]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $addMentionableSelectMenuTo?", "Assistant": "Use `$addMentionableSelectMenuTo` like this:\n```js\n$addMentionableSelectMenuTo[data;data;custom_ID_example;placeholder_example;37;17;true]\n```\n\nThis function creates a mentionable select menu to a message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addMentionableSelectMenuTo in forgescript?", "Assistant": "Yes, You use `$addMentionableSelectMenuTo` like this:\n```js\n$addMentionableSelectMenuTo[data;data;custom_ID_example;placeholder_example;37;17;true]\n```\n\nThis function creates a mentionable select menu to a message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $addMentionableSelectMenuTo?", "Assistant": "The arguments for `$addMentionableSelectMenuTo` are as follows:\n\n- **channel ID** (TextChannel): The channel id to pull message from (Required)\n- **message ID** (Message): The message to add row to (Required)\n- **custom ID** (String): The custom id for this menu (Required)\n- **placeholder** (String): The placeholder to use for the menu (Optional)\n- **min values** (Number): The min values to choose for the menu (Optional)\n- **max values** (Number): The max values to choose for the menu (Optional)\n- **disabled** (Boolean): Whether the menu is disabled by default (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $addMentionableSelectMenuTo added?", "Assistant": "$addMentionableSelectMenuTo was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addMentionableSelectMenuTo nativly to forgescipt?", "Assistant": "Yes, $addMentionableSelectMenuTo is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $addOption?", "Assistant": "Adds a select menu option\n\nExample usage:\n```js\n$addOption[name_example;description_example;value_example;emoji_example;false]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $addOption?", "Assistant": "Use `$addOption` like this:\n```js\n$addOption[name_example;description_example;value_example;emoji_example;false]\n```\n\nThis function adds a select menu option."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addOption in forgescript?", "Assistant": "Yes, You use `$addOption` like this:\n```js\n$addOption[name_example;description_example;value_example;emoji_example;false]\n```\n\nThis function adds a select menu option."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $addOption?", "Assistant": "The arguments for `$addOption` are as follows:\n\n- **name** (String): The option name (Required)\n- **description** (String): The description for this option (Optional)\n- **value** (String): The value to use for this option (Required)\n- **emoji** (String): The emoji to use for this option (Optional)\n- **default** (Boolean): Whether to set this option as default (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $addOption added?", "Assistant": "$addOption was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addOption nativly to forgescipt?", "Assistant": "Yes, $addOption is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $addRoleSelectMenu?", "Assistant": "Creates a role select menu\n\nExample usage:\n```js\n$addRoleSelectMenu[custom_ID_example;placeholder_example;93;36;false;default_roles_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $addRoleSelectMenu?", "Assistant": "Use `$addRoleSelectMenu` like this:\n```js\n$addRoleSelectMenu[custom_ID_example;placeholder_example;93;36;false;default_roles_example]\n```\n\nThis function creates a role select menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addRoleSelectMenu in forgescript?", "Assistant": "Yes, You use `$addRoleSelectMenu` like this:\n```js\n$addRoleSelectMenu[custom_ID_example;placeholder_example;93;36;false;default_roles_example]\n```\n\nThis function creates a role select menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $addRoleSelectMenu?", "Assistant": "The arguments for `$addRoleSelectMenu` are as follows:\n\n- **custom ID** (String): The custom id for this menu (Required)\n- **placeholder** (String): The placeholder to use for the menu (Optional)\n- **min values** (Number): The min values to choose for the menu (Optional)\n- **max values** (Number): The max values to choose for the menu (Optional)\n- **disabled** (Boolean): Whether the menu is disabled by default (Optional)\n- **default roles** (String): The default selected roles to use (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $addRoleSelectMenu added?", "Assistant": "$addRoleSelectMenu was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addRoleSelectMenu nativly to forgescipt?", "Assistant": "Yes, $addRoleSelectMenu is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $addRoleSelectMenuTo?", "Assistant": "Creates a role select menu on a message\n\nExample usage:\n```js\n$addRoleSelectMenuTo[data;data;custom_ID_example;placeholder_example;26;94;true;default_roles_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $addRoleSelectMenuTo?", "Assistant": "Use `$addRoleSelectMenuTo` like this:\n```js\n$addRoleSelectMenuTo[data;data;custom_ID_example;placeholder_example;26;94;true;default_roles_example]\n```\n\nThis function creates a role select menu on a message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addRoleSelectMenuTo in forgescript?", "Assistant": "Yes, You use `$addRoleSelectMenuTo` like this:\n```js\n$addRoleSelectMenuTo[data;data;custom_ID_example;placeholder_example;26;94;true;default_roles_example]\n```\n\nThis function creates a role select menu on a message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $addRoleSelectMenuTo?", "Assistant": "The arguments for `$addRoleSelectMenuTo` are as follows:\n\n- **channel ID** (TextChannel): The channel id to pull message from (Required)\n- **message ID** (Message): The message to add select menu to (Required)\n- **custom ID** (String): The custom id for this menu (Required)\n- **placeholder** (String): The placeholder to use for the menu (Optional)\n- **min values** (Number): The min values to choose for the menu (Optional)\n- **max values** (Number): The max values to choose for the menu (Optional)\n- **disabled** (Boolean): Whether the menu is disabled by default (Optional)\n- **default roles** (String): The default selected roles to use (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $addRoleSelectMenuTo added?", "Assistant": "$addRoleSelectMenuTo was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addRoleSelectMenuTo nativly to forgescipt?", "Assistant": "Yes, $addRoleSelectMenuTo is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $addStringSelectMenu?", "Assistant": "Adds a string select menu\n\nExample usage:\n```js\n$addStringSelectMenu[custom_ID_example;placeholder_example;true;9;56]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $addStringSelectMenu?", "Assistant": "Use `$addStringSelectMenu` like this:\n```js\n$addStringSelectMenu[custom_ID_example;placeholder_example;true;9;56]\n```\n\nThis function adds a string select menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addStringSelectMenu in forgescript?", "Assistant": "Yes, You use `$addStringSelectMenu` like this:\n```js\n$addStringSelectMenu[custom_ID_example;placeholder_example;true;9;56]\n```\n\nThis function adds a string select menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $addStringSelectMenu?", "Assistant": "The arguments for `$addStringSelectMenu` are as follows:\n\n- **custom ID** (String): The custom id to use for this menu (Required)\n- **placeholder** (String): The placeholder to use for the menu (Optional)\n- **disabled** (Boolean): Whether to keep this menu disabled (Optional)\n- **min values** (Number): The min values to choose for the menu (Optional)\n- **max values** (Number): The max values to choose for the menu (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $addStringSelectMenu added?", "Assistant": "$addStringSelectMenu was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addStringSelectMenu nativly to forgescipt?", "Assistant": "Yes, $addStringSelectMenu is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $addStringSelectMenuTo?", "Assistant": "Adds a string select menu to a message\n\nExample usage:\n```js\n$addStringSelectMenuTo[data;data;custom_ID_example;placeholder_example;false;72;54]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $addStringSelectMenuTo?", "Assistant": "Use `$addStringSelectMenuTo` like this:\n```js\n$addStringSelectMenuTo[data;data;custom_ID_example;placeholder_example;false;72;54]\n```\n\nThis function adds a string select menu to a message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addStringSelectMenuTo in forgescript?", "Assistant": "Yes, You use `$addStringSelectMenuTo` like this:\n```js\n$addStringSelectMenuTo[data;data;custom_ID_example;placeholder_example;false;72;54]\n```\n\nThis function adds a string select menu to a message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $addStringSelectMenuTo?", "Assistant": "The arguments for `$addStringSelectMenuTo` are as follows:\n\n- **channel ID** (TextChannel): The channel id to pull message from (Required)\n- **message ID** (Message): The message to add select menu to (Required)\n- **custom ID** (String): The custom id to use for this menu (Required)\n- **placeholder** (String): The placeholder to use for the menu (Optional)\n- **disabled** (Boolean): Whether to keep this menu disabled (Optional)\n- **min values** (Number): The min values to choose for the menu (Optional)\n- **max values** (Number): The max values to choose for the menu (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $addStringSelectMenuTo added?", "Assistant": "$addStringSelectMenuTo was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addStringSelectMenuTo nativly to forgescipt?", "Assistant": "Yes, $addStringSelectMenuTo is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $addTextInput?", "Assistant": "Adds a text input field to the modal\n\nExample usage:\n```js\n$addTextInput[custom_ID_example;name_example;Paragraph;true;placeholder_example;default_value_example;71;72]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $addTextInput?", "Assistant": "Use `$addTextInput` like this:\n```js\n$addTextInput[custom_ID_example;name_example;Paragraph;true;placeholder_example;default_value_example;71;72]\n```\n\nThis function adds a text input field to the modal."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addTextInput in forgescript?", "Assistant": "Yes, You use `$addTextInput` like this:\n```js\n$addTextInput[custom_ID_example;name_example;Paragraph;true;placeholder_example;default_value_example;71;72]\n```\n\nThis function adds a text input field to the modal."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $addTextInput?", "Assistant": "The arguments for `$addTextInput` are as follows:\n\n- **custom ID** (String): The custom id for this field (Required)\n- **name** (String): The field name (Required)\n- **type** (Enum): Paragraph or short (Optional)\n- **required** (Boolean): Whether this field is required (Optional)\n- **placeholder** (String): The placeholder to use for the field (Optional)\n- **default value** (String): The default value for the field (Optional)\n- **minimum length** (Number): The minimum length needed (Optional)\n- **maximum length** (Number): The max length needed (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $addTextInput added?", "Assistant": "$addTextInput was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addTextInput nativly to forgescipt?", "Assistant": "Yes, $addTextInput is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $addUserSelectMenu?", "Assistant": "Creates a user select menu\n\nExample usage:\n```js\n$addUserSelectMenu[custom_ID_example;placeholder_example;37;62;true;default_users_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $addUserSelectMenu?", "Assistant": "Use `$addUserSelectMenu` like this:\n```js\n$addUserSelectMenu[custom_ID_example;placeholder_example;37;62;true;default_users_example]\n```\n\nThis function creates a user select menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addUserSelectMenu in forgescript?", "Assistant": "Yes, You use `$addUserSelectMenu` like this:\n```js\n$addUserSelectMenu[custom_ID_example;placeholder_example;37;62;true;default_users_example]\n```\n\nThis function creates a user select menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $addUserSelectMenu?", "Assistant": "The arguments for `$addUserSelectMenu` are as follows:\n\n- **custom ID** (String): The custom id for this menu (Required)\n- **placeholder** (String): The placeholder to use for the menu (Optional)\n- **min values** (Number): The min values to choose for the menu (Optional)\n- **max values** (Number): The max values to choose for the menu (Optional)\n- **disabled** (Boolean): Whether the menu is disabled by default (Optional)\n- **default users** (String): The default selected users to use (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $addUserSelectMenu added?", "Assistant": "$addUserSelectMenu was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addUserSelectMenu nativly to forgescipt?", "Assistant": "Yes, $addUserSelectMenu is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $addUserSelectMenuTo?", "Assistant": "Creates a user select menu on a message\n\nExample usage:\n```js\n$addUserSelectMenuTo[data;data;custom_ID_example;placeholder_example;18;79;false;default_users_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $addUserSelectMenuTo?", "Assistant": "Use `$addUserSelectMenuTo` like this:\n```js\n$addUserSelectMenuTo[data;data;custom_ID_example;placeholder_example;18;79;false;default_users_example]\n```\n\nThis function creates a user select menu on a message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addUserSelectMenuTo in forgescript?", "Assistant": "Yes, You use `$addUserSelectMenuTo` like this:\n```js\n$addUserSelectMenuTo[data;data;custom_ID_example;placeholder_example;18;79;false;default_users_example]\n```\n\nThis function creates a user select menu on a message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $addUserSelectMenuTo?", "Assistant": "The arguments for `$addUserSelectMenuTo` are as follows:\n\n- **channel ID** (TextChannel): The channel id to pull message from (Required)\n- **message ID** (Message): The message to add select menu to (Required)\n- **custom ID** (String): The custom id for this menu (Required)\n- **placeholder** (String): The placeholder to use for the menu (Optional)\n- **min values** (Number): The min values to choose for the menu (Optional)\n- **max values** (Number): The max values to choose for the menu (Optional)\n- **disabled** (Boolean): Whether the menu is disabled by default (Optional)\n- **default users** (String): The default selected users to use (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $addUserSelectMenuTo added?", "Assistant": "$addUserSelectMenuTo was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addUserSelectMenuTo nativly to forgescipt?", "Assistant": "Yes, $addUserSelectMenuTo is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $deleteActionRow?", "Assistant": "Deletes an action row at given index\n\nExample usage:\n```js\n$deleteActionRow[82]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $deleteActionRow?", "Assistant": "Use `$deleteActionRow` like this:\n```js\n$deleteActionRow[82]\n```\n\nThis function deletes an action row at given index."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteActionRow in forgescript?", "Assistant": "Yes, You use `$deleteActionRow` like this:\n```js\n$deleteActionRow[82]\n```\n\nThis function deletes an action row at given index."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $deleteActionRow?", "Assistant": "The arguments for `$deleteActionRow` are as follows:\n\n- **index** (Number): The row index to delete (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $deleteActionRow added?", "Assistant": "$deleteActionRow was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteActionRow nativly to forgescipt?", "Assistant": "Yes, $deleteActionRow is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $deleteActionRowFrom?", "Assistant": "Deletes an action row at given index\n\nExample usage:\n```js\n$deleteActionRowFrom[data;data;75]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $deleteActionRowFrom?", "Assistant": "Use `$deleteActionRowFrom` like this:\n```js\n$deleteActionRowFrom[data;data;75]\n```\n\nThis function deletes an action row at given index."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteActionRowFrom in forgescript?", "Assistant": "Yes, You use `$deleteActionRowFrom` like this:\n```js\n$deleteActionRowFrom[data;data;75]\n```\n\nThis function deletes an action row at given index."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $deleteActionRowFrom?", "Assistant": "The arguments for `$deleteActionRowFrom` are as follows:\n\n- **channel ID** (TextChannel): The channel id to pull message from (Required)\n- **message ID** (Message): The message to remove row from (Required)\n- **index** (Number): The row index to delete (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $deleteActionRowFrom added?", "Assistant": "$deleteActionRowFrom was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteActionRowFrom nativly to forgescipt?", "Assistant": "Yes, $deleteActionRowFrom is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $deleteComponent?", "Assistant": "Deletes a component with given custom id\n\nExample usage:\n```js\n$deleteComponent[custom_ID_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $deleteComponent?", "Assistant": "Use `$deleteComponent` like this:\n```js\n$deleteComponent[custom_ID_example]\n```\n\nThis function deletes a component with given custom id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteComponent in forgescript?", "Assistant": "Yes, You use `$deleteComponent` like this:\n```js\n$deleteComponent[custom_ID_example]\n```\n\nThis function deletes a component with given custom id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $deleteComponent?", "Assistant": "The arguments for `$deleteComponent` are as follows:\n\n- **custom ID** (String): The component's custom id to delete (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $deleteComponent added?", "Assistant": "$deleteComponent was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteComponent nativly to forgescipt?", "Assistant": "Yes, $deleteComponent is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $deleteComponentFrom?", "Assistant": "Deletes a component with given custom id from a message\n\nExample usage:\n```js\n$deleteComponentFrom[data;data;custom_ID_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $deleteComponentFrom?", "Assistant": "Use `$deleteComponentFrom` like this:\n```js\n$deleteComponentFrom[data;data;custom_ID_example]\n```\n\nThis function deletes a component with given custom id from a message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteComponentFrom in forgescript?", "Assistant": "Yes, You use `$deleteComponentFrom` like this:\n```js\n$deleteComponentFrom[data;data;custom_ID_example]\n```\n\nThis function deletes a component with given custom id from a message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $deleteComponentFrom?", "Assistant": "The arguments for `$deleteComponentFrom` are as follows:\n\n- **channel ID** (TextChannel): The channel id to pull message from (Required)\n- **message ID** (Message): The message to remove component from (Required)\n- **custom ID** (String): The component's custom id to delete (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $deleteComponentFrom added?", "Assistant": "$deleteComponentFrom was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteComponentFrom nativly to forgescipt?", "Assistant": "Yes, $deleteComponentFrom is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $editButton?", "Assistant": "Edits a button component\n\nExample usage:\n```js\n$editButton[custom_ID_example;new_custom_ID_example;label_example;Secondary;emoji_example;false]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $editButton?", "Assistant": "Use `$editButton` like this:\n```js\n$editButton[custom_ID_example;new_custom_ID_example;label_example;Secondary;emoji_example;false]\n```\n\nThis function edits a button component."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editButton in forgescript?", "Assistant": "Yes, You use `$editButton` like this:\n```js\n$editButton[custom_ID_example;new_custom_ID_example;label_example;Secondary;emoji_example;false]\n```\n\nThis function edits a button component."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $editButton?", "Assistant": "The arguments for `$editButton` are as follows:\n\n- **custom ID** (String): The custom id to find the component (Required)\n- **new custom ID** (String): The new custom id for this component (Required)\n- **label** (String): The button label (Required)\n- **style** (Enum): The style for this button (Required)\n- **emoji** (String): The emoji for this button (Optional)\n- **disabled** (Boolean): Whether to disable the button (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $editButton added?", "Assistant": "$editButton was added in ForgeScript version 1.0.7."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editButton nativly to forgescipt?", "Assistant": "Yes, $editButton is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $editButtonOf?", "Assistant": "Edits a button component of a message\n\nExample usage:\n```js\n$editButtonOf[data;data;custom_ID_example;new_custom_ID_example;label_example;Danger;emoji_example;false]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $editButtonOf?", "Assistant": "Use `$editButtonOf` like this:\n```js\n$editButtonOf[data;data;custom_ID_example;new_custom_ID_example;label_example;Danger;emoji_example;false]\n```\n\nThis function edits a button component of a message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editButtonOf in forgescript?", "Assistant": "Yes, You use `$editButtonOf` like this:\n```js\n$editButtonOf[data;data;custom_ID_example;new_custom_ID_example;label_example;Danger;emoji_example;false]\n```\n\nThis function edits a button component of a message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $editButtonOf?", "Assistant": "The arguments for `$editButtonOf` are as follows:\n\n- **channel ID** (TextChannel): The channel id to pull message from (Required)\n- **message ID** (Message): The message to edit button for (Required)\n- **custom ID** (String): The custom id to find the component (Required)\n- **new custom ID** (String): The new custom id for this component (Required)\n- **label** (String): The button label (Required)\n- **style** (Enum): The style for this button (Required)\n- **emoji** (String): The emoji for this button (Optional)\n- **disabled** (Boolean): Whether to disable the button (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $editButtonOf added?", "Assistant": "$editButtonOf was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editButtonOf nativly to forgescipt?", "Assistant": "Yes, $editButtonOf is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $editOption?", "Assistant": "Edits a select menu option\n\nExample usage:\n```js\n$editOption[name_example;new_name_example;description_example;value_example;emoji_example;true]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $editOption?", "Assistant": "Use `$editOption` like this:\n```js\n$editOption[name_example;new_name_example;description_example;value_example;emoji_example;true]\n```\n\nThis function edits a select menu option."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editOption in forgescript?", "Assistant": "Yes, You use `$editOption` like this:\n```js\n$editOption[name_example;new_name_example;description_example;value_example;emoji_example;true]\n```\n\nThis function edits a select menu option."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $editOption?", "Assistant": "The arguments for `$editOption` are as follows:\n\n- **name** (String): The option name (Required)\n- **new name** (String): The new option name (Required)\n- **description** (String): The description for this option (Optional)\n- **value** (String): The value to use for this option (Required)\n- **emoji** (String): The emoji to use for this option (Optional)\n- **default** (Boolean): Whether to set this option as default (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $editOption added?", "Assistant": "$editOption was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editOption nativly to forgescipt?", "Assistant": "Yes, $editOption is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $editStringSelectMenu?", "Assistant": "Edits a string select menu\n\nExample usage:\n```js\n$editStringSelectMenu[old_custom_ID_example;new_custom_ID_example;placeholder_example;true;13;22]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $editStringSelectMenu?", "Assistant": "Use `$editStringSelectMenu` like this:\n```js\n$editStringSelectMenu[old_custom_ID_example;new_custom_ID_example;placeholder_example;true;13;22]\n```\n\nThis function edits a string select menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editStringSelectMenu in forgescript?", "Assistant": "Yes, You use `$editStringSelectMenu` like this:\n```js\n$editStringSelectMenu[old_custom_ID_example;new_custom_ID_example;placeholder_example;true;13;22]\n```\n\nThis function edits a string select menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $editStringSelectMenu?", "Assistant": "The arguments for `$editStringSelectMenu` are as follows:\n\n- **old custom ID** (String): The custom id of the menu to edit (Required)\n- **new custom ID** (String): The new custom id to use for this menu (Required)\n- **placeholder** (String): The placeholder to use for the menu (Optional)\n- **disabled** (Boolean): Whether to keep this menu disabled (Optional)\n- **min values** (Number): The min values to choose for the menu (Optional)\n- **max values** (Number): The max values to choose for the menu (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $editStringSelectMenu added?", "Assistant": "$editStringSelectMenu was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editStringSelectMenu nativly to forgescipt?", "Assistant": "Yes, $editStringSelectMenu is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $editStringSelectMenuOf?", "Assistant": "Edits a string select menu of a message\n\nExample usage:\n```js\n$editStringSelectMenuOf[data;data;old_custom_ID_example;new_custom_ID_example;placeholder_example;false;66;95]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $editStringSelectMenuOf?", "Assistant": "Use `$editStringSelectMenuOf` like this:\n```js\n$editStringSelectMenuOf[data;data;old_custom_ID_example;new_custom_ID_example;placeholder_example;false;66;95]\n```\n\nThis function edits a string select menu of a message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editStringSelectMenuOf in forgescript?", "Assistant": "Yes, You use `$editStringSelectMenuOf` like this:\n```js\n$editStringSelectMenuOf[data;data;old_custom_ID_example;new_custom_ID_example;placeholder_example;false;66;95]\n```\n\nThis function edits a string select menu of a message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $editStringSelectMenuOf?", "Assistant": "The arguments for `$editStringSelectMenuOf` are as follows:\n\n- **channel ID** (TextChannel): The channel id to pull message from (Required)\n- **message ID** (Message): The message to edit select menu for (Required)\n- **old custom ID** (String): The custom id of the menu to edit (Required)\n- **new custom ID** (String): The new custom id to use for this menu (Required)\n- **placeholder** (String): The placeholder to use for the menu (Optional)\n- **disabled** (Boolean): Whether to keep this menu disabled (Optional)\n- **min values** (Number): The min values to choose for the menu (Optional)\n- **max values** (Number): The max values to choose for the menu (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $editStringSelectMenuOf added?", "Assistant": "$editStringSelectMenuOf was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editStringSelectMenuOf nativly to forgescipt?", "Assistant": "Yes, $editStringSelectMenuOf is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setChannelType?", "Assistant": "Sets channel types for the last select menu\n\nExample usage:\n```js\n$setChannelType[GuildForum]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setChannelType?", "Assistant": "Use `$setChannelType` like this:\n```js\n$setChannelType[GuildForum]\n```\n\nThis function sets channel types for the last select menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setChannelType in forgescript?", "Assistant": "Yes, You use `$setChannelType` like this:\n```js\n$setChannelType[GuildForum]\n```\n\nThis function sets channel types for the last select menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setChannelType?", "Assistant": "The arguments for `$setChannelType` are as follows:\n\n- **types** (Enum): The channel types to set (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setChannelType added?", "Assistant": "$setChannelType was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setChannelType nativly to forgescipt?", "Assistant": "Yes, $setChannelType is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $and?", "Assistant": "Validates multiple conditions\n\nExample usage:\n```js\n$and[conditions_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $and?", "Assistant": "Use `$and` like this:\n```js\n$and[conditions_example]\n```\n\nThis function validates multiple conditions."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $and in forgescript?", "Assistant": "Yes, You use `$and` like this:\n```js\n$and[conditions_example]\n```\n\nThis function validates multiple conditions."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $and?", "Assistant": "The arguments for `$and` are as follows:\n\n- **conditions** (String): The conditions that must match (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $and added?", "Assistant": "$and was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $and nativly to forgescipt?", "Assistant": "Yes, $and is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $checkCondition?", "Assistant": "Checks whether a condition is valid\n\nExample usage:\n```js\n$checkCondition[condition_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $checkCondition?", "Assistant": "Use `$checkCondition` like this:\n```js\n$checkCondition[condition_example]\n```\n\nThis function checks whether a condition is valid."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $checkCondition in forgescript?", "Assistant": "Yes, You use `$checkCondition` like this:\n```js\n$checkCondition[condition_example]\n```\n\nThis function checks whether a condition is valid."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $checkCondition?", "Assistant": "The arguments for `$checkCondition` are as follows:\n\n- **condition** (String): The condition to use (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $checkCondition added?", "Assistant": "$checkCondition was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $checkCondition nativly to forgescipt?", "Assistant": "Yes, $checkCondition is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isBoolean?", "Assistant": "Checks whether given value is bool like\n\nExample usage:\n```js\n$isBoolean[value_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isBoolean?", "Assistant": "Use `$isBoolean` like this:\n```js\n$isBoolean[value_example]\n```\n\nThis function checks whether given value is bool like."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isBoolean in forgescript?", "Assistant": "Yes, You use `$isBoolean` like this:\n```js\n$isBoolean[value_example]\n```\n\nThis function checks whether given value is bool like."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isBoolean?", "Assistant": "The arguments for `$isBoolean` are as follows:\n\n- **value** (String): Value to check if its a valid bool (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isBoolean added?", "Assistant": "$isBoolean was added in ForgeScript version 1.0.6."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isBoolean nativly to forgescipt?", "Assistant": "Yes, $isBoolean is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isValidHex?", "Assistant": "Checks whether given hex is a valid integer number between 0x00000 and 0xffffff.\n\nExample usage:\n```js\n$isValidHex[hex_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isValidHex?", "Assistant": "Use `$isValidHex` like this:\n```js\n$isValidHex[hex_example]\n```\n\nThis function checks whether given hex is a valid integer number between 0x00000 and 0xffffff.."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isValidHex in forgescript?", "Assistant": "Yes, You use `$isValidHex` like this:\n```js\n$isValidHex[hex_example]\n```\n\nThis function checks whether given hex is a valid integer number between 0x00000 and 0xffffff.."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isValidHex?", "Assistant": "The arguments for `$isValidHex` are as follows:\n\n- **hex** (String): The hex to check for (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isValidHex added?", "Assistant": "$isValidHex was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isValidHex nativly to forgescipt?", "Assistant": "Yes, $isValidHex is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isValidLink?", "Assistant": "Checks whether a link is valid, this will not make sure that a site actually exists or returns success HTTP responses.\n\nExample usage:\n```js\n$isValidLink[link_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isValidLink?", "Assistant": "Use `$isValidLink` like this:\n```js\n$isValidLink[link_example]\n```\n\nThis function checks whether a link is valid, this will not make sure that a site actually exists or returns success http responses.."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isValidLink in forgescript?", "Assistant": "Yes, You use `$isValidLink` like this:\n```js\n$isValidLink[link_example]\n```\n\nThis function checks whether a link is valid, this will not make sure that a site actually exists or returns success http responses.."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isValidLink?", "Assistant": "The arguments for `$isValidLink` are as follows:\n\n- **link** (String): The link to check (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isValidLink added?", "Assistant": "$isValidLink was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isValidLink nativly to forgescipt?", "Assistant": "Yes, $isValidLink is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $or?", "Assistant": "Validates one condition\n\nExample usage:\n```js\n$or[conditions_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $or?", "Assistant": "Use `$or` like this:\n```js\n$or[conditions_example]\n```\n\nThis function validates one condition."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $or in forgescript?", "Assistant": "Yes, You use `$or` like this:\n```js\n$or[conditions_example]\n```\n\nThis function validates one condition."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $or?", "Assistant": "The arguments for `$or` are as follows:\n\n- **conditions** (String): The conditions that must match one (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $or added?", "Assistant": "$or was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $or nativly to forgescipt?", "Assistant": "Yes, $or is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $channelCooldown?", "Assistant": "Adds a cooldown binded to a channel and command\n\nExample usage:\n```js\n$channelCooldown[channel_ID_example;data;code_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $channelCooldown?", "Assistant": "Use `$channelCooldown` like this:\n```js\n$channelCooldown[channel_ID_example;data;code_example]\n```\n\nThis function adds a cooldown binded to a channel and command."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelCooldown in forgescript?", "Assistant": "Yes, You use `$channelCooldown` like this:\n```js\n$channelCooldown[channel_ID_example;data;code_example]\n```\n\nThis function adds a cooldown binded to a channel and command."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $channelCooldown?", "Assistant": "The arguments for `$channelCooldown` are as follows:\n\n- **channel ID** (String): The channel id to assign the cooldown to (Required)\n- **duration** (Time): The duration of the cooldown (Required)\n- **code** (String): The code to execute if the cooldown is active (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $channelCooldown added?", "Assistant": "$channelCooldown was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $channelCooldown nativly to forgescipt?", "Assistant": "Yes, $channelCooldown is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $cooldown?", "Assistant": "Adds a command cooldown\n\nExample usage:\n```js\n$cooldown[id_example;data;code_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $cooldown?", "Assistant": "Use `$cooldown` like this:\n```js\n$cooldown[id_example;data;code_example]\n```\n\nThis function adds a command cooldown."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $cooldown in forgescript?", "Assistant": "Yes, You use `$cooldown` like this:\n```js\n$cooldown[id_example;data;code_example]\n```\n\nThis function adds a command cooldown."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $cooldown?", "Assistant": "The arguments for `$cooldown` are as follows:\n\n- **id** (String): The id to assign the cooldown to, can be anything (Required)\n- **duration** (Time): The duration of the cooldown (Required)\n- **code** (String): The code to execute if the cooldown is active (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $cooldown added?", "Assistant": "$cooldown was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $cooldown nativly to forgescipt?", "Assistant": "Yes, $cooldown is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $deleteChannelCooldown?", "Assistant": "Deletes cooldown for given channel id, binded to current command\n\nExample usage:\n```js\n$deleteChannelCooldown[channel_ID_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $deleteChannelCooldown?", "Assistant": "Use `$deleteChannelCooldown` like this:\n```js\n$deleteChannelCooldown[channel_ID_example]\n```\n\nThis function deletes cooldown for given channel id, binded to current command."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteChannelCooldown in forgescript?", "Assistant": "Yes, You use `$deleteChannelCooldown` like this:\n```js\n$deleteChannelCooldown[channel_ID_example]\n```\n\nThis function deletes cooldown for given channel id, binded to current command."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $deleteChannelCooldown?", "Assistant": "The arguments for `$deleteChannelCooldown` are as follows:\n\n- **channel ID** (String): The id to delete its cooldown (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $deleteChannelCooldown added?", "Assistant": "$deleteChannelCooldown was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteChannelCooldown nativly to forgescipt?", "Assistant": "Yes, $deleteChannelCooldown is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $deleteCooldown?", "Assistant": "Deletes cooldown of given id\n\nExample usage:\n```js\n$deleteCooldown[id_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $deleteCooldown?", "Assistant": "Use `$deleteCooldown` like this:\n```js\n$deleteCooldown[id_example]\n```\n\nThis function deletes cooldown of given id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteCooldown in forgescript?", "Assistant": "Yes, You use `$deleteCooldown` like this:\n```js\n$deleteCooldown[id_example]\n```\n\nThis function deletes cooldown of given id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $deleteCooldown?", "Assistant": "The arguments for `$deleteCooldown` are as follows:\n\n- **id** (String): The id to delete its cooldown (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $deleteCooldown added?", "Assistant": "$deleteCooldown was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteCooldown nativly to forgescipt?", "Assistant": "Yes, $deleteCooldown is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $deleteGuildCooldown?", "Assistant": "Deletes cooldown for given guild id, binded to current command\n\nExample usage:\n```js\n$deleteGuildCooldown[guild_ID_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $deleteGuildCooldown?", "Assistant": "Use `$deleteGuildCooldown` like this:\n```js\n$deleteGuildCooldown[guild_ID_example]\n```\n\nThis function deletes cooldown for given guild id, binded to current command."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteGuildCooldown in forgescript?", "Assistant": "Yes, You use `$deleteGuildCooldown` like this:\n```js\n$deleteGuildCooldown[guild_ID_example]\n```\n\nThis function deletes cooldown for given guild id, binded to current command."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $deleteGuildCooldown?", "Assistant": "The arguments for `$deleteGuildCooldown` are as follows:\n\n- **guild ID** (String): The id to delete its cooldown (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $deleteGuildCooldown added?", "Assistant": "$deleteGuildCooldown was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteGuildCooldown nativly to forgescipt?", "Assistant": "Yes, $deleteGuildCooldown is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $deleteMemberCooldown?", "Assistant": "Deletes cooldown for given guild and user id, binded to current command\n\nExample usage:\n```js\n$deleteMemberCooldown[guild_ID_example;user_ID_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $deleteMemberCooldown?", "Assistant": "Use `$deleteMemberCooldown` like this:\n```js\n$deleteMemberCooldown[guild_ID_example;user_ID_example]\n```\n\nThis function deletes cooldown for given guild and user id, binded to current command."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteMemberCooldown in forgescript?", "Assistant": "Yes, You use `$deleteMemberCooldown` like this:\n```js\n$deleteMemberCooldown[guild_ID_example;user_ID_example]\n```\n\nThis function deletes cooldown for given guild and user id, binded to current command."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $deleteMemberCooldown?", "Assistant": "The arguments for `$deleteMemberCooldown` are as follows:\n\n- **guild ID** (String): The id to delete its cooldown (Required)\n- **user ID** (String): The id to delete its cooldown (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $deleteMemberCooldown added?", "Assistant": "$deleteMemberCooldown was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteMemberCooldown nativly to forgescipt?", "Assistant": "Yes, $deleteMemberCooldown is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $deleteUserCooldown?", "Assistant": "Deletes cooldown for given user id, binded to current command\n\nExample usage:\n```js\n$deleteUserCooldown[user_ID_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $deleteUserCooldown?", "Assistant": "Use `$deleteUserCooldown` like this:\n```js\n$deleteUserCooldown[user_ID_example]\n```\n\nThis function deletes cooldown for given user id, binded to current command."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteUserCooldown in forgescript?", "Assistant": "Yes, You use `$deleteUserCooldown` like this:\n```js\n$deleteUserCooldown[user_ID_example]\n```\n\nThis function deletes cooldown for given user id, binded to current command."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $deleteUserCooldown?", "Assistant": "The arguments for `$deleteUserCooldown` are as follows:\n\n- **user ID** (String): The id to delete its cooldown (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $deleteUserCooldown added?", "Assistant": "$deleteUserCooldown was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteUserCooldown nativly to forgescipt?", "Assistant": "Yes, $deleteUserCooldown is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $getCooldownTime?", "Assistant": "Retrieves current cooldown time in ms for given id\n\nExample usage:\n```js\n$getCooldownTime[id_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $getCooldownTime?", "Assistant": "Use `$getCooldownTime` like this:\n```js\n$getCooldownTime[id_example]\n```\n\nThis function retrieves current cooldown time in ms for given id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $getCooldownTime in forgescript?", "Assistant": "Yes, You use `$getCooldownTime` like this:\n```js\n$getCooldownTime[id_example]\n```\n\nThis function retrieves current cooldown time in ms for given id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $getCooldownTime?", "Assistant": "The arguments for `$getCooldownTime` are as follows:\n\n- **id** (String): The id to get its cooldown (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $getCooldownTime added?", "Assistant": "$getCooldownTime was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $getCooldownTime nativly to forgescipt?", "Assistant": "Yes, $getCooldownTime is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $getGuildCooldownTime?", "Assistant": "Retrieves current cooldown time in ms for given guild id, binded to current command\n\nExample usage:\n```js\n$getGuildCooldownTime[guild_ID_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $getGuildCooldownTime?", "Assistant": "Use `$getGuildCooldownTime` like this:\n```js\n$getGuildCooldownTime[guild_ID_example]\n```\n\nThis function retrieves current cooldown time in ms for given guild id, binded to current command."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $getGuildCooldownTime in forgescript?", "Assistant": "Yes, You use `$getGuildCooldownTime` like this:\n```js\n$getGuildCooldownTime[guild_ID_example]\n```\n\nThis function retrieves current cooldown time in ms for given guild id, binded to current command."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $getGuildCooldownTime?", "Assistant": "The arguments for `$getGuildCooldownTime` are as follows:\n\n- **guild ID** (String): The guild id to get its cooldown (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $getGuildCooldownTime added?", "Assistant": "$getGuildCooldownTime was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $getGuildCooldownTime nativly to forgescipt?", "Assistant": "Yes, $getGuildCooldownTime is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $getMemberCooldownTime?", "Assistant": "Retrieves current cooldown time in ms for given guild and user id, binded to current command\n\nExample usage:\n```js\n$getMemberCooldownTime[guild_ID_example;user_ID_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $getMemberCooldownTime?", "Assistant": "Use `$getMemberCooldownTime` like this:\n```js\n$getMemberCooldownTime[guild_ID_example;user_ID_example]\n```\n\nThis function retrieves current cooldown time in ms for given guild and user id, binded to current command."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $getMemberCooldownTime in forgescript?", "Assistant": "Yes, You use `$getMemberCooldownTime` like this:\n```js\n$getMemberCooldownTime[guild_ID_example;user_ID_example]\n```\n\nThis function retrieves current cooldown time in ms for given guild and user id, binded to current command."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $getMemberCooldownTime?", "Assistant": "The arguments for `$getMemberCooldownTime` are as follows:\n\n- **guild ID** (String): The guild id to get its cooldown (Required)\n- **user ID** (String): The user id to get its cooldown (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $getMemberCooldownTime added?", "Assistant": "$getMemberCooldownTime was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $getMemberCooldownTime nativly to forgescipt?", "Assistant": "Yes, $getMemberCooldownTime is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $getUserCooldownTime?", "Assistant": "Retrieves current cooldown time in ms for given user id, binded to current command\n\nExample usage:\n```js\n$getUserCooldownTime[user_ID_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $getUserCooldownTime?", "Assistant": "Use `$getUserCooldownTime` like this:\n```js\n$getUserCooldownTime[user_ID_example]\n```\n\nThis function retrieves current cooldown time in ms for given user id, binded to current command."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $getUserCooldownTime in forgescript?", "Assistant": "Yes, You use `$getUserCooldownTime` like this:\n```js\n$getUserCooldownTime[user_ID_example]\n```\n\nThis function retrieves current cooldown time in ms for given user id, binded to current command."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $getUserCooldownTime?", "Assistant": "The arguments for `$getUserCooldownTime` are as follows:\n\n- **user ID** (String): The user id to get its cooldown (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $getUserCooldownTime added?", "Assistant": "$getUserCooldownTime was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $getUserCooldownTime nativly to forgescipt?", "Assistant": "Yes, $getUserCooldownTime is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildCooldown?", "Assistant": "Adds a cooldown binded to a guild and command\n\nExample usage:\n```js\n$guildCooldown[guild_ID_example;data;code_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildCooldown?", "Assistant": "Use `$guildCooldown` like this:\n```js\n$guildCooldown[guild_ID_example;data;code_example]\n```\n\nThis function adds a cooldown binded to a guild and command."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildCooldown in forgescript?", "Assistant": "Yes, You use `$guildCooldown` like this:\n```js\n$guildCooldown[guild_ID_example;data;code_example]\n```\n\nThis function adds a cooldown binded to a guild and command."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildCooldown?", "Assistant": "The arguments for `$guildCooldown` are as follows:\n\n- **guild ID** (String): The guild id to assign the cooldown to (Required)\n- **duration** (Time): The duration of the cooldown (Required)\n- **code** (String): The code to execute if the cooldown is active (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildCooldown added?", "Assistant": "$guildCooldown was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildCooldown nativly to forgescipt?", "Assistant": "Yes, $guildCooldown is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $memberCooldown?", "Assistant": "Adds a cooldown binded to a guild member and command\n\nExample usage:\n```js\n$memberCooldown[guild_ID_example;user_ID_example;data;code_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $memberCooldown?", "Assistant": "Use `$memberCooldown` like this:\n```js\n$memberCooldown[guild_ID_example;user_ID_example;data;code_example]\n```\n\nThis function adds a cooldown binded to a guild member and command."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberCooldown in forgescript?", "Assistant": "Yes, You use `$memberCooldown` like this:\n```js\n$memberCooldown[guild_ID_example;user_ID_example;data;code_example]\n```\n\nThis function adds a cooldown binded to a guild member and command."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $memberCooldown?", "Assistant": "The arguments for `$memberCooldown` are as follows:\n\n- **guild ID** (String): The guild id to assign the cooldown to (Required)\n- **user ID** (String): The user id to assign the cooldown to (Required)\n- **duration** (Time): The duration of the cooldown (Required)\n- **code** (String): The code to execute if the cooldown is active (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $memberCooldown added?", "Assistant": "$memberCooldown was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberCooldown nativly to forgescipt?", "Assistant": "Yes, $memberCooldown is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $userCooldown?", "Assistant": "Adds a cooldown binded to a user and command\n\nExample usage:\n```js\n$userCooldown[user_ID_example;data;code_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $userCooldown?", "Assistant": "Use `$userCooldown` like this:\n```js\n$userCooldown[user_ID_example;data;code_example]\n```\n\nThis function adds a cooldown binded to a user and command."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $userCooldown in forgescript?", "Assistant": "Yes, You use `$userCooldown` like this:\n```js\n$userCooldown[user_ID_example;data;code_example]\n```\n\nThis function adds a cooldown binded to a user and command."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $userCooldown?", "Assistant": "The arguments for `$userCooldown` are as follows:\n\n- **user ID** (String): The user id to assign the cooldown to (Required)\n- **duration** (Time): The duration of the cooldown (Required)\n- **code** (String): The code to execute if the cooldown is active (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $userCooldown added?", "Assistant": "$userCooldown was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $userCooldown nativly to forgescipt?", "Assistant": "Yes, $userCooldown is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $createQueryParams?", "Assistant": "Creates query params with given fields\n\nExample usage:\n```js\n$createQueryParams[param_name;_param_value_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $createQueryParams?", "Assistant": "Use `$createQueryParams` like this:\n```js\n$createQueryParams[param_name;_param_value_example]\n```\n\nThis function creates query params with given fields."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $createQueryParams in forgescript?", "Assistant": "Yes, You use `$createQueryParams` like this:\n```js\n$createQueryParams[param_name;_param_value_example]\n```\n\nThis function creates query params with given fields."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $createQueryParams?", "Assistant": "The arguments for `$createQueryParams` are as follows:\n\n- **param name; param value** (String): The param name followed by the value, (param1;value1) (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $createQueryParams added?", "Assistant": "$createQueryParams was added in ForgeScript version 1.0.7."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $createQueryParams nativly to forgescipt?", "Assistant": "Yes, $createQueryParams is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $decodeURI?", "Assistant": "Decodes text from a url\n\nExample usage:\n```js\n$decodeURI[text_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $decodeURI?", "Assistant": "Use `$decodeURI` like this:\n```js\n$decodeURI[text_example]\n```\n\nThis function decodes text from a url."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $decodeURI in forgescript?", "Assistant": "Yes, You use `$decodeURI` like this:\n```js\n$decodeURI[text_example]\n```\n\nThis function decodes text from a url."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $decodeURI?", "Assistant": "The arguments for `$decodeURI` are as follows:\n\n- **text** (String): The text to decode (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $decodeURI added?", "Assistant": "$decodeURI was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $decodeURI nativly to forgescipt?", "Assistant": "Yes, $decodeURI is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $decodeURIComponent?", "Assistant": "Decodes text from a url\n\nExample usage:\n```js\n$decodeURIComponent[text_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $decodeURIComponent?", "Assistant": "Use `$decodeURIComponent` like this:\n```js\n$decodeURIComponent[text_example]\n```\n\nThis function decodes text from a url."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $decodeURIComponent in forgescript?", "Assistant": "Yes, You use `$decodeURIComponent` like this:\n```js\n$decodeURIComponent[text_example]\n```\n\nThis function decodes text from a url."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $decodeURIComponent?", "Assistant": "The arguments for `$decodeURIComponent` are as follows:\n\n- **text** (String): The text to decode (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $decodeURIComponent added?", "Assistant": "$decodeURIComponent was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $decodeURIComponent nativly to forgescipt?", "Assistant": "Yes, $decodeURIComponent is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $decrypt?", "Assistant": "Decrypts given text with a key\n\nExample usage:\n```js\n$decrypt[text_example;key_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $decrypt?", "Assistant": "Use `$decrypt` like this:\n```js\n$decrypt[text_example;key_example]\n```\n\nThis function decrypts given text with a key."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $decrypt in forgescript?", "Assistant": "Yes, You use `$decrypt` like this:\n```js\n$decrypt[text_example;key_example]\n```\n\nThis function decrypts given text with a key."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $decrypt?", "Assistant": "The arguments for `$decrypt` are as follows:\n\n- **text** (String): The text to decrypt (Required)\n- **key** (String): The key to use to decrypt the text (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $decrypt added?", "Assistant": "$decrypt was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $decrypt nativly to forgescipt?", "Assistant": "Yes, $decrypt is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $deflate?", "Assistant": "Compresses given input\n\nExample usage:\n```js\n$deflate[input_example;encoding_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $deflate?", "Assistant": "Use `$deflate` like this:\n```js\n$deflate[input_example;encoding_example]\n```\n\nThis function compresses given input."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deflate in forgescript?", "Assistant": "Yes, You use `$deflate` like this:\n```js\n$deflate[input_example;encoding_example]\n```\n\nThis function compresses given input."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $deflate?", "Assistant": "The arguments for `$deflate` are as follows:\n\n- **input** (String): The text to compress (Required)\n- **encoding** (String): The output encoding to use (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $deflate added?", "Assistant": "$deflate was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deflate nativly to forgescipt?", "Assistant": "Yes, $deflate is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $encodeURI?", "Assistant": "Encodes text for a url\n\nExample usage:\n```js\n$encodeURI[text_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $encodeURI?", "Assistant": "Use `$encodeURI` like this:\n```js\n$encodeURI[text_example]\n```\n\nThis function encodes text for a url."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $encodeURI in forgescript?", "Assistant": "Yes, You use `$encodeURI` like this:\n```js\n$encodeURI[text_example]\n```\n\nThis function encodes text for a url."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $encodeURI?", "Assistant": "The arguments for `$encodeURI` are as follows:\n\n- **text** (String): The text to encode (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $encodeURI added?", "Assistant": "$encodeURI was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $encodeURI nativly to forgescipt?", "Assistant": "Yes, $encodeURI is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $encodeURIComponent?", "Assistant": "Encodes text for a url\n\nExample usage:\n```js\n$encodeURIComponent[text_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $encodeURIComponent?", "Assistant": "Use `$encodeURIComponent` like this:\n```js\n$encodeURIComponent[text_example]\n```\n\nThis function encodes text for a url."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $encodeURIComponent in forgescript?", "Assistant": "Yes, You use `$encodeURIComponent` like this:\n```js\n$encodeURIComponent[text_example]\n```\n\nThis function encodes text for a url."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $encodeURIComponent?", "Assistant": "The arguments for `$encodeURIComponent` are as follows:\n\n- **text** (String): The text to encode (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $encodeURIComponent added?", "Assistant": "$encodeURIComponent was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $encodeURIComponent nativly to forgescipt?", "Assistant": "Yes, $encodeURIComponent is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $encrypt?", "Assistant": "Encrypts given text with a key\n\nExample usage:\n```js\n$encrypt[text_example;key_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $encrypt?", "Assistant": "Use `$encrypt` like this:\n```js\n$encrypt[text_example;key_example]\n```\n\nThis function encrypts given text with a key."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $encrypt in forgescript?", "Assistant": "Yes, You use `$encrypt` like this:\n```js\n$encrypt[text_example;key_example]\n```\n\nThis function encrypts given text with a key."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $encrypt?", "Assistant": "The arguments for `$encrypt` are as follows:\n\n- **text** (String): The text to encrypt (Required)\n- **key** (String): The key to use to encrypt text (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $encrypt added?", "Assistant": "$encrypt was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $encrypt nativly to forgescipt?", "Assistant": "Yes, $encrypt is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $inflate?", "Assistant": "Decompresses given input\n\nExample usage:\n```js\n$inflate[input_example;encoding_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $inflate?", "Assistant": "Use `$inflate` like this:\n```js\n$inflate[input_example;encoding_example]\n```\n\nThis function decompresses given input."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $inflate in forgescript?", "Assistant": "Yes, You use `$inflate` like this:\n```js\n$inflate[input_example;encoding_example]\n```\n\nThis function decompresses given input."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $inflate?", "Assistant": "The arguments for `$inflate` are as follows:\n\n- **input** (String): The text to decompress (Required)\n- **encoding** (String): The input encoding to use (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $inflate added?", "Assistant": "$inflate was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $inflate nativly to forgescipt?", "Assistant": "Yes, $inflate is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $md5?", "Assistant": "Creates a md5 key from given input\n\nExample usage:\n```js\n$md5[input_example;encoding_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $md5?", "Assistant": "Use `$md5` like this:\n```js\n$md5[input_example;encoding_example]\n```\n\nThis function creates a md5 key from given input."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $md5 in forgescript?", "Assistant": "Yes, You use `$md5` like this:\n```js\n$md5[input_example;encoding_example]\n```\n\nThis function creates a md5 key from given input."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $md5?", "Assistant": "The arguments for `$md5` are as follows:\n\n- **input** (String): Input to use for feeding (Required)\n- **encoding** (String): The output encoding (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $md5 added?", "Assistant": "$md5 was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $md5 nativly to forgescipt?", "Assistant": "Yes, $md5 is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $randomBytes?", "Assistant": "Generates a string of random bytes, in hex\n\nExample usage:\n```js\n$randomBytes[24]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $randomBytes?", "Assistant": "Use `$randomBytes` like this:\n```js\n$randomBytes[24]\n```\n\nThis function generates a string of random bytes, in hex."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $randomBytes in forgescript?", "Assistant": "Yes, You use `$randomBytes` like this:\n```js\n$randomBytes[24]\n```\n\nThis function generates a string of random bytes, in hex."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $randomBytes?", "Assistant": "The arguments for `$randomBytes` are as follows:\n\n- **length** (Number): The length of the hex string (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $randomBytes added?", "Assistant": "$randomBytes was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $randomBytes nativly to forgescipt?", "Assistant": "Yes, $randomBytes is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $sha256?", "Assistant": "Creates a sha256 key from given input\n\nExample usage:\n```js\n$sha256[input_example;encoding_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $sha256?", "Assistant": "Use `$sha256` like this:\n```js\n$sha256[input_example;encoding_example]\n```\n\nThis function creates a sha256 key from given input."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $sha256 in forgescript?", "Assistant": "Yes, You use `$sha256` like this:\n```js\n$sha256[input_example;encoding_example]\n```\n\nThis function creates a sha256 key from given input."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $sha256?", "Assistant": "The arguments for `$sha256` are as follows:\n\n- **input** (String): Input to use for feeding (Required)\n- **encoding** (String): The output encoding (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $sha256 added?", "Assistant": "$sha256 was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $sha256 nativly to forgescipt?", "Assistant": "Yes, $sha256 is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $sha512?", "Assistant": "Creates a sha512 key from given input\n\nExample usage:\n```js\n$sha512[input_example;encoding_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $sha512?", "Assistant": "Use `$sha512` like this:\n```js\n$sha512[input_example;encoding_example]\n```\n\nThis function creates a sha512 key from given input."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $sha512 in forgescript?", "Assistant": "Yes, You use `$sha512` like this:\n```js\n$sha512[input_example;encoding_example]\n```\n\nThis function creates a sha512 key from given input."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $sha512?", "Assistant": "The arguments for `$sha512` are as follows:\n\n- **input** (String): Input to use for feeding (Required)\n- **encoding** (String): The output encoding (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $sha512 added?", "Assistant": "$sha512 was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $sha512 nativly to forgescipt?", "Assistant": "Yes, $sha512 is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $addField?", "Assistant": "Adds an embed field\n\nExample usage:\n```js\n$addField[name_example;value_example;false;65]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $addField?", "Assistant": "Use `$addField` like this:\n```js\n$addField[name_example;value_example;false;65]\n```\n\nThis function adds an embed field."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addField in forgescript?", "Assistant": "Yes, You use `$addField` like this:\n```js\n$addField[name_example;value_example;false;65]\n```\n\nThis function adds an embed field."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $addField?", "Assistant": "The arguments for `$addField` are as follows:\n\n- **name** (String): The name for the field (Required)\n- **value** (String): The value for the field (Required)\n- **inline** (Boolean): Whether this field will be inline (Optional)\n- **index** (Number): The index to add this data to (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $addField added?", "Assistant": "$addField was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addField nativly to forgescipt?", "Assistant": "Yes, $addField is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $author?", "Assistant": "Adds an embed author\n\nExample usage:\n```js\n$author[name_example;icon_example;hyperlink_example;68]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $author?", "Assistant": "Use `$author` like this:\n```js\n$author[name_example;icon_example;hyperlink_example;68]\n```\n\nThis function adds an embed author."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $author in forgescript?", "Assistant": "Yes, You use `$author` like this:\n```js\n$author[name_example;icon_example;hyperlink_example;68]\n```\n\nThis function adds an embed author."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $author?", "Assistant": "The arguments for `$author` are as follows:\n\n- **name** (String): Adds a name to the embed author (Required)\n- **icon** (String): The icon url (Optional)\n- **hyperlink** (String): The hyperlink url (Optional)\n- **index** (Number): The index to add this data to (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $author added?", "Assistant": "$author was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $author nativly to forgescipt?", "Assistant": "Yes, $author is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $color?", "Assistant": "Adds an embed color\n\nExample usage:\n```js\n$color[data;79]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $color?", "Assistant": "Use `$color` like this:\n```js\n$color[data;79]\n```\n\nThis function adds an embed color."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $color in forgescript?", "Assistant": "Yes, You use `$color` like this:\n```js\n$color[data;79]\n```\n\nThis function adds an embed color."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $color?", "Assistant": "The arguments for `$color` are as follows:\n\n- **color** (Color): The color for the embed (Required)\n- **index** (Number): The index to add this data to (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $color added?", "Assistant": "$color was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $color nativly to forgescipt?", "Assistant": "Yes, $color is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $deleteField?", "Assistant": "Deletes an embed field\n\nExample usage:\n```js\n$deleteField[64;57]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $deleteField?", "Assistant": "Use `$deleteField` like this:\n```js\n$deleteField[64;57]\n```\n\nThis function deletes an embed field."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteField in forgescript?", "Assistant": "Yes, You use `$deleteField` like this:\n```js\n$deleteField[64;57]\n```\n\nThis function deletes an embed field."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $deleteField?", "Assistant": "The arguments for `$deleteField` are as follows:\n\n- **field index** (Number): The index field to delete (Required)\n- **index** (Number): The index to delete this field on (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $deleteField added?", "Assistant": "$deleteField was added in ForgeScript version 2.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteField nativly to forgescipt?", "Assistant": "Yes, $deleteField is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $description?", "Assistant": "Adds an embed description\n\nExample usage:\n```js\n$description[description_example;30]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $description?", "Assistant": "Use `$description` like this:\n```js\n$description[description_example;30]\n```\n\nThis function adds an embed description."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $description in forgescript?", "Assistant": "Yes, You use `$description` like this:\n```js\n$description[description_example;30]\n```\n\nThis function adds an embed description."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $description?", "Assistant": "The arguments for `$description` are as follows:\n\n- **description** (String): The description for the embed (Required)\n- **index** (Number): The index to add this data to (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $description added?", "Assistant": "$description was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $description nativly to forgescipt?", "Assistant": "Yes, $description is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $editField?", "Assistant": "Edits an embed field\n\nExample usage:\n```js\n$editField[42;name_example;value_example;true;94]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $editField?", "Assistant": "Use `$editField` like this:\n```js\n$editField[42;name_example;value_example;true;94]\n```\n\nThis function edits an embed field."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editField in forgescript?", "Assistant": "Yes, You use `$editField` like this:\n```js\n$editField[42;name_example;value_example;true;94]\n```\n\nThis function edits an embed field."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $editField?", "Assistant": "The arguments for `$editField` are as follows:\n\n- **field index** (Number): The index field to edit (Required)\n- **name** (String): The name for the field (Optional)\n- **value** (String): The value for the field (Optional)\n- **inline** (Boolean): Whether this field will be inline (Optional)\n- **index** (Number): The index to edit this data on (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $editField added?", "Assistant": "$editField was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editField nativly to forgescipt?", "Assistant": "Yes, $editField is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $footer?", "Assistant": "Adds an embed footer\n\nExample usage:\n```js\n$footer[text_example;url_example;25]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $footer?", "Assistant": "Use `$footer` like this:\n```js\n$footer[text_example;url_example;25]\n```\n\nThis function adds an embed footer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $footer in forgescript?", "Assistant": "Yes, You use `$footer` like this:\n```js\n$footer[text_example;url_example;25]\n```\n\nThis function adds an embed footer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $footer?", "Assistant": "The arguments for `$footer` are as follows:\n\n- **text** (String): The text for the embed footer (Required)\n- **url** (String): The url for the embed footer (Optional)\n- **index** (Number): The index to add this data to (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $footer added?", "Assistant": "$footer was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $footer nativly to forgescipt?", "Assistant": "Yes, $footer is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $image?", "Assistant": "Adds an embed image\n\nExample usage:\n```js\n$image[url_example;96]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $image?", "Assistant": "Use `$image` like this:\n```js\n$image[url_example;96]\n```\n\nThis function adds an embed image."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $image in forgescript?", "Assistant": "Yes, You use `$image` like this:\n```js\n$image[url_example;96]\n```\n\nThis function adds an embed image."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $image?", "Assistant": "The arguments for `$image` are as follows:\n\n- **url** (String): The url for the embed image (Required)\n- **index** (Number): The index to add this data to (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $image added?", "Assistant": "$image was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $image nativly to forgescipt?", "Assistant": "Yes, $image is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $thumbnail?", "Assistant": "Adds an embed thumbnail\n\nExample usage:\n```js\n$thumbnail[url_example;95]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $thumbnail?", "Assistant": "Use `$thumbnail` like this:\n```js\n$thumbnail[url_example;95]\n```\n\nThis function adds an embed thumbnail."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $thumbnail in forgescript?", "Assistant": "Yes, You use `$thumbnail` like this:\n```js\n$thumbnail[url_example;95]\n```\n\nThis function adds an embed thumbnail."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $thumbnail?", "Assistant": "The arguments for `$thumbnail` are as follows:\n\n- **url** (String): The url for the embed thumbnail (Required)\n- **index** (Number): The index to add this data to (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $thumbnail added?", "Assistant": "$thumbnail was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $thumbnail nativly to forgescipt?", "Assistant": "Yes, $thumbnail is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $timestamp?", "Assistant": "Adds an embed timestamp\n\nExample usage:\n```js\n$timestamp[50;97]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $timestamp?", "Assistant": "Use `$timestamp` like this:\n```js\n$timestamp[50;97]\n```\n\nThis function adds an embed timestamp."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $timestamp in forgescript?", "Assistant": "Yes, You use `$timestamp` like this:\n```js\n$timestamp[50;97]\n```\n\nThis function adds an embed timestamp."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $timestamp?", "Assistant": "The arguments for `$timestamp` are as follows:\n\n- **ms** (Number): The timestamp time to add (Optional)\n- **index** (Number): The index to add this data to (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $timestamp added?", "Assistant": "$timestamp was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $timestamp nativly to forgescipt?", "Assistant": "Yes, $timestamp is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $title?", "Assistant": "Adds an embed title\n\nExample usage:\n```js\n$title[title_example;hyperlink_example;55]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $title?", "Assistant": "Use `$title` like this:\n```js\n$title[title_example;hyperlink_example;55]\n```\n\nThis function adds an embed title."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $title in forgescript?", "Assistant": "Yes, You use `$title` like this:\n```js\n$title[title_example;hyperlink_example;55]\n```\n\nThis function adds an embed title."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $title?", "Assistant": "The arguments for `$title` are as follows:\n\n- **title** (String): Adds a title to the embed (Required)\n- **hyperlink** (String): The hyperlink url (Optional)\n- **index** (Number): The index to add this data to (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $title added?", "Assistant": "$title was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $title nativly to forgescipt?", "Assistant": "Yes, $title is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $addApplicationEmoji?", "Assistant": "Adds an application emoji, returns the emoji id\n\nExample usage:\n```js\n$addApplicationEmoji[name_example;url_example;false]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $addApplicationEmoji?", "Assistant": "Use `$addApplicationEmoji` like this:\n```js\n$addApplicationEmoji[name_example;url_example;false]\n```\n\nThis function adds an application emoji, returns the emoji id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addApplicationEmoji in forgescript?", "Assistant": "Yes, You use `$addApplicationEmoji` like this:\n```js\n$addApplicationEmoji[name_example;url_example;false]\n```\n\nThis function adds an application emoji, returns the emoji id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $addApplicationEmoji?", "Assistant": "The arguments for `$addApplicationEmoji` are as follows:\n\n- **name** (String): The name for the emoji (Required)\n- **url** (String): The emoji icon to use (Required)\n- **return emoji ID** (Boolean): Whether to return the emoji id (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $addApplicationEmoji added?", "Assistant": "$addApplicationEmoji was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addApplicationEmoji nativly to forgescipt?", "Assistant": "Yes, $addApplicationEmoji is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $addEmoji?", "Assistant": "Adds an emoji to a guild, returns the emoji id\n\nExample usage:\n```js\n$addEmoji[data;name_example;url_example;false;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $addEmoji?", "Assistant": "Use `$addEmoji` like this:\n```js\n$addEmoji[data;name_example;url_example;false;data]\n```\n\nThis function adds an emoji to a guild, returns the emoji id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addEmoji in forgescript?", "Assistant": "Yes, You use `$addEmoji` like this:\n```js\n$addEmoji[data;name_example;url_example;false;data]\n```\n\nThis function adds an emoji to a guild, returns the emoji id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $addEmoji?", "Assistant": "The arguments for `$addEmoji` are as follows:\n\n- **guild ID** (Guild): The guild to add this emote to (Required)\n- **name** (String): The name for the emoji (Required)\n- **url** (String): The emoji icon to use (Required)\n- **return emoji ID** (Boolean): Whether to return the emoji id (Optional)\n- **roles** (Role): The roles to limit usage of this emote (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $addEmoji added?", "Assistant": "$addEmoji was added in ForgeScript version 1.0.7."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addEmoji nativly to forgescipt?", "Assistant": "Yes, $addEmoji is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $deleteApplicationEmojis?", "Assistant": "Deletes application emojis, returns the count of emojis deleted\n\nExample usage:\n```js\n$deleteApplicationEmojis[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $deleteApplicationEmojis?", "Assistant": "Use `$deleteApplicationEmojis` like this:\n```js\n$deleteApplicationEmojis[data]\n```\n\nThis function deletes application emojis, returns the count of emojis deleted."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteApplicationEmojis in forgescript?", "Assistant": "Yes, You use `$deleteApplicationEmojis` like this:\n```js\n$deleteApplicationEmojis[data]\n```\n\nThis function deletes application emojis, returns the count of emojis deleted."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $deleteApplicationEmojis?", "Assistant": "The arguments for `$deleteApplicationEmojis` are as follows:\n\n- **emojis** (ApplicationEmoji): The emojis to delete (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $deleteApplicationEmojis added?", "Assistant": "$deleteApplicationEmojis was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteApplicationEmojis nativly to forgescipt?", "Assistant": "Yes, $deleteApplicationEmojis is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $deleteEmojiMessageReactions?", "Assistant": "Deletes all emoji reactions from a message, returns amount of reaction emojis successfully deleted\n\nExample usage:\n```js\n$deleteEmojiMessageReactions[data;data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $deleteEmojiMessageReactions?", "Assistant": "Use `$deleteEmojiMessageReactions` like this:\n```js\n$deleteEmojiMessageReactions[data;data;data]\n```\n\nThis function deletes all emoji reactions from a message, returns amount of reaction emojis successfully deleted."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteEmojiMessageReactions in forgescript?", "Assistant": "Yes, You use `$deleteEmojiMessageReactions` like this:\n```js\n$deleteEmojiMessageReactions[data;data;data]\n```\n\nThis function deletes all emoji reactions from a message, returns amount of reaction emojis successfully deleted."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $deleteEmojiMessageReactions?", "Assistant": "The arguments for `$deleteEmojiMessageReactions` are as follows:\n\n- **channel ID** (Channel): The channel the message is located (Required)\n- **message ID** (Message): The message to remove emoji reactions from (Required)\n- **emojis** (Reaction): The emojis to delete from this message (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $deleteEmojiMessageReactions added?", "Assistant": "$deleteEmojiMessageReactions was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteEmojiMessageReactions nativly to forgescipt?", "Assistant": "Yes, $deleteEmojiMessageReactions is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $deleteEmojis?", "Assistant": "Delete given emoji ids, returns the count of emotes deleted\n\nExample usage:\n```js\n$deleteEmojis[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $deleteEmojis?", "Assistant": "Use `$deleteEmojis` like this:\n```js\n$deleteEmojis[data;data]\n```\n\nThis function delete given emoji ids, returns the count of emotes deleted."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteEmojis in forgescript?", "Assistant": "Yes, You use `$deleteEmojis` like this:\n```js\n$deleteEmojis[data;data]\n```\n\nThis function delete given emoji ids, returns the count of emotes deleted."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $deleteEmojis?", "Assistant": "The arguments for `$deleteEmojis` are as follows:\n\n- **guild ID** (Guild): The guild to delete emotes from (Required)\n- **emojis** (GuildEmoji): The emojis to delete (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $deleteEmojis added?", "Assistant": "$deleteEmojis was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteEmojis nativly to forgescipt?", "Assistant": "Yes, $deleteEmojis is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $editApplicationEmoji?", "Assistant": "Edits an application emoji, returns bool\n\nExample usage:\n```js\n$editApplicationEmoji[data;name_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $editApplicationEmoji?", "Assistant": "Use `$editApplicationEmoji` like this:\n```js\n$editApplicationEmoji[data;name_example]\n```\n\nThis function edits an application emoji, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editApplicationEmoji in forgescript?", "Assistant": "Yes, You use `$editApplicationEmoji` like this:\n```js\n$editApplicationEmoji[data;name_example]\n```\n\nThis function edits an application emoji, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $editApplicationEmoji?", "Assistant": "The arguments for `$editApplicationEmoji` are as follows:\n\n- **emoji ID** (ApplicationEmoji): The emoji to edit (Required)\n- **name** (String): The new name for the emoji (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $editApplicationEmoji added?", "Assistant": "$editApplicationEmoji was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editApplicationEmoji nativly to forgescipt?", "Assistant": "Yes, $editApplicationEmoji is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $editEmoji?", "Assistant": "Edits an emoji of a guild, returns bool\n\nExample usage:\n```js\n$editEmoji[data;data;name_example;reason_example;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $editEmoji?", "Assistant": "Use `$editEmoji` like this:\n```js\n$editEmoji[data;data;name_example;reason_example;data]\n```\n\nThis function edits an emoji of a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editEmoji in forgescript?", "Assistant": "Yes, You use `$editEmoji` like this:\n```js\n$editEmoji[data;data;name_example;reason_example;data]\n```\n\nThis function edits an emoji of a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $editEmoji?", "Assistant": "The arguments for `$editEmoji` are as follows:\n\n- **guild ID** (Guild): The guild to edit this emoji on (Required)\n- **emoji ID** (GuildEmoji): The emoji to edit (Required)\n- **name** (String): The new name for the emoji (Optional)\n- **reason** (String): The reason for editing the emoji (Optional)\n- **roles** (Role): The new roles to limit usage of this emoji to (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $editEmoji added?", "Assistant": "$editEmoji was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editEmoji nativly to forgescipt?", "Assistant": "Yes, $editEmoji is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $emoji?", "Assistant": "Formats given emoji\n\nExample usage:\n```js\n$emoji[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $emoji?", "Assistant": "Use `$emoji` like this:\n```js\n$emoji[data]\n```\n\nThis function formats given emoji."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $emoji in forgescript?", "Assistant": "Yes, You use `$emoji` like this:\n```js\n$emoji[data]\n```\n\nThis function formats given emoji."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $emoji?", "Assistant": "The arguments for `$emoji` are as follows:\n\n- **emoji ID** (Emoji): The emoji id to format (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $emoji added?", "Assistant": "$emoji was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $emoji nativly to forgescipt?", "Assistant": "Yes, $emoji is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $emojiAnimated?", "Assistant": "Returns whether the emoji is animated\n\nExample usage:\n```js\n$emojiAnimated[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $emojiAnimated?", "Assistant": "Use `$emojiAnimated` like this:\n```js\n$emojiAnimated[data]\n```\n\nThis function returns whether the emoji is animated."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $emojiAnimated in forgescript?", "Assistant": "Yes, You use `$emojiAnimated` like this:\n```js\n$emojiAnimated[data]\n```\n\nThis function returns whether the emoji is animated."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $emojiAnimated?", "Assistant": "The arguments for `$emojiAnimated` are as follows:\n\n- **emoji ID** (Emoji): The emoji id to return its animation state (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $emojiAnimated added?", "Assistant": "$emojiAnimated was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $emojiAnimated nativly to forgescipt?", "Assistant": "Yes, $emojiAnimated is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $emojiCount?", "Assistant": "Returns the emoji count of all servers\n\nExample usage:\n```js\n$emojiCount[normal]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $emojiCount?", "Assistant": "Use `$emojiCount` like this:\n```js\n$emojiCount[normal]\n```\n\nThis function returns the emoji count of all servers."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $emojiCount in forgescript?", "Assistant": "Yes, You use `$emojiCount` like this:\n```js\n$emojiCount[normal]\n```\n\nThis function returns the emoji count of all servers."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $emojiCount?", "Assistant": "The arguments for `$emojiCount` are as follows:\n\n- **type** (Enum): The type of the emotes to count (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $emojiCount added?", "Assistant": "$emojiCount was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $emojiCount nativly to forgescipt?", "Assistant": "Yes, $emojiCount is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $emojiCreatedAt?", "Assistant": "Returns the emoji creation timestamp\n\nExample usage:\n```js\n$emojiCreatedAt[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $emojiCreatedAt?", "Assistant": "Use `$emojiCreatedAt` like this:\n```js\n$emojiCreatedAt[data]\n```\n\nThis function returns the emoji creation timestamp."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $emojiCreatedAt in forgescript?", "Assistant": "Yes, You use `$emojiCreatedAt` like this:\n```js\n$emojiCreatedAt[data]\n```\n\nThis function returns the emoji creation timestamp."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $emojiCreatedAt?", "Assistant": "The arguments for `$emojiCreatedAt` are as follows:\n\n- **emoji ID** (Emoji): The emoji id to return its creation timestamp (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $emojiCreatedAt added?", "Assistant": "$emojiCreatedAt was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $emojiCreatedAt nativly to forgescipt?", "Assistant": "Yes, $emojiCreatedAt is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $emojiExists?", "Assistant": "Returns whether an emoji id exists\n\nExample usage:\n```js\n$emojiExists[emoji_ID_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $emojiExists?", "Assistant": "Use `$emojiExists` like this:\n```js\n$emojiExists[emoji_ID_example]\n```\n\nThis function returns whether an emoji id exists."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $emojiExists in forgescript?", "Assistant": "Yes, You use `$emojiExists` like this:\n```js\n$emojiExists[emoji_ID_example]\n```\n\nThis function returns whether an emoji id exists."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $emojiExists?", "Assistant": "The arguments for `$emojiExists` are as follows:\n\n- **emoji ID** (String): The emoji to check (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $emojiExists added?", "Assistant": "$emojiExists was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $emojiExists nativly to forgescipt?", "Assistant": "Yes, $emojiExists is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $emojiGuildID?", "Assistant": "Returns the emoji guild id\n\nExample usage:\n```js\n$emojiGuildID[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $emojiGuildID?", "Assistant": "Use `$emojiGuildID` like this:\n```js\n$emojiGuildID[data]\n```\n\nThis function returns the emoji guild id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $emojiGuildID in forgescript?", "Assistant": "Yes, You use `$emojiGuildID` like this:\n```js\n$emojiGuildID[data]\n```\n\nThis function returns the emoji guild id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $emojiGuildID?", "Assistant": "The arguments for `$emojiGuildID` are as follows:\n\n- **emoji ID** (GuildEmoji): The emoji id to return its guild id (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $emojiGuildID added?", "Assistant": "$emojiGuildID was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $emojiGuildID nativly to forgescipt?", "Assistant": "Yes, $emojiGuildID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $emojiID?", "Assistant": "Returns the emoji id\n\nExample usage:\n```js\n$emojiID[emoji_name_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $emojiID?", "Assistant": "Use `$emojiID` like this:\n```js\n$emojiID[emoji_name_example]\n```\n\nThis function returns the emoji id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $emojiID in forgescript?", "Assistant": "Yes, You use `$emojiID` like this:\n```js\n$emojiID[emoji_name_example]\n```\n\nThis function returns the emoji id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $emojiID?", "Assistant": "The arguments for `$emojiID` are as follows:\n\n- **emoji name** (String): The emoji name to return its id (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $emojiID added?", "Assistant": "$emojiID was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $emojiID nativly to forgescipt?", "Assistant": "Yes, $emojiID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $emojiIdentifier?", "Assistant": "Returns the emoji identifier\n\nExample usage:\n```js\n$emojiIdentifier[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $emojiIdentifier?", "Assistant": "Use `$emojiIdentifier` like this:\n```js\n$emojiIdentifier[data]\n```\n\nThis function returns the emoji identifier."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $emojiIdentifier in forgescript?", "Assistant": "Yes, You use `$emojiIdentifier` like this:\n```js\n$emojiIdentifier[data]\n```\n\nThis function returns the emoji identifier."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $emojiIdentifier?", "Assistant": "The arguments for `$emojiIdentifier` are as follows:\n\n- **emoji ID** (Emoji): The emoji id to return its identifier (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $emojiIdentifier added?", "Assistant": "$emojiIdentifier was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $emojiIdentifier nativly to forgescipt?", "Assistant": "Yes, $emojiIdentifier is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $emojiIDs?", "Assistant": "Returns every emoji id\n\nExample usage:\n```js\n$emojiIDs[separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $emojiIDs?", "Assistant": "Use `$emojiIDs` like this:\n```js\n$emojiIDs[separator_example]\n```\n\nThis function returns every emoji id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $emojiIDs in forgescript?", "Assistant": "Yes, You use `$emojiIDs` like this:\n```js\n$emojiIDs[separator_example]\n```\n\nThis function returns every emoji id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $emojiIDs?", "Assistant": "The arguments for `$emojiIDs` are as follows:\n\n- **separator** (String): The separator to use for every emoji (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $emojiIDs added?", "Assistant": "$emojiIDs was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $emojiIDs nativly to forgescipt?", "Assistant": "Yes, $emojiIDs is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $emojiName?", "Assistant": "Returns the emoji name\n\nExample usage:\n```js\n$emojiName[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $emojiName?", "Assistant": "Use `$emojiName` like this:\n```js\n$emojiName[data]\n```\n\nThis function returns the emoji name."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $emojiName in forgescript?", "Assistant": "Yes, You use `$emojiName` like this:\n```js\n$emojiName[data]\n```\n\nThis function returns the emoji name."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $emojiName?", "Assistant": "The arguments for `$emojiName` are as follows:\n\n- **emoji ID** (Emoji): The emoji id to return its name (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $emojiName added?", "Assistant": "$emojiName was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $emojiName nativly to forgescipt?", "Assistant": "Yes, $emojiName is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $emojiNames?", "Assistant": "Returns the emote names of a guild\n\nExample usage:\n```js\n$emojiNames[data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $emojiNames?", "Assistant": "Use `$emojiNames` like this:\n```js\n$emojiNames[data;separator_example]\n```\n\nThis function returns the emote names of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $emojiNames in forgescript?", "Assistant": "Yes, You use `$emojiNames` like this:\n```js\n$emojiNames[data;separator_example]\n```\n\nThis function returns the emote names of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $emojiNames?", "Assistant": "The arguments for `$emojiNames` are as follows:\n\n- **guild ID** (Guild): The guild to return the emotes of (Required)\n- **separator** (String): The separator to use for each emoji (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $emojiNames added?", "Assistant": "$emojiNames was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $emojiNames nativly to forgescipt?", "Assistant": "Yes, $emojiNames is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $emojiRawData?", "Assistant": "Returns the raw data of an emoji\n\nExample usage:\n```js\n$emojiRawData[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $emojiRawData?", "Assistant": "Use `$emojiRawData` like this:\n```js\n$emojiRawData[data]\n```\n\nThis function returns the raw data of an emoji."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $emojiRawData in forgescript?", "Assistant": "Yes, You use `$emojiRawData` like this:\n```js\n$emojiRawData[data]\n```\n\nThis function returns the raw data of an emoji."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $emojiRawData?", "Assistant": "The arguments for `$emojiRawData` are as follows:\n\n- **emoji ID** (Emoji): The emoji to get raw data from (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $emojiRawData added?", "Assistant": "$emojiRawData was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $emojiRawData nativly to forgescipt?", "Assistant": "Yes, $emojiRawData is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $emojiRequiresColons?", "Assistant": "Returns whether the emoji requires colons\n\nExample usage:\n```js\n$emojiRequiresColons[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $emojiRequiresColons?", "Assistant": "Use `$emojiRequiresColons` like this:\n```js\n$emojiRequiresColons[data]\n```\n\nThis function returns whether the emoji requires colons."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $emojiRequiresColons in forgescript?", "Assistant": "Yes, You use `$emojiRequiresColons` like this:\n```js\n$emojiRequiresColons[data]\n```\n\nThis function returns whether the emoji requires colons."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $emojiRequiresColons?", "Assistant": "The arguments for `$emojiRequiresColons` are as follows:\n\n- **emoji ID** (Emoji): The emoji id to return its colons state (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $emojiRequiresColons added?", "Assistant": "$emojiRequiresColons was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $emojiRequiresColons nativly to forgescipt?", "Assistant": "Yes, $emojiRequiresColons is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $emojiRoles?", "Assistant": "Returns the role ids that can use this emote\n\nExample usage:\n```js\n$emojiRoles[data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $emojiRoles?", "Assistant": "Use `$emojiRoles` like this:\n```js\n$emojiRoles[data;separator_example]\n```\n\nThis function returns the role ids that can use this emote."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $emojiRoles in forgescript?", "Assistant": "Yes, You use `$emojiRoles` like this:\n```js\n$emojiRoles[data;separator_example]\n```\n\nThis function returns the role ids that can use this emote."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $emojiRoles?", "Assistant": "The arguments for `$emojiRoles` are as follows:\n\n- **emoji ID** (GuildEmoji): The emoji id to return its roles (Required)\n- **separator** (String): The separator to use for every role (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $emojiRoles added?", "Assistant": "$emojiRoles was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $emojiRoles nativly to forgescipt?", "Assistant": "Yes, $emojiRoles is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $emojiURL?", "Assistant": "Returns the emoji url\n\nExample usage:\n```js\n$emojiURL[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $emojiURL?", "Assistant": "Use `$emojiURL` like this:\n```js\n$emojiURL[data]\n```\n\nThis function returns the emoji url."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $emojiURL in forgescript?", "Assistant": "Yes, You use `$emojiURL` like this:\n```js\n$emojiURL[data]\n```\n\nThis function returns the emoji url."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $emojiURL?", "Assistant": "The arguments for `$emojiURL` are as follows:\n\n- **emoji ID** (Emoji): The emoji id to return its url (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $emojiURL added?", "Assistant": "$emojiURL was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $emojiURL nativly to forgescipt?", "Assistant": "Yes, $emojiURL is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $getApplicationEmojis?", "Assistant": "Gets all application emojis\n\nExample usage:\n```js\n$getApplicationEmojis[identifier;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $getApplicationEmojis?", "Assistant": "Use `$getApplicationEmojis` like this:\n```js\n$getApplicationEmojis[identifier;separator_example]\n```\n\nThis function gets all application emojis."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $getApplicationEmojis in forgescript?", "Assistant": "Yes, You use `$getApplicationEmojis` like this:\n```js\n$getApplicationEmojis[identifier;separator_example]\n```\n\nThis function gets all application emojis."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $getApplicationEmojis?", "Assistant": "The arguments for `$getApplicationEmojis` are as follows:\n\n- **property** (Enum): The property to return for every emoji (Optional)\n- **separator** (String): The separator to use for every emoji property (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $getApplicationEmojis added?", "Assistant": "$getApplicationEmojis was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $getApplicationEmojis nativly to forgescipt?", "Assistant": "Yes, $getApplicationEmojis is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $randomApplicationEmojiID?", "Assistant": "Returns a random emoji ID of the application\n\nExample usage:\n```js\n$randomApplicationEmojiID[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $randomApplicationEmojiID?", "Assistant": "Use `$randomApplicationEmojiID` like this:\n```js\n$randomApplicationEmojiID[]\n```\n\nThis function returns a random emoji id of the application."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $randomApplicationEmojiID in forgescript?", "Assistant": "Yes, You use `$randomApplicationEmojiID` like this:\n```js\n$randomApplicationEmojiID[]\n```\n\nThis function returns a random emoji id of the application."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $randomApplicationEmojiID?", "Assistant": "The arguments for `$randomApplicationEmojiID` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $randomApplicationEmojiID added?", "Assistant": "$randomApplicationEmojiID was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $randomApplicationEmojiID nativly to forgescipt?", "Assistant": "Yes, $randomApplicationEmojiID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $randomEmojiID?", "Assistant": "Returns a random emoji ID\n\nExample usage:\n```js\n$randomEmojiID[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $randomEmojiID?", "Assistant": "Use `$randomEmojiID` like this:\n```js\n$randomEmojiID[]\n```\n\nThis function returns a random emoji id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $randomEmojiID in forgescript?", "Assistant": "Yes, You use `$randomEmojiID` like this:\n```js\n$randomEmojiID[]\n```\n\nThis function returns a random emoji id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $randomEmojiID?", "Assistant": "The arguments for `$randomEmojiID` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $randomEmojiID added?", "Assistant": "$randomEmojiID was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $randomEmojiID nativly to forgescipt?", "Assistant": "Yes, $randomEmojiID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $randomGuildEmojiID?", "Assistant": "Returns a random emoji ID of a guild\n\nExample usage:\n```js\n$randomGuildEmojiID[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $randomGuildEmojiID?", "Assistant": "Use `$randomGuildEmojiID` like this:\n```js\n$randomGuildEmojiID[data]\n```\n\nThis function returns a random emoji id of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $randomGuildEmojiID in forgescript?", "Assistant": "Yes, You use `$randomGuildEmojiID` like this:\n```js\n$randomGuildEmojiID[data]\n```\n\nThis function returns a random emoji id of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $randomGuildEmojiID?", "Assistant": "The arguments for `$randomGuildEmojiID` are as follows:\n\n- **guild ID** (Guild): The guild to get emoji from (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $randomGuildEmojiID added?", "Assistant": "$randomGuildEmojiID was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $randomGuildEmojiID nativly to forgescipt?", "Assistant": "Yes, $randomGuildEmojiID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $entitlementConsume?", "Assistant": "Consumes an entitlement from an interaction\n\nExample usage:\n```js\n$entitlementConsume[entitlement_name_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $entitlementConsume?", "Assistant": "Use `$entitlementConsume` like this:\n```js\n$entitlementConsume[entitlement_name_example]\n```\n\nThis function consumes an entitlement from an interaction."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $entitlementConsume in forgescript?", "Assistant": "Yes, You use `$entitlementConsume` like this:\n```js\n$entitlementConsume[entitlement_name_example]\n```\n\nThis function consumes an entitlement from an interaction."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $entitlementConsume?", "Assistant": "The arguments for `$entitlementConsume` are as follows:\n\n- **entitlement name** (String): The name of the entitlement to consume (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $entitlementConsume added?", "Assistant": "$entitlementConsume was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $entitlementConsume nativly to forgescipt?", "Assistant": "Yes, $entitlementConsume is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $entitlementEndTimestamp?", "Assistant": "Returns the time at which this entitlement ends\n\nExample usage:\n```js\n$entitlementEndTimestamp[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $entitlementEndTimestamp?", "Assistant": "Use `$entitlementEndTimestamp` like this:\n```js\n$entitlementEndTimestamp[]\n```\n\nThis function returns the time at which this entitlement ends."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $entitlementEndTimestamp in forgescript?", "Assistant": "Yes, You use `$entitlementEndTimestamp` like this:\n```js\n$entitlementEndTimestamp[]\n```\n\nThis function returns the time at which this entitlement ends."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $entitlementEndTimestamp?", "Assistant": "The arguments for `$entitlementEndTimestamp` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $entitlementEndTimestamp added?", "Assistant": "$entitlementEndTimestamp was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $entitlementEndTimestamp nativly to forgescipt?", "Assistant": "Yes, $entitlementEndTimestamp is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $entitlementGuildID?", "Assistant": "Returns this entitlement's guild id\n\nExample usage:\n```js\n$entitlementGuildID[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $entitlementGuildID?", "Assistant": "Use `$entitlementGuildID` like this:\n```js\n$entitlementGuildID[]\n```\n\nThis function returns this entitlement's guild id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $entitlementGuildID in forgescript?", "Assistant": "Yes, You use `$entitlementGuildID` like this:\n```js\n$entitlementGuildID[]\n```\n\nThis function returns this entitlement's guild id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $entitlementGuildID?", "Assistant": "The arguments for `$entitlementGuildID` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $entitlementGuildID added?", "Assistant": "$entitlementGuildID was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $entitlementGuildID nativly to forgescipt?", "Assistant": "Yes, $entitlementGuildID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $entitlementID?", "Assistant": "Returns this entitlement's id\n\nExample usage:\n```js\n$entitlementID[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $entitlementID?", "Assistant": "Use `$entitlementID` like this:\n```js\n$entitlementID[]\n```\n\nThis function returns this entitlement's id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $entitlementID in forgescript?", "Assistant": "Yes, You use `$entitlementID` like this:\n```js\n$entitlementID[]\n```\n\nThis function returns this entitlement's id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $entitlementID?", "Assistant": "The arguments for `$entitlementID` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $entitlementID added?", "Assistant": "$entitlementID was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $entitlementID nativly to forgescipt?", "Assistant": "Yes, $entitlementID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $entitlementIsActive?", "Assistant": "Returns whether this entitlement is active\n\nExample usage:\n```js\n$entitlementIsActive[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $entitlementIsActive?", "Assistant": "Use `$entitlementIsActive` like this:\n```js\n$entitlementIsActive[]\n```\n\nThis function returns whether this entitlement is active."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $entitlementIsActive in forgescript?", "Assistant": "Yes, You use `$entitlementIsActive` like this:\n```js\n$entitlementIsActive[]\n```\n\nThis function returns whether this entitlement is active."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $entitlementIsActive?", "Assistant": "The arguments for `$entitlementIsActive` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $entitlementIsActive added?", "Assistant": "$entitlementIsActive was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $entitlementIsActive nativly to forgescipt?", "Assistant": "Yes, $entitlementIsActive is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $entitlementIsConsumed?", "Assistant": "Returns whether this entitlement is consumed\n\nExample usage:\n```js\n$entitlementIsConsumed[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $entitlementIsConsumed?", "Assistant": "Use `$entitlementIsConsumed` like this:\n```js\n$entitlementIsConsumed[]\n```\n\nThis function returns whether this entitlement is consumed."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $entitlementIsConsumed in forgescript?", "Assistant": "Yes, You use `$entitlementIsConsumed` like this:\n```js\n$entitlementIsConsumed[]\n```\n\nThis function returns whether this entitlement is consumed."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $entitlementIsConsumed?", "Assistant": "The arguments for `$entitlementIsConsumed` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $entitlementIsConsumed added?", "Assistant": "$entitlementIsConsumed was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $entitlementIsConsumed nativly to forgescipt?", "Assistant": "Yes, $entitlementIsConsumed is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $entitlementIsDeleted?", "Assistant": "Returns whether this entitlement is deleted\n\nExample usage:\n```js\n$entitlementIsDeleted[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $entitlementIsDeleted?", "Assistant": "Use `$entitlementIsDeleted` like this:\n```js\n$entitlementIsDeleted[]\n```\n\nThis function returns whether this entitlement is deleted."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $entitlementIsDeleted in forgescript?", "Assistant": "Yes, You use `$entitlementIsDeleted` like this:\n```js\n$entitlementIsDeleted[]\n```\n\nThis function returns whether this entitlement is deleted."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $entitlementIsDeleted?", "Assistant": "The arguments for `$entitlementIsDeleted` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $entitlementIsDeleted added?", "Assistant": "$entitlementIsDeleted was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $entitlementIsDeleted nativly to forgescipt?", "Assistant": "Yes, $entitlementIsDeleted is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $entitlementIsGuildSubscription?", "Assistant": "Returns whether this entitlement is for a guild\n\nExample usage:\n```js\n$entitlementIsGuildSubscription[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $entitlementIsGuildSubscription?", "Assistant": "Use `$entitlementIsGuildSubscription` like this:\n```js\n$entitlementIsGuildSubscription[]\n```\n\nThis function returns whether this entitlement is for a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $entitlementIsGuildSubscription in forgescript?", "Assistant": "Yes, You use `$entitlementIsGuildSubscription` like this:\n```js\n$entitlementIsGuildSubscription[]\n```\n\nThis function returns whether this entitlement is for a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $entitlementIsGuildSubscription?", "Assistant": "The arguments for `$entitlementIsGuildSubscription` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $entitlementIsGuildSubscription added?", "Assistant": "$entitlementIsGuildSubscription was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $entitlementIsGuildSubscription nativly to forgescipt?", "Assistant": "Yes, $entitlementIsGuildSubscription is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $entitlementIsUserSubscription?", "Assistant": "Returns whether this entitlement is for a user\n\nExample usage:\n```js\n$entitlementIsUserSubscription[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $entitlementIsUserSubscription?", "Assistant": "Use `$entitlementIsUserSubscription` like this:\n```js\n$entitlementIsUserSubscription[]\n```\n\nThis function returns whether this entitlement is for a user."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $entitlementIsUserSubscription in forgescript?", "Assistant": "Yes, You use `$entitlementIsUserSubscription` like this:\n```js\n$entitlementIsUserSubscription[]\n```\n\nThis function returns whether this entitlement is for a user."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $entitlementIsUserSubscription?", "Assistant": "The arguments for `$entitlementIsUserSubscription` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $entitlementIsUserSubscription added?", "Assistant": "$entitlementIsUserSubscription was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $entitlementIsUserSubscription nativly to forgescipt?", "Assistant": "Yes, $entitlementIsUserSubscription is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $entitlementSkuID?", "Assistant": "Returns this entitlement's sku id\n\nExample usage:\n```js\n$entitlementSkuID[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $entitlementSkuID?", "Assistant": "Use `$entitlementSkuID` like this:\n```js\n$entitlementSkuID[]\n```\n\nThis function returns this entitlement's sku id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $entitlementSkuID in forgescript?", "Assistant": "Yes, You use `$entitlementSkuID` like this:\n```js\n$entitlementSkuID[]\n```\n\nThis function returns this entitlement's sku id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $entitlementSkuID?", "Assistant": "The arguments for `$entitlementSkuID` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $entitlementSkuID added?", "Assistant": "$entitlementSkuID was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $entitlementSkuID nativly to forgescipt?", "Assistant": "Yes, $entitlementSkuID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $entitlementStartTimestamp?", "Assistant": "Returns the time at which this entitlement starts\n\nExample usage:\n```js\n$entitlementStartTimestamp[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $entitlementStartTimestamp?", "Assistant": "Use `$entitlementStartTimestamp` like this:\n```js\n$entitlementStartTimestamp[]\n```\n\nThis function returns the time at which this entitlement starts."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $entitlementStartTimestamp in forgescript?", "Assistant": "Yes, You use `$entitlementStartTimestamp` like this:\n```js\n$entitlementStartTimestamp[]\n```\n\nThis function returns the time at which this entitlement starts."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $entitlementStartTimestamp?", "Assistant": "The arguments for `$entitlementStartTimestamp` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $entitlementStartTimestamp added?", "Assistant": "$entitlementStartTimestamp was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $entitlementStartTimestamp nativly to forgescipt?", "Assistant": "Yes, $entitlementStartTimestamp is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $entitlementType?", "Assistant": "Returns this entitlement's type\n\nExample usage:\n```js\n$entitlementType[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $entitlementType?", "Assistant": "Use `$entitlementType` like this:\n```js\n$entitlementType[]\n```\n\nThis function returns this entitlement's type."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $entitlementType in forgescript?", "Assistant": "Yes, You use `$entitlementType` like this:\n```js\n$entitlementType[]\n```\n\nThis function returns this entitlement's type."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $entitlementType?", "Assistant": "The arguments for `$entitlementType` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $entitlementType added?", "Assistant": "$entitlementType was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $entitlementType nativly to forgescipt?", "Assistant": "Yes, $entitlementType is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $entitlementUserID?", "Assistant": "Returns this entitlement's user id\n\nExample usage:\n```js\n$entitlementUserID[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $entitlementUserID?", "Assistant": "Use `$entitlementUserID` like this:\n```js\n$entitlementUserID[]\n```\n\nThis function returns this entitlement's user id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $entitlementUserID in forgescript?", "Assistant": "Yes, You use `$entitlementUserID` like this:\n```js\n$entitlementUserID[]\n```\n\nThis function returns this entitlement's user id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $entitlementUserID?", "Assistant": "The arguments for `$entitlementUserID` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $entitlementUserID added?", "Assistant": "$entitlementUserID was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $entitlementUserID nativly to forgescipt?", "Assistant": "Yes, $entitlementUserID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $hasAllEntitlements?", "Assistant": "Checks whether this interaction user has all of the given entitlements\n\nExample usage:\n```js\n$hasAllEntitlements[entitlement_name_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $hasAllEntitlements?", "Assistant": "Use `$hasAllEntitlements` like this:\n```js\n$hasAllEntitlements[entitlement_name_example]\n```\n\nThis function checks whether this interaction user has all of the given entitlements."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $hasAllEntitlements in forgescript?", "Assistant": "Yes, You use `$hasAllEntitlements` like this:\n```js\n$hasAllEntitlements[entitlement_name_example]\n```\n\nThis function checks whether this interaction user has all of the given entitlements."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $hasAllEntitlements?", "Assistant": "The arguments for `$hasAllEntitlements` are as follows:\n\n- **entitlement name** (String): The name of the entitlements to validate (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $hasAllEntitlements added?", "Assistant": "$hasAllEntitlements was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $hasAllEntitlements nativly to forgescipt?", "Assistant": "Yes, $hasAllEntitlements is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $hasAnyEntitlement?", "Assistant": "Checks whether this interaction user has any of the given entitlements\n\nExample usage:\n```js\n$hasAnyEntitlement[entitlement_name_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $hasAnyEntitlement?", "Assistant": "Use `$hasAnyEntitlement` like this:\n```js\n$hasAnyEntitlement[entitlement_name_example]\n```\n\nThis function checks whether this interaction user has any of the given entitlements."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $hasAnyEntitlement in forgescript?", "Assistant": "Yes, You use `$hasAnyEntitlement` like this:\n```js\n$hasAnyEntitlement[entitlement_name_example]\n```\n\nThis function checks whether this interaction user has any of the given entitlements."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $hasAnyEntitlement?", "Assistant": "The arguments for `$hasAnyEntitlement` are as follows:\n\n- **entitlement name** (String): The name of the entitlements to validate (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $hasAnyEntitlement added?", "Assistant": "$hasAnyEntitlement was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $hasAnyEntitlement nativly to forgescipt?", "Assistant": "Yes, $hasAnyEntitlement is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $hasEntitlement?", "Assistant": "Checks whether this interaction user has given entitlement\n\nExample usage:\n```js\n$hasEntitlement[entitlement_name_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $hasEntitlement?", "Assistant": "Use `$hasEntitlement` like this:\n```js\n$hasEntitlement[entitlement_name_example]\n```\n\nThis function checks whether this interaction user has given entitlement."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $hasEntitlement in forgescript?", "Assistant": "Yes, You use `$hasEntitlement` like this:\n```js\n$hasEntitlement[entitlement_name_example]\n```\n\nThis function checks whether this interaction user has given entitlement."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $hasEntitlement?", "Assistant": "The arguments for `$hasEntitlement` are as follows:\n\n- **entitlement name** (String): The name of the entitlement to validate (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $hasEntitlement added?", "Assistant": "$hasEntitlement was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $hasEntitlement nativly to forgescipt?", "Assistant": "Yes, $hasEntitlement is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $appendFile?", "Assistant": "Appends text to a file\n\nExample usage:\n```js\n$appendFile[path_example;text_example;encoding_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $appendFile?", "Assistant": "Use `$appendFile` like this:\n```js\n$appendFile[path_example;text_example;encoding_example]\n```\n\nThis function appends text to a file."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $appendFile in forgescript?", "Assistant": "Yes, You use `$appendFile` like this:\n```js\n$appendFile[path_example;text_example;encoding_example]\n```\n\nThis function appends text to a file."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $appendFile?", "Assistant": "The arguments for `$appendFile` are as follows:\n\n- **path** (String): The path to the file (Required)\n- **text** (String): The text to append (Required)\n- **encoding** (String): The encoding to use for text (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $appendFile added?", "Assistant": "$appendFile was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $appendFile nativly to forgescipt?", "Assistant": "Yes, $appendFile is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $copyFile?", "Assistant": "Copies given path to another path\n\nExample usage:\n```js\n$copyFile[path_example;destination_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $copyFile?", "Assistant": "Use `$copyFile` like this:\n```js\n$copyFile[path_example;destination_example]\n```\n\nThis function copies given path to another path."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $copyFile in forgescript?", "Assistant": "Yes, You use `$copyFile` like this:\n```js\n$copyFile[path_example;destination_example]\n```\n\nThis function copies given path to another path."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $copyFile?", "Assistant": "The arguments for `$copyFile` are as follows:\n\n- **path** (String): The path to make a copy of (Required)\n- **destination** (String): The output path to copy to (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $copyFile added?", "Assistant": "$copyFile was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $copyFile nativly to forgescipt?", "Assistant": "Yes, $copyFile is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $deleteFile?", "Assistant": "Deletes a file\n\nExample usage:\n```js\n$deleteFile[path_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $deleteFile?", "Assistant": "Use `$deleteFile` like this:\n```js\n$deleteFile[path_example]\n```\n\nThis function deletes a file."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteFile in forgescript?", "Assistant": "Yes, You use `$deleteFile` like this:\n```js\n$deleteFile[path_example]\n```\n\nThis function deletes a file."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $deleteFile?", "Assistant": "The arguments for `$deleteFile` are as follows:\n\n- **path** (String): The path to the file (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $deleteFile added?", "Assistant": "$deleteFile was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteFile nativly to forgescipt?", "Assistant": "Yes, $deleteFile is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $fileAccessedAt?", "Assistant": "Gets last time a file was accessed\n\nExample usage:\n```js\n$fileAccessedAt[path_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $fileAccessedAt?", "Assistant": "Use `$fileAccessedAt` like this:\n```js\n$fileAccessedAt[path_example]\n```\n\nThis function gets last time a file was accessed."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $fileAccessedAt in forgescript?", "Assistant": "Yes, You use `$fileAccessedAt` like this:\n```js\n$fileAccessedAt[path_example]\n```\n\nThis function gets last time a file was accessed."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $fileAccessedAt?", "Assistant": "The arguments for `$fileAccessedAt` are as follows:\n\n- **path** (String): The path to file or directory (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $fileAccessedAt added?", "Assistant": "$fileAccessedAt was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $fileAccessedAt nativly to forgescipt?", "Assistant": "Yes, $fileAccessedAt is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $fileBlockCount?", "Assistant": "Gets block count of a file or directory\n\nExample usage:\n```js\n$fileBlockCount[path_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $fileBlockCount?", "Assistant": "Use `$fileBlockCount` like this:\n```js\n$fileBlockCount[path_example]\n```\n\nThis function gets block count of a file or directory."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $fileBlockCount in forgescript?", "Assistant": "Yes, You use `$fileBlockCount` like this:\n```js\n$fileBlockCount[path_example]\n```\n\nThis function gets block count of a file or directory."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $fileBlockCount?", "Assistant": "The arguments for `$fileBlockCount` are as follows:\n\n- **path** (String): The path to file or directory (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $fileBlockCount added?", "Assistant": "$fileBlockCount was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $fileBlockCount nativly to forgescipt?", "Assistant": "Yes, $fileBlockCount is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $fileBlockSize?", "Assistant": "Gets block size of a file or directory\n\nExample usage:\n```js\n$fileBlockSize[path_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $fileBlockSize?", "Assistant": "Use `$fileBlockSize` like this:\n```js\n$fileBlockSize[path_example]\n```\n\nThis function gets block size of a file or directory."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $fileBlockSize in forgescript?", "Assistant": "Yes, You use `$fileBlockSize` like this:\n```js\n$fileBlockSize[path_example]\n```\n\nThis function gets block size of a file or directory."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $fileBlockSize?", "Assistant": "The arguments for `$fileBlockSize` are as follows:\n\n- **path** (String): The path to file or directory (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $fileBlockSize added?", "Assistant": "$fileBlockSize was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $fileBlockSize nativly to forgescipt?", "Assistant": "Yes, $fileBlockSize is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $fileChangedAt?", "Assistant": "Gets last time a file was changed\n\nExample usage:\n```js\n$fileChangedAt[path_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $fileChangedAt?", "Assistant": "Use `$fileChangedAt` like this:\n```js\n$fileChangedAt[path_example]\n```\n\nThis function gets last time a file was changed."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $fileChangedAt in forgescript?", "Assistant": "Yes, You use `$fileChangedAt` like this:\n```js\n$fileChangedAt[path_example]\n```\n\nThis function gets last time a file was changed."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $fileChangedAt?", "Assistant": "The arguments for `$fileChangedAt` are as follows:\n\n- **path** (String): The path to file or directory (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $fileChangedAt added?", "Assistant": "$fileChangedAt was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $fileChangedAt nativly to forgescipt?", "Assistant": "Yes, $fileChangedAt is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $fileCreatedAt?", "Assistant": "Gets timestamp of a file or directory\n\nExample usage:\n```js\n$fileCreatedAt[path_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $fileCreatedAt?", "Assistant": "Use `$fileCreatedAt` like this:\n```js\n$fileCreatedAt[path_example]\n```\n\nThis function gets timestamp of a file or directory."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $fileCreatedAt in forgescript?", "Assistant": "Yes, You use `$fileCreatedAt` like this:\n```js\n$fileCreatedAt[path_example]\n```\n\nThis function gets timestamp of a file or directory."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $fileCreatedAt?", "Assistant": "The arguments for `$fileCreatedAt` are as follows:\n\n- **path** (String): The path to file or directory (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $fileCreatedAt added?", "Assistant": "$fileCreatedAt was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $fileCreatedAt nativly to forgescipt?", "Assistant": "Yes, $fileCreatedAt is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $fileExists?", "Assistant": "Checks whether a path exists\n\nExample usage:\n```js\n$fileExists[path_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $fileExists?", "Assistant": "Use `$fileExists` like this:\n```js\n$fileExists[path_example]\n```\n\nThis function checks whether a path exists."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $fileExists in forgescript?", "Assistant": "Yes, You use `$fileExists` like this:\n```js\n$fileExists[path_example]\n```\n\nThis function checks whether a path exists."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $fileExists?", "Assistant": "The arguments for `$fileExists` are as follows:\n\n- **path** (String): The path to file or directory (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $fileExists added?", "Assistant": "$fileExists was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $fileExists nativly to forgescipt?", "Assistant": "Yes, $fileExists is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $fileModifiedAt?", "Assistant": "Gets timestamp of a file or directory when it was last modified\n\nExample usage:\n```js\n$fileModifiedAt[path_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $fileModifiedAt?", "Assistant": "Use `$fileModifiedAt` like this:\n```js\n$fileModifiedAt[path_example]\n```\n\nThis function gets timestamp of a file or directory when it was last modified."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $fileModifiedAt in forgescript?", "Assistant": "Yes, You use `$fileModifiedAt` like this:\n```js\n$fileModifiedAt[path_example]\n```\n\nThis function gets timestamp of a file or directory when it was last modified."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $fileModifiedAt?", "Assistant": "The arguments for `$fileModifiedAt` are as follows:\n\n- **path** (String): The path to file or directory (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $fileModifiedAt added?", "Assistant": "$fileModifiedAt was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $fileModifiedAt nativly to forgescipt?", "Assistant": "Yes, $fileModifiedAt is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $fileSize?", "Assistant": "Gets size of a file or directory in bytes\n\nExample usage:\n```js\n$fileSize[path_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $fileSize?", "Assistant": "Use `$fileSize` like this:\n```js\n$fileSize[path_example]\n```\n\nThis function gets size of a file or directory in bytes."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $fileSize in forgescript?", "Assistant": "Yes, You use `$fileSize` like this:\n```js\n$fileSize[path_example]\n```\n\nThis function gets size of a file or directory in bytes."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $fileSize?", "Assistant": "The arguments for `$fileSize` are as follows:\n\n- **path** (String): The path to file or directory (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $fileSize added?", "Assistant": "$fileSize was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $fileSize nativly to forgescipt?", "Assistant": "Yes, $fileSize is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isDirectory?", "Assistant": "Checks whether a path is a directory\n\nExample usage:\n```js\n$isDirectory[path_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isDirectory?", "Assistant": "Use `$isDirectory` like this:\n```js\n$isDirectory[path_example]\n```\n\nThis function checks whether a path is a directory."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isDirectory in forgescript?", "Assistant": "Yes, You use `$isDirectory` like this:\n```js\n$isDirectory[path_example]\n```\n\nThis function checks whether a path is a directory."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isDirectory?", "Assistant": "The arguments for `$isDirectory` are as follows:\n\n- **path** (String): The path to file or directory (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isDirectory added?", "Assistant": "$isDirectory was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isDirectory nativly to forgescipt?", "Assistant": "Yes, $isDirectory is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isFile?", "Assistant": "Checks whether a path is a file\n\nExample usage:\n```js\n$isFile[path_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isFile?", "Assistant": "Use `$isFile` like this:\n```js\n$isFile[path_example]\n```\n\nThis function checks whether a path is a file."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isFile in forgescript?", "Assistant": "Yes, You use `$isFile` like this:\n```js\n$isFile[path_example]\n```\n\nThis function checks whether a path is a file."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isFile?", "Assistant": "The arguments for `$isFile` are as follows:\n\n- **path** (String): The path to file or directory (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isFile added?", "Assistant": "$isFile was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isFile nativly to forgescipt?", "Assistant": "Yes, $isFile is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isSymbolicLink?", "Assistant": "Checks whether a path is a symbolic link\n\nExample usage:\n```js\n$isSymbolicLink[path_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isSymbolicLink?", "Assistant": "Use `$isSymbolicLink` like this:\n```js\n$isSymbolicLink[path_example]\n```\n\nThis function checks whether a path is a symbolic link."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isSymbolicLink in forgescript?", "Assistant": "Yes, You use `$isSymbolicLink` like this:\n```js\n$isSymbolicLink[path_example]\n```\n\nThis function checks whether a path is a symbolic link."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isSymbolicLink?", "Assistant": "The arguments for `$isSymbolicLink` are as follows:\n\n- **path** (String): The path to file or directory (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isSymbolicLink added?", "Assistant": "$isSymbolicLink was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isSymbolicLink nativly to forgescipt?", "Assistant": "Yes, $isSymbolicLink is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $mkdir?", "Assistant": "Creates a directory\n\nExample usage:\n```js\n$mkdir[path_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $mkdir?", "Assistant": "Use `$mkdir` like this:\n```js\n$mkdir[path_example]\n```\n\nThis function creates a directory."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $mkdir in forgescript?", "Assistant": "Yes, You use `$mkdir` like this:\n```js\n$mkdir[path_example]\n```\n\nThis function creates a directory."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $mkdir?", "Assistant": "The arguments for `$mkdir` are as follows:\n\n- **path** (String): The path for the dir (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $mkdir added?", "Assistant": "$mkdir was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $mkdir nativly to forgescipt?", "Assistant": "Yes, $mkdir is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $mktdir?", "Assistant": "Creates a temporary directory\n\nExample usage:\n```js\n$mktdir[prefix_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $mktdir?", "Assistant": "Use `$mktdir` like this:\n```js\n$mktdir[prefix_example]\n```\n\nThis function creates a temporary directory."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $mktdir in forgescript?", "Assistant": "Yes, You use `$mktdir` like this:\n```js\n$mktdir[prefix_example]\n```\n\nThis function creates a temporary directory."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $mktdir?", "Assistant": "The arguments for `$mktdir` are as follows:\n\n- **prefix** (String): The prefix for the temp dir (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $mktdir added?", "Assistant": "$mktdir was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $mktdir nativly to forgescipt?", "Assistant": "Yes, $mktdir is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $moveFile?", "Assistant": "Moves a path to another\n\nExample usage:\n```js\n$moveFile[path_example;destination_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $moveFile?", "Assistant": "Use `$moveFile` like this:\n```js\n$moveFile[path_example;destination_example]\n```\n\nThis function moves a path to another."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $moveFile in forgescript?", "Assistant": "Yes, You use `$moveFile` like this:\n```js\n$moveFile[path_example;destination_example]\n```\n\nThis function moves a path to another."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $moveFile?", "Assistant": "The arguments for `$moveFile` are as follows:\n\n- **path** (String): The path to make to move (Required)\n- **destination** (String): The output path (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $moveFile added?", "Assistant": "$moveFile was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $moveFile nativly to forgescipt?", "Assistant": "Yes, $moveFile is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $readDir?", "Assistant": "Reads the contents of a directory\n\nExample usage:\n```js\n$readDir[path_example;separator_example;encoding_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $readDir?", "Assistant": "Use `$readDir` like this:\n```js\n$readDir[path_example;separator_example;encoding_example]\n```\n\nThis function reads the contents of a directory."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $readDir in forgescript?", "Assistant": "Yes, You use `$readDir` like this:\n```js\n$readDir[path_example;separator_example;encoding_example]\n```\n\nThis function reads the contents of a directory."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $readDir?", "Assistant": "The arguments for `$readDir` are as follows:\n\n- **path** (String): The path to the directory (Required)\n- **separator** (String): The separator to use for each result (Optional)\n- **encoding** (String): The encoding to use for the result (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $readDir added?", "Assistant": "$readDir was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $readDir nativly to forgescipt?", "Assistant": "Yes, $readDir is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $readFile?", "Assistant": "Reads text from a file\n\nExample usage:\n```js\n$readFile[path_example;encoding_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $readFile?", "Assistant": "Use `$readFile` like this:\n```js\n$readFile[path_example;encoding_example]\n```\n\nThis function reads text from a file."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $readFile in forgescript?", "Assistant": "Yes, You use `$readFile` like this:\n```js\n$readFile[path_example;encoding_example]\n```\n\nThis function reads text from a file."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $readFile?", "Assistant": "The arguments for `$readFile` are as follows:\n\n- **path** (String): The path to the file (Required)\n- **encoding** (String): The encoding to use for the text (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $readFile added?", "Assistant": "$readFile was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $readFile nativly to forgescipt?", "Assistant": "Yes, $readFile is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $renameFile?", "Assistant": "Renames a file\n\nExample usage:\n```js\n$renameFile[old_path_example;new_path_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $renameFile?", "Assistant": "Use `$renameFile` like this:\n```js\n$renameFile[old_path_example;new_path_example]\n```\n\nThis function renames a file."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $renameFile in forgescript?", "Assistant": "Yes, You use `$renameFile` like this:\n```js\n$renameFile[old_path_example;new_path_example]\n```\n\nThis function renames a file."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $renameFile?", "Assistant": "The arguments for `$renameFile` are as follows:\n\n- **old path** (String): The old path to the file (Required)\n- **new path** (String): The new path to the file (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $renameFile added?", "Assistant": "$renameFile was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $renameFile nativly to forgescipt?", "Assistant": "Yes, $renameFile is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $symlink?", "Assistant": "Creates a symbolic link to another path\n\nExample usage:\n```js\n$symlink[path_example;other_path_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $symlink?", "Assistant": "Use `$symlink` like this:\n```js\n$symlink[path_example;other_path_example]\n```\n\nThis function creates a symbolic link to another path."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $symlink in forgescript?", "Assistant": "Yes, You use `$symlink` like this:\n```js\n$symlink[path_example;other_path_example]\n```\n\nThis function creates a symbolic link to another path."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $symlink?", "Assistant": "The arguments for `$symlink` are as follows:\n\n- **path** (String): The path to make to use as reference (Required)\n- **other path** (String): The other path to link (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $symlink added?", "Assistant": "$symlink was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $symlink nativly to forgescipt?", "Assistant": "Yes, $symlink is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $truncateFile?", "Assistant": "Truncates text in a file to given length\n\nExample usage:\n```js\n$truncateFile[path_example;73]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $truncateFile?", "Assistant": "Use `$truncateFile` like this:\n```js\n$truncateFile[path_example;73]\n```\n\nThis function truncates text in a file to given length."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $truncateFile in forgescript?", "Assistant": "Yes, You use `$truncateFile` like this:\n```js\n$truncateFile[path_example;73]\n```\n\nThis function truncates text in a file to given length."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $truncateFile?", "Assistant": "The arguments for `$truncateFile` are as follows:\n\n- **path** (String): The path to the file (Required)\n- **length** (Number): The new length for the file (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $truncateFile added?", "Assistant": "$truncateFile was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $truncateFile nativly to forgescipt?", "Assistant": "Yes, $truncateFile is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $writeFile?", "Assistant": "Writes text to a file\n\nExample usage:\n```js\n$writeFile[path_example;text_example;encoding_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $writeFile?", "Assistant": "Use `$writeFile` like this:\n```js\n$writeFile[path_example;text_example;encoding_example]\n```\n\nThis function writes text to a file."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $writeFile in forgescript?", "Assistant": "Yes, You use `$writeFile` like this:\n```js\n$writeFile[path_example;text_example;encoding_example]\n```\n\nThis function writes text to a file."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $writeFile?", "Assistant": "The arguments for `$writeFile` are as follows:\n\n- **path** (String): The path to the file (Required)\n- **text** (String): The text to write (Required)\n- **encoding** (String): The encoding to use for text (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $writeFile added?", "Assistant": "$writeFile was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $writeFile nativly to forgescipt?", "Assistant": "Yes, $writeFile is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $bold?", "Assistant": "Makes given text bold\n\nExample usage:\n```js\n$bold[text_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $bold?", "Assistant": "Use `$bold` like this:\n```js\n$bold[text_example]\n```\n\nThis function makes given text bold."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $bold in forgescript?", "Assistant": "Yes, You use `$bold` like this:\n```js\n$bold[text_example]\n```\n\nThis function makes given text bold."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $bold?", "Assistant": "The arguments for `$bold` are as follows:\n\n- **text** (String): The text to make bold, this will attempt to escape all * (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $bold added?", "Assistant": "$bold was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $bold nativly to forgescipt?", "Assistant": "Yes, $bold is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $codeBlock?", "Assistant": "Creates a code block with given text\n\nExample usage:\n```js\n$codeBlock[text_example;lang_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $codeBlock?", "Assistant": "Use `$codeBlock` like this:\n```js\n$codeBlock[text_example;lang_example]\n```\n\nThis function creates a code block with given text."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $codeBlock in forgescript?", "Assistant": "Yes, You use `$codeBlock` like this:\n```js\n$codeBlock[text_example;lang_example]\n```\n\nThis function creates a code block with given text."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $codeBlock?", "Assistant": "The arguments for `$codeBlock` are as follows:\n\n- **text** (String): The text to create block with, this will attempt to escape all ` (Required)\n- **lang** (String): The language to give to this code block (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $codeBlock added?", "Assistant": "$codeBlock was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $codeBlock nativly to forgescipt?", "Assistant": "Yes, $codeBlock is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $hyperlink?", "Assistant": "Creates an hyperlink text\n\nExample usage:\n```js\n$hyperlink[text_example;url_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $hyperlink?", "Assistant": "Use `$hyperlink` like this:\n```js\n$hyperlink[text_example;url_example]\n```\n\nThis function creates an hyperlink text."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $hyperlink in forgescript?", "Assistant": "Yes, You use `$hyperlink` like this:\n```js\n$hyperlink[text_example;url_example]\n```\n\nThis function creates an hyperlink text."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $hyperlink?", "Assistant": "The arguments for `$hyperlink` are as follows:\n\n- **text** (String): The text to make hyperlink (Required)\n- **url** (String): The url to use for hyperlink (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $hyperlink added?", "Assistant": "$hyperlink was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $hyperlink nativly to forgescipt?", "Assistant": "Yes, $hyperlink is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $inlineCode?", "Assistant": "Adds backticks to text\n\nExample usage:\n```js\n$inlineCode[text_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $inlineCode?", "Assistant": "Use `$inlineCode` like this:\n```js\n$inlineCode[text_example]\n```\n\nThis function adds backticks to text."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $inlineCode in forgescript?", "Assistant": "Yes, You use `$inlineCode` like this:\n```js\n$inlineCode[text_example]\n```\n\nThis function adds backticks to text."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $inlineCode?", "Assistant": "The arguments for `$inlineCode` are as follows:\n\n- **text** (String): The text to mark down, this will attempt to escape all ` (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $inlineCode added?", "Assistant": "$inlineCode was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $inlineCode nativly to forgescipt?", "Assistant": "Yes, $inlineCode is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $italic?", "Assistant": "Makes given text italic\n\nExample usage:\n```js\n$italic[text_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $italic?", "Assistant": "Use `$italic` like this:\n```js\n$italic[text_example]\n```\n\nThis function makes given text italic."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $italic in forgescript?", "Assistant": "Yes, You use `$italic` like this:\n```js\n$italic[text_example]\n```\n\nThis function makes given text italic."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $italic?", "Assistant": "The arguments for `$italic` are as follows:\n\n- **text** (String): The text to make italic, this will attempt to escape all _ and * (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $italic added?", "Assistant": "$italic was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $italic nativly to forgescipt?", "Assistant": "Yes, $italic is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $spoiler?", "Assistant": "Makes given text a spoiler\n\nExample usage:\n```js\n$spoiler[text_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $spoiler?", "Assistant": "Use `$spoiler` like this:\n```js\n$spoiler[text_example]\n```\n\nThis function makes given text a spoiler."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $spoiler in forgescript?", "Assistant": "Yes, You use `$spoiler` like this:\n```js\n$spoiler[text_example]\n```\n\nThis function makes given text a spoiler."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $spoiler?", "Assistant": "The arguments for `$spoiler` are as follows:\n\n- **text** (String): The text to make spoiler, this will attempt to escape all | (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $spoiler added?", "Assistant": "$spoiler was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $spoiler nativly to forgescipt?", "Assistant": "Yes, $spoiler is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $strikethrough?", "Assistant": "Makes given text strikethrough\n\nExample usage:\n```js\n$strikethrough[text_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $strikethrough?", "Assistant": "Use `$strikethrough` like this:\n```js\n$strikethrough[text_example]\n```\n\nThis function makes given text strikethrough."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $strikethrough in forgescript?", "Assistant": "Yes, You use `$strikethrough` like this:\n```js\n$strikethrough[text_example]\n```\n\nThis function makes given text strikethrough."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $strikethrough?", "Assistant": "The arguments for `$strikethrough` are as follows:\n\n- **text** (String): The text to make strikethrough, this will attempt to escape all ~ (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $strikethrough added?", "Assistant": "$strikethrough was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $strikethrough nativly to forgescipt?", "Assistant": "Yes, $strikethrough is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $underscore?", "Assistant": "Adds underscore to text\n\nExample usage:\n```js\n$underscore[text_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $underscore?", "Assistant": "Use `$underscore` like this:\n```js\n$underscore[text_example]\n```\n\nThis function adds underscore to text."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $underscore in forgescript?", "Assistant": "Yes, You use `$underscore` like this:\n```js\n$underscore[text_example]\n```\n\nThis function adds underscore to text."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $underscore?", "Assistant": "The arguments for `$underscore` are as follows:\n\n- **text** (String): The text to add underscore to, this will attempt to escape all _ (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $underscore added?", "Assistant": "$underscore was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $underscore nativly to forgescipt?", "Assistant": "Yes, $underscore is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $createGuild?", "Assistant": "Creates a new guild, returns guild id\n\nExample usage:\n```js\n$createGuild[name_example;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $createGuild?", "Assistant": "Use `$createGuild` like this:\n```js\n$createGuild[name_example;data]\n```\n\nThis function creates a new guild, returns guild id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $createGuild in forgescript?", "Assistant": "Yes, You use `$createGuild` like this:\n```js\n$createGuild[name_example;data]\n```\n\nThis function creates a new guild, returns guild id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $createGuild?", "Assistant": "The arguments for `$createGuild` are as follows:\n\n- **name** (String): The name for the guild (Required)\n- **icon** (URL): The icon for the guild (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $createGuild added?", "Assistant": "$createGuild was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $createGuild nativly to forgescipt?", "Assistant": "Yes, $createGuild is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $createGuildTemplate?", "Assistant": "Creates template for a guild, returns template code\n\nExample usage:\n```js\n$createGuildTemplate[data;name_example;description_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $createGuildTemplate?", "Assistant": "Use `$createGuildTemplate` like this:\n```js\n$createGuildTemplate[data;name_example;description_example]\n```\n\nThis function creates template for a guild, returns template code."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $createGuildTemplate in forgescript?", "Assistant": "Yes, You use `$createGuildTemplate` like this:\n```js\n$createGuildTemplate[data;name_example;description_example]\n```\n\nThis function creates template for a guild, returns template code."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $createGuildTemplate?", "Assistant": "The arguments for `$createGuildTemplate` are as follows:\n\n- **guild ID** (Guild): The guild to create template on (Required)\n- **name** (String): The name for the template (Required)\n- **description** (String): The description for the template (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $createGuildTemplate added?", "Assistant": "$createGuildTemplate was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $createGuildTemplate nativly to forgescipt?", "Assistant": "Yes, $createGuildTemplate is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $deleteGuild?", "Assistant": "Deletes a guild, returns bool\n\nExample usage:\n```js\n$deleteGuild[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $deleteGuild?", "Assistant": "Use `$deleteGuild` like this:\n```js\n$deleteGuild[data]\n```\n\nThis function deletes a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteGuild in forgescript?", "Assistant": "Yes, You use `$deleteGuild` like this:\n```js\n$deleteGuild[data]\n```\n\nThis function deletes a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $deleteGuild?", "Assistant": "The arguments for `$deleteGuild` are as follows:\n\n- **guild ID** (Guild): The guild to delete (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $deleteGuild added?", "Assistant": "$deleteGuild was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteGuild nativly to forgescipt?", "Assistant": "Yes, $deleteGuild is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $deleteGuildApplicationCommands?", "Assistant": "Deletes all guild commands of your bot from a guild\n\nExample usage:\n```js\n$deleteGuildApplicationCommands[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $deleteGuildApplicationCommands?", "Assistant": "Use `$deleteGuildApplicationCommands` like this:\n```js\n$deleteGuildApplicationCommands[data]\n```\n\nThis function deletes all guild commands of your bot from a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteGuildApplicationCommands in forgescript?", "Assistant": "Yes, You use `$deleteGuildApplicationCommands` like this:\n```js\n$deleteGuildApplicationCommands[data]\n```\n\nThis function deletes all guild commands of your bot from a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $deleteGuildApplicationCommands?", "Assistant": "The arguments for `$deleteGuildApplicationCommands` are as follows:\n\n- **guild ID** (Guild): The guild to delete commands from (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $deleteGuildApplicationCommands added?", "Assistant": "$deleteGuildApplicationCommands was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteGuildApplicationCommands nativly to forgescipt?", "Assistant": "Yes, $deleteGuildApplicationCommands is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $deleteGuildTemplate?", "Assistant": "Deletes template from a guild, returns bool\n\nExample usage:\n```js\n$deleteGuildTemplate[template_code_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $deleteGuildTemplate?", "Assistant": "Use `$deleteGuildTemplate` like this:\n```js\n$deleteGuildTemplate[template_code_example]\n```\n\nThis function deletes template from a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteGuildTemplate in forgescript?", "Assistant": "Yes, You use `$deleteGuildTemplate` like this:\n```js\n$deleteGuildTemplate[template_code_example]\n```\n\nThis function deletes template from a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $deleteGuildTemplate?", "Assistant": "The arguments for `$deleteGuildTemplate` are as follows:\n\n- **template code** (String): The code of the template to delete (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $deleteGuildTemplate added?", "Assistant": "$deleteGuildTemplate was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteGuildTemplate nativly to forgescipt?", "Assistant": "Yes, $deleteGuildTemplate is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $editGuildTemplate?", "Assistant": "Edits template on a guild, returns bool\n\nExample usage:\n```js\n$editGuildTemplate[template_code_example;name_example;description_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $editGuildTemplate?", "Assistant": "Use `$editGuildTemplate` like this:\n```js\n$editGuildTemplate[template_code_example;name_example;description_example]\n```\n\nThis function edits template on a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editGuildTemplate in forgescript?", "Assistant": "Yes, You use `$editGuildTemplate` like this:\n```js\n$editGuildTemplate[template_code_example;name_example;description_example]\n```\n\nThis function edits template on a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $editGuildTemplate?", "Assistant": "The arguments for `$editGuildTemplate` are as follows:\n\n- **template code** (String): The code of the template to edit (Required)\n- **name** (String): The new name for the template (Optional)\n- **description** (String): The new description for the template (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $editGuildTemplate added?", "Assistant": "$editGuildTemplate was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editGuildTemplate nativly to forgescipt?", "Assistant": "Yes, $editGuildTemplate is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $getGuildTemplate?", "Assistant": "Gets the template of a guild\n\nExample usage:\n```js\n$getGuildTemplate[template_code_example;name]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $getGuildTemplate?", "Assistant": "Use `$getGuildTemplate` like this:\n```js\n$getGuildTemplate[template_code_example;name]\n```\n\nThis function gets the template of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $getGuildTemplate in forgescript?", "Assistant": "Yes, You use `$getGuildTemplate` like this:\n```js\n$getGuildTemplate[template_code_example;name]\n```\n\nThis function gets the template of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $getGuildTemplate?", "Assistant": "The arguments for `$getGuildTemplate` are as follows:\n\n- **template code** (String): The code of the template to get (Required)\n- **property** (Enum): The property of the template to return (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $getGuildTemplate added?", "Assistant": "$getGuildTemplate was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $getGuildTemplate nativly to forgescipt?", "Assistant": "Yes, $getGuildTemplate is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildAfkChannelID?", "Assistant": "Returns the server's afk channel ID\n\nExample usage:\n```js\n$guildAfkChannelID[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildAfkChannelID?", "Assistant": "Use `$guildAfkChannelID` like this:\n```js\n$guildAfkChannelID[data]\n```\n\nThis function returns the server's afk channel id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildAfkChannelID in forgescript?", "Assistant": "Yes, You use `$guildAfkChannelID` like this:\n```js\n$guildAfkChannelID[data]\n```\n\nThis function returns the server's afk channel id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildAfkChannelID?", "Assistant": "The arguments for `$guildAfkChannelID` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildAfkChannelID added?", "Assistant": "$guildAfkChannelID was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildAfkChannelID nativly to forgescipt?", "Assistant": "Yes, $guildAfkChannelID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildAfkTimeout?", "Assistant": "Returns the server's afk timeout\n\nExample usage:\n```js\n$guildAfkTimeout[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildAfkTimeout?", "Assistant": "Use `$guildAfkTimeout` like this:\n```js\n$guildAfkTimeout[data]\n```\n\nThis function returns the server's afk timeout."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildAfkTimeout in forgescript?", "Assistant": "Yes, You use `$guildAfkTimeout` like this:\n```js\n$guildAfkTimeout[data]\n```\n\nThis function returns the server's afk timeout."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildAfkTimeout?", "Assistant": "The arguments for `$guildAfkTimeout` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildAfkTimeout added?", "Assistant": "$guildAfkTimeout was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildAfkTimeout nativly to forgescipt?", "Assistant": "Yes, $guildAfkTimeout is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildApproximateMemberCount?", "Assistant": "Returns the approximated member count\n\nExample usage:\n```js\n$guildApproximateMemberCount[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildApproximateMemberCount?", "Assistant": "Use `$guildApproximateMemberCount` like this:\n```js\n$guildApproximateMemberCount[data]\n```\n\nThis function returns the approximated member count."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildApproximateMemberCount in forgescript?", "Assistant": "Yes, You use `$guildApproximateMemberCount` like this:\n```js\n$guildApproximateMemberCount[data]\n```\n\nThis function returns the approximated member count."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildApproximateMemberCount?", "Assistant": "The arguments for `$guildApproximateMemberCount` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildApproximateMemberCount added?", "Assistant": "$guildApproximateMemberCount was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildApproximateMemberCount nativly to forgescipt?", "Assistant": "Yes, $guildApproximateMemberCount is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildApproximatePresenceCount?", "Assistant": "Returns the approximated presence count\n\nExample usage:\n```js\n$guildApproximatePresenceCount[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildApproximatePresenceCount?", "Assistant": "Use `$guildApproximatePresenceCount` like this:\n```js\n$guildApproximatePresenceCount[data]\n```\n\nThis function returns the approximated presence count."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildApproximatePresenceCount in forgescript?", "Assistant": "Yes, You use `$guildApproximatePresenceCount` like this:\n```js\n$guildApproximatePresenceCount[data]\n```\n\nThis function returns the approximated presence count."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildApproximatePresenceCount?", "Assistant": "The arguments for `$guildApproximatePresenceCount` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildApproximatePresenceCount added?", "Assistant": "$guildApproximatePresenceCount was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildApproximatePresenceCount nativly to forgescipt?", "Assistant": "Yes, $guildApproximatePresenceCount is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildAutomodRules?", "Assistant": "Returns all automod rules of a guild\n\nExample usage:\n```js\n$guildAutomodRules[data;exemptRoles;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildAutomodRules?", "Assistant": "Use `$guildAutomodRules` like this:\n```js\n$guildAutomodRules[data;exemptRoles;separator_example]\n```\n\nThis function returns all automod rules of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildAutomodRules in forgescript?", "Assistant": "Yes, You use `$guildAutomodRules` like this:\n```js\n$guildAutomodRules[data;exemptRoles;separator_example]\n```\n\nThis function returns all automod rules of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildAutomodRules?", "Assistant": "The arguments for `$guildAutomodRules` are as follows:\n\n- **guild ID** (Guild): The guild to get automod rules from (Required)\n- **property** (Enum): The property of each automod rule to return (Optional)\n- **separator** (String): The separator to use for each property (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildAutomodRules added?", "Assistant": "$guildAutomodRules was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildAutomodRules nativly to forgescipt?", "Assistant": "Yes, $guildAutomodRules is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildAvailable?", "Assistant": "Returns whether the server is available\n\nExample usage:\n```js\n$guildAvailable[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildAvailable?", "Assistant": "Use `$guildAvailable` like this:\n```js\n$guildAvailable[data]\n```\n\nThis function returns whether the server is available."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildAvailable in forgescript?", "Assistant": "Yes, You use `$guildAvailable` like this:\n```js\n$guildAvailable[data]\n```\n\nThis function returns whether the server is available."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildAvailable?", "Assistant": "The arguments for `$guildAvailable` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildAvailable added?", "Assistant": "$guildAvailable was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildAvailable nativly to forgescipt?", "Assistant": "Yes, $guildAvailable is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildBannedMembers?", "Assistant": "Returns banned member ids of a guild\n\nExample usage:\n```js\n$guildBannedMembers[data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildBannedMembers?", "Assistant": "Use `$guildBannedMembers` like this:\n```js\n$guildBannedMembers[data;separator_example]\n```\n\nThis function returns banned member ids of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildBannedMembers in forgescript?", "Assistant": "Yes, You use `$guildBannedMembers` like this:\n```js\n$guildBannedMembers[data;separator_example]\n```\n\nThis function returns banned member ids of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildBannedMembers?", "Assistant": "The arguments for `$guildBannedMembers` are as follows:\n\n- **guild ID** (Guild): The guild to pull banned members from (Required)\n- **separator** (String): The separator for each id (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildBannedMembers added?", "Assistant": "$guildBannedMembers was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildBannedMembers nativly to forgescipt?", "Assistant": "Yes, $guildBannedMembers is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildBanner?", "Assistant": "Returns the guild banner\n\nExample usage:\n```js\n$guildBanner[data;29;extension_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildBanner?", "Assistant": "Use `$guildBanner` like this:\n```js\n$guildBanner[data;29;extension_example]\n```\n\nThis function returns the guild banner."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildBanner in forgescript?", "Assistant": "Yes, You use `$guildBanner` like this:\n```js\n$guildBanner[data;29;extension_example]\n```\n\nThis function returns the guild banner."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildBanner?", "Assistant": "The arguments for `$guildBanner` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the banner (Required)\n- **size** (Number): The size to use for the image (Optional)\n- **extension** (String): The extension to use for the image (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildBanner added?", "Assistant": "$guildBanner was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildBanner nativly to forgescipt?", "Assistant": "Yes, $guildBanner is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildBanReason?", "Assistant": "Fetches a ban reason of a user\n\nExample usage:\n```js\n$guildBanReason[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildBanReason?", "Assistant": "Use `$guildBanReason` like this:\n```js\n$guildBanReason[data;data]\n```\n\nThis function fetches a ban reason of a user."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildBanReason in forgescript?", "Assistant": "Yes, You use `$guildBanReason` like this:\n```js\n$guildBanReason[data;data]\n```\n\nThis function fetches a ban reason of a user."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildBanReason?", "Assistant": "The arguments for `$guildBanReason` are as follows:\n\n- **guild ID** (Guild): The guild to pull ban from (Required)\n- **user ID** (User): The user to pull ban reason (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildBanReason added?", "Assistant": "$guildBanReason was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildBanReason nativly to forgescipt?", "Assistant": "Yes, $guildBanReason is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildBoostCount?", "Assistant": "Returns the server boost count\n\nExample usage:\n```js\n$guildBoostCount[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildBoostCount?", "Assistant": "Use `$guildBoostCount` like this:\n```js\n$guildBoostCount[data]\n```\n\nThis function returns the server boost count."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildBoostCount in forgescript?", "Assistant": "Yes, You use `$guildBoostCount` like this:\n```js\n$guildBoostCount[data]\n```\n\nThis function returns the server boost count."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildBoostCount?", "Assistant": "The arguments for `$guildBoostCount` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildBoostCount added?", "Assistant": "$guildBoostCount was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildBoostCount nativly to forgescipt?", "Assistant": "Yes, $guildBoostCount is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildBoosterIDs?", "Assistant": "Returns all current boosters of a guild\n\nExample usage:\n```js\n$guildBoosterIDs[data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildBoosterIDs?", "Assistant": "Use `$guildBoosterIDs` like this:\n```js\n$guildBoosterIDs[data;separator_example]\n```\n\nThis function returns all current boosters of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildBoosterIDs in forgescript?", "Assistant": "Yes, You use `$guildBoosterIDs` like this:\n```js\n$guildBoosterIDs[data;separator_example]\n```\n\nThis function returns all current boosters of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildBoosterIDs?", "Assistant": "The arguments for `$guildBoosterIDs` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n- **separator** (String): The separator to use for every member (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildBoosterIDs added?", "Assistant": "$guildBoosterIDs was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildBoosterIDs nativly to forgescipt?", "Assistant": "Yes, $guildBoosterIDs is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildBoostLevel?", "Assistant": "Returns the server boost tier\n\nExample usage:\n```js\n$guildBoostLevel[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildBoostLevel?", "Assistant": "Use `$guildBoostLevel` like this:\n```js\n$guildBoostLevel[data]\n```\n\nThis function returns the server boost tier."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildBoostLevel in forgescript?", "Assistant": "Yes, You use `$guildBoostLevel` like this:\n```js\n$guildBoostLevel[data]\n```\n\nThis function returns the server boost tier."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildBoostLevel?", "Assistant": "The arguments for `$guildBoostLevel` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildBoostLevel added?", "Assistant": "$guildBoostLevel was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildBoostLevel nativly to forgescipt?", "Assistant": "Yes, $guildBoostLevel is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildBoostProgressBarEnabled?", "Assistant": "Returns whether a guild has the boost progress bar enabled\n\nExample usage:\n```js\n$guildBoostProgressBarEnabled[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildBoostProgressBarEnabled?", "Assistant": "Use `$guildBoostProgressBarEnabled` like this:\n```js\n$guildBoostProgressBarEnabled[data]\n```\n\nThis function returns whether a guild has the boost progress bar enabled."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildBoostProgressBarEnabled in forgescript?", "Assistant": "Yes, You use `$guildBoostProgressBarEnabled` like this:\n```js\n$guildBoostProgressBarEnabled[data]\n```\n\nThis function returns whether a guild has the boost progress bar enabled."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildBoostProgressBarEnabled?", "Assistant": "The arguments for `$guildBoostProgressBarEnabled` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildBoostProgressBarEnabled added?", "Assistant": "$guildBoostProgressBarEnabled was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildBoostProgressBarEnabled nativly to forgescipt?", "Assistant": "Yes, $guildBoostProgressBarEnabled is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildBoostRoleID?", "Assistant": "Returns the server boost role id\n\nExample usage:\n```js\n$guildBoostRoleID[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildBoostRoleID?", "Assistant": "Use `$guildBoostRoleID` like this:\n```js\n$guildBoostRoleID[data]\n```\n\nThis function returns the server boost role id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildBoostRoleID in forgescript?", "Assistant": "Yes, You use `$guildBoostRoleID` like this:\n```js\n$guildBoostRoleID[data]\n```\n\nThis function returns the server boost role id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildBoostRoleID?", "Assistant": "The arguments for `$guildBoostRoleID` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildBoostRoleID added?", "Assistant": "$guildBoostRoleID was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildBoostRoleID nativly to forgescipt?", "Assistant": "Yes, $guildBoostRoleID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildBotCount?", "Assistant": "Returns the bot count of a guild\n\nExample usage:\n```js\n$guildBotCount[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildBotCount?", "Assistant": "Use `$guildBotCount` like this:\n```js\n$guildBotCount[data]\n```\n\nThis function returns the bot count of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildBotCount in forgescript?", "Assistant": "Yes, You use `$guildBotCount` like this:\n```js\n$guildBotCount[data]\n```\n\nThis function returns the bot count of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildBotCount?", "Assistant": "The arguments for `$guildBotCount` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve bot count from (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildBotCount added?", "Assistant": "$guildBotCount was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildBotCount nativly to forgescipt?", "Assistant": "Yes, $guildBotCount is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildChannelCount?", "Assistant": "Returns the server channel count\n\nExample usage:\n```js\n$guildChannelCount[data;GuildText]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildChannelCount?", "Assistant": "Use `$guildChannelCount` like this:\n```js\n$guildChannelCount[data;GuildText]\n```\n\nThis function returns the server channel count."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildChannelCount in forgescript?", "Assistant": "Yes, You use `$guildChannelCount` like this:\n```js\n$guildChannelCount[data;GuildText]\n```\n\nThis function returns the server channel count."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildChannelCount?", "Assistant": "The arguments for `$guildChannelCount` are as follows:\n\n- **guild ID** (Guild): The guild to get channels from (Required)\n- **categories** (Enum): The categories to filter by (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildChannelCount added?", "Assistant": "$guildChannelCount was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildChannelCount nativly to forgescipt?", "Assistant": "Yes, $guildChannelCount is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildChannelExists?", "Assistant": "Returns whether a guild channel id exists\n\nExample usage:\n```js\n$guildChannelExists[data;channel_ID_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildChannelExists?", "Assistant": "Use `$guildChannelExists` like this:\n```js\n$guildChannelExists[data;channel_ID_example]\n```\n\nThis function returns whether a guild channel id exists."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildChannelExists in forgescript?", "Assistant": "Yes, You use `$guildChannelExists` like this:\n```js\n$guildChannelExists[data;channel_ID_example]\n```\n\nThis function returns whether a guild channel id exists."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildChannelExists?", "Assistant": "The arguments for `$guildChannelExists` are as follows:\n\n- **guild ID** (Guild): The guild to check for the guild channel (Required)\n- **channel ID** (String): The role to guild channel (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildChannelExists added?", "Assistant": "$guildChannelExists was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildChannelExists nativly to forgescipt?", "Assistant": "Yes, $guildChannelExists is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildChannelIDs?", "Assistant": "Returns every channel id of the guild\n\nExample usage:\n```js\n$guildChannelIDs[data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildChannelIDs?", "Assistant": "Use `$guildChannelIDs` like this:\n```js\n$guildChannelIDs[data;separator_example]\n```\n\nThis function returns every channel id of the guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildChannelIDs in forgescript?", "Assistant": "Yes, You use `$guildChannelIDs` like this:\n```js\n$guildChannelIDs[data;separator_example]\n```\n\nThis function returns every channel id of the guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildChannelIDs?", "Assistant": "The arguments for `$guildChannelIDs` are as follows:\n\n- **guild ID** (Guild): The guild to get channel ids from (Required)\n- **separator** (String): The separator to use for every channel (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildChannelIDs added?", "Assistant": "$guildChannelIDs was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildChannelIDs nativly to forgescipt?", "Assistant": "Yes, $guildChannelIDs is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildCount?", "Assistant": "Returns the guild count\n\nExample usage:\n```js\n$guildCount[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildCount?", "Assistant": "Use `$guildCount` like this:\n```js\n$guildCount[]\n```\n\nThis function returns the guild count."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildCount in forgescript?", "Assistant": "Yes, You use `$guildCount` like this:\n```js\n$guildCount[]\n```\n\nThis function returns the guild count."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildCount?", "Assistant": "The arguments for `$guildCount` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildCount added?", "Assistant": "$guildCount was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildCount nativly to forgescipt?", "Assistant": "Yes, $guildCount is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildCreatedAt?", "Assistant": "Returns the server creation timestamp\n\nExample usage:\n```js\n$guildCreatedAt[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildCreatedAt?", "Assistant": "Use `$guildCreatedAt` like this:\n```js\n$guildCreatedAt[data]\n```\n\nThis function returns the server creation timestamp."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildCreatedAt in forgescript?", "Assistant": "Yes, You use `$guildCreatedAt` like this:\n```js\n$guildCreatedAt[data]\n```\n\nThis function returns the server creation timestamp."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildCreatedAt?", "Assistant": "The arguments for `$guildCreatedAt` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildCreatedAt added?", "Assistant": "$guildCreatedAt was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildCreatedAt nativly to forgescipt?", "Assistant": "Yes, $guildCreatedAt is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildDefaultMessageNotifications?", "Assistant": "Returns the default message notifications for this guild\n\nExample usage:\n```js\n$guildDefaultMessageNotifications[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildDefaultMessageNotifications?", "Assistant": "Use `$guildDefaultMessageNotifications` like this:\n```js\n$guildDefaultMessageNotifications[data]\n```\n\nThis function returns the default message notifications for this guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildDefaultMessageNotifications in forgescript?", "Assistant": "Yes, You use `$guildDefaultMessageNotifications` like this:\n```js\n$guildDefaultMessageNotifications[data]\n```\n\nThis function returns the default message notifications for this guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildDefaultMessageNotifications?", "Assistant": "The arguments for `$guildDefaultMessageNotifications` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildDefaultMessageNotifications added?", "Assistant": "$guildDefaultMessageNotifications was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildDefaultMessageNotifications nativly to forgescipt?", "Assistant": "Yes, $guildDefaultMessageNotifications is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildDescription?", "Assistant": "Returns the server description\n\nExample usage:\n```js\n$guildDescription[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildDescription?", "Assistant": "Use `$guildDescription` like this:\n```js\n$guildDescription[data]\n```\n\nThis function returns the server description."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildDescription in forgescript?", "Assistant": "Yes, You use `$guildDescription` like this:\n```js\n$guildDescription[data]\n```\n\nThis function returns the server description."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildDescription?", "Assistant": "The arguments for `$guildDescription` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildDescription added?", "Assistant": "$guildDescription was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildDescription nativly to forgescipt?", "Assistant": "Yes, $guildDescription is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildDiscoverySplash?", "Assistant": "Returns the guild discovery splash\n\nExample usage:\n```js\n$guildDiscoverySplash[data;37;extension_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildDiscoverySplash?", "Assistant": "Use `$guildDiscoverySplash` like this:\n```js\n$guildDiscoverySplash[data;37;extension_example]\n```\n\nThis function returns the guild discovery splash."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildDiscoverySplash in forgescript?", "Assistant": "Yes, You use `$guildDiscoverySplash` like this:\n```js\n$guildDiscoverySplash[data;37;extension_example]\n```\n\nThis function returns the guild discovery splash."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildDiscoverySplash?", "Assistant": "The arguments for `$guildDiscoverySplash` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the discovery splash (Required)\n- **size** (Number): The size to use for the image (Optional)\n- **extension** (String): The extension to use for the image (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildDiscoverySplash added?", "Assistant": "$guildDiscoverySplash was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildDiscoverySplash nativly to forgescipt?", "Assistant": "Yes, $guildDiscoverySplash is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildEmojiCount?", "Assistant": "Returns the emoji count of a guild\n\nExample usage:\n```js\n$guildEmojiCount[data;animated]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildEmojiCount?", "Assistant": "Use `$guildEmojiCount` like this:\n```js\n$guildEmojiCount[data;animated]\n```\n\nThis function returns the emoji count of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildEmojiCount in forgescript?", "Assistant": "Yes, You use `$guildEmojiCount` like this:\n```js\n$guildEmojiCount[data;animated]\n```\n\nThis function returns the emoji count of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildEmojiCount?", "Assistant": "The arguments for `$guildEmojiCount` are as follows:\n\n- **guild ID** (Guild): The guild to get emotes from (Required)\n- **type** (Enum): The type of the emotes to count (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildEmojiCount added?", "Assistant": "$guildEmojiCount was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildEmojiCount nativly to forgescipt?", "Assistant": "Yes, $guildEmojiCount is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildEmojiIDs?", "Assistant": "Returns every emoji id of the guild\n\nExample usage:\n```js\n$guildEmojiIDs[data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildEmojiIDs?", "Assistant": "Use `$guildEmojiIDs` like this:\n```js\n$guildEmojiIDs[data;separator_example]\n```\n\nThis function returns every emoji id of the guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildEmojiIDs in forgescript?", "Assistant": "Yes, You use `$guildEmojiIDs` like this:\n```js\n$guildEmojiIDs[data;separator_example]\n```\n\nThis function returns every emoji id of the guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildEmojiIDs?", "Assistant": "The arguments for `$guildEmojiIDs` are as follows:\n\n- **guild ID** (Guild): The guild to get emoji ids from (Required)\n- **separator** (String): The separator to use for every emoji (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildEmojiIDs added?", "Assistant": "$guildEmojiIDs was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildEmojiIDs nativly to forgescipt?", "Assistant": "Yes, $guildEmojiIDs is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildEmojiLimit?", "Assistant": "Returns the emoji limit of a guild\n\nExample usage:\n```js\n$guildEmojiLimit[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildEmojiLimit?", "Assistant": "Use `$guildEmojiLimit` like this:\n```js\n$guildEmojiLimit[data]\n```\n\nThis function returns the emoji limit of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildEmojiLimit in forgescript?", "Assistant": "Yes, You use `$guildEmojiLimit` like this:\n```js\n$guildEmojiLimit[data]\n```\n\nThis function returns the emoji limit of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildEmojiLimit?", "Assistant": "The arguments for `$guildEmojiLimit` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildEmojiLimit added?", "Assistant": "$guildEmojiLimit was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildEmojiLimit nativly to forgescipt?", "Assistant": "Yes, $guildEmojiLimit is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildEmojis?", "Assistant": "Returns every emoji of the guild\n\nExample usage:\n```js\n$guildEmojis[data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildEmojis?", "Assistant": "Use `$guildEmojis` like this:\n```js\n$guildEmojis[data;separator_example]\n```\n\nThis function returns every emoji of the guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildEmojis in forgescript?", "Assistant": "Yes, You use `$guildEmojis` like this:\n```js\n$guildEmojis[data;separator_example]\n```\n\nThis function returns every emoji of the guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildEmojis?", "Assistant": "The arguments for `$guildEmojis` are as follows:\n\n- **guild ID** (Guild): The guild to get emoji from (Required)\n- **separator** (String): The separator to use for every emoji (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildEmojis added?", "Assistant": "$guildEmojis was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildEmojis nativly to forgescipt?", "Assistant": "Yes, $guildEmojis is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildExists?", "Assistant": "Returns whether a guild id exists\n\nExample usage:\n```js\n$guildExists[guild_ID_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildExists?", "Assistant": "Use `$guildExists` like this:\n```js\n$guildExists[guild_ID_example]\n```\n\nThis function returns whether a guild id exists."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildExists in forgescript?", "Assistant": "Yes, You use `$guildExists` like this:\n```js\n$guildExists[guild_ID_example]\n```\n\nThis function returns whether a guild id exists."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildExists?", "Assistant": "The arguments for `$guildExists` are as follows:\n\n- **guild ID** (String): The guild to check (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildExists added?", "Assistant": "$guildExists was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildExists nativly to forgescipt?", "Assistant": "Yes, $guildExists is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildExplicitContentFilter?", "Assistant": "Returns the explicit content filter level for this guild\n\nExample usage:\n```js\n$guildExplicitContentFilter[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildExplicitContentFilter?", "Assistant": "Use `$guildExplicitContentFilter` like this:\n```js\n$guildExplicitContentFilter[data]\n```\n\nThis function returns the explicit content filter level for this guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildExplicitContentFilter in forgescript?", "Assistant": "Yes, You use `$guildExplicitContentFilter` like this:\n```js\n$guildExplicitContentFilter[data]\n```\n\nThis function returns the explicit content filter level for this guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildExplicitContentFilter?", "Assistant": "The arguments for `$guildExplicitContentFilter` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildExplicitContentFilter added?", "Assistant": "$guildExplicitContentFilter was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildExplicitContentFilter nativly to forgescipt?", "Assistant": "Yes, $guildExplicitContentFilter is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildFeatures?", "Assistant": "Returns the guild features\n\nExample usage:\n```js\n$guildFeatures[data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildFeatures?", "Assistant": "Use `$guildFeatures` like this:\n```js\n$guildFeatures[data;separator_example]\n```\n\nThis function returns the guild features."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildFeatures in forgescript?", "Assistant": "Yes, You use `$guildFeatures` like this:\n```js\n$guildFeatures[data;separator_example]\n```\n\nThis function returns the guild features."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildFeatures?", "Assistant": "The arguments for `$guildFeatures` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n- **separator** (String): The separator to use (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildFeatures added?", "Assistant": "$guildFeatures was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildFeatures nativly to forgescipt?", "Assistant": "Yes, $guildFeatures is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildHasAnyFeatures?", "Assistant": "Returns whether this guild has any of the given features\n\nExample usage:\n```js\n$guildHasAnyFeatures[data;RoleSubscriptionsEnabled]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildHasAnyFeatures?", "Assistant": "Use `$guildHasAnyFeatures` like this:\n```js\n$guildHasAnyFeatures[data;RoleSubscriptionsEnabled]\n```\n\nThis function returns whether this guild has any of the given features."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildHasAnyFeatures in forgescript?", "Assistant": "Yes, You use `$guildHasAnyFeatures` like this:\n```js\n$guildHasAnyFeatures[data;RoleSubscriptionsEnabled]\n```\n\nThis function returns whether this guild has any of the given features."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildHasAnyFeatures?", "Assistant": "The arguments for `$guildHasAnyFeatures` are as follows:\n\n- **guild ID** (Guild): The guild to check for features (Required)\n- **features** (Enum): The features to check for (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildHasAnyFeatures added?", "Assistant": "$guildHasAnyFeatures was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildHasAnyFeatures nativly to forgescipt?", "Assistant": "Yes, $guildHasAnyFeatures is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildHasFeatures?", "Assistant": "Returns whether this guild has all the given features\n\nExample usage:\n```js\n$guildHasFeatures[data;AnimatedBanner]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildHasFeatures?", "Assistant": "Use `$guildHasFeatures` like this:\n```js\n$guildHasFeatures[data;AnimatedBanner]\n```\n\nThis function returns whether this guild has all the given features."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildHasFeatures in forgescript?", "Assistant": "Yes, You use `$guildHasFeatures` like this:\n```js\n$guildHasFeatures[data;AnimatedBanner]\n```\n\nThis function returns whether this guild has all the given features."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildHasFeatures?", "Assistant": "The arguments for `$guildHasFeatures` are as follows:\n\n- **guild ID** (Guild): The guild to check for features (Required)\n- **features** (Enum): The features to check for (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildHasFeatures added?", "Assistant": "$guildHasFeatures was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildHasFeatures nativly to forgescipt?", "Assistant": "Yes, $guildHasFeatures is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildHasTemplate?", "Assistant": "Returns whether this guild has a template\n\nExample usage:\n```js\n$guildHasTemplate[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildHasTemplate?", "Assistant": "Use `$guildHasTemplate` like this:\n```js\n$guildHasTemplate[data]\n```\n\nThis function returns whether this guild has a template."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildHasTemplate in forgescript?", "Assistant": "Yes, You use `$guildHasTemplate` like this:\n```js\n$guildHasTemplate[data]\n```\n\nThis function returns whether this guild has a template."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildHasTemplate?", "Assistant": "The arguments for `$guildHasTemplate` are as follows:\n\n- **guild ID** (Guild): The guild to check for template (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildHasTemplate added?", "Assistant": "$guildHasTemplate was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildHasTemplate nativly to forgescipt?", "Assistant": "Yes, $guildHasTemplate is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildHighestRoleID?", "Assistant": "Returns the highest role id of a guild\n\nExample usage:\n```js\n$guildHighestRoleID[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildHighestRoleID?", "Assistant": "Use `$guildHighestRoleID` like this:\n```js\n$guildHighestRoleID[data]\n```\n\nThis function returns the highest role id of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildHighestRoleID in forgescript?", "Assistant": "Yes, You use `$guildHighestRoleID` like this:\n```js\n$guildHighestRoleID[data]\n```\n\nThis function returns the highest role id of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildHighestRoleID?", "Assistant": "The arguments for `$guildHighestRoleID` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve its highest role (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildHighestRoleID added?", "Assistant": "$guildHighestRoleID was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildHighestRoleID nativly to forgescipt?", "Assistant": "Yes, $guildHighestRoleID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildIcon?", "Assistant": "Returns the server icon\n\nExample usage:\n```js\n$guildIcon[data;38;extension_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildIcon?", "Assistant": "Use `$guildIcon` like this:\n```js\n$guildIcon[data;38;extension_example]\n```\n\nThis function returns the server icon."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildIcon in forgescript?", "Assistant": "Yes, You use `$guildIcon` like this:\n```js\n$guildIcon[data;38;extension_example]\n```\n\nThis function returns the server icon."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildIcon?", "Assistant": "The arguments for `$guildIcon` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the guild icon (Required)\n- **size** (Number): The size to use for the image (Optional)\n- **extension** (String): The extension to use for the image (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildIcon added?", "Assistant": "$guildIcon was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildIcon nativly to forgescipt?", "Assistant": "Yes, $guildIcon is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildID?", "Assistant": "Returns the guild id with given name\n\nExample usage:\n```js\n$guildID[name_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildID?", "Assistant": "Use `$guildID` like this:\n```js\n$guildID[name_example]\n```\n\nThis function returns the guild id with given name."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildID in forgescript?", "Assistant": "Yes, You use `$guildID` like this:\n```js\n$guildID[name_example]\n```\n\nThis function returns the guild id with given name."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildID?", "Assistant": "The arguments for `$guildID` are as follows:\n\n- **name** (String): The guild name to return the id (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildID added?", "Assistant": "$guildID was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildID nativly to forgescipt?", "Assistant": "Yes, $guildID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildIDs?", "Assistant": "Returns all the guilds this bot is in\n\nExample usage:\n```js\n$guildIDs[separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildIDs?", "Assistant": "Use `$guildIDs` like this:\n```js\n$guildIDs[separator_example]\n```\n\nThis function returns all the guilds this bot is in."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildIDs in forgescript?", "Assistant": "Yes, You use `$guildIDs` like this:\n```js\n$guildIDs[separator_example]\n```\n\nThis function returns all the guilds this bot is in."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildIDs?", "Assistant": "The arguments for `$guildIDs` are as follows:\n\n- **separator** (String): The separator for each guild (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildIDs added?", "Assistant": "$guildIDs was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildIDs nativly to forgescipt?", "Assistant": "Yes, $guildIDs is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildLeave?", "Assistant": "Leaves a guild\n\nExample usage:\n```js\n$guildLeave[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildLeave?", "Assistant": "Use `$guildLeave` like this:\n```js\n$guildLeave[data]\n```\n\nThis function leaves a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildLeave in forgescript?", "Assistant": "Yes, You use `$guildLeave` like this:\n```js\n$guildLeave[data]\n```\n\nThis function leaves a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildLeave?", "Assistant": "The arguments for `$guildLeave` are as follows:\n\n- **guild ID** (Guild): The guild to leave (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildLeave added?", "Assistant": "$guildLeave was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildLeave nativly to forgescipt?", "Assistant": "Yes, $guildLeave is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildLowestRoleID?", "Assistant": "Returns the lowest role id of a guild\n\nExample usage:\n```js\n$guildLowestRoleID[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildLowestRoleID?", "Assistant": "Use `$guildLowestRoleID` like this:\n```js\n$guildLowestRoleID[data]\n```\n\nThis function returns the lowest role id of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildLowestRoleID in forgescript?", "Assistant": "Yes, You use `$guildLowestRoleID` like this:\n```js\n$guildLowestRoleID[data]\n```\n\nThis function returns the lowest role id of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildLowestRoleID?", "Assistant": "The arguments for `$guildLowestRoleID` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve its lowest role (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildLowestRoleID added?", "Assistant": "$guildLowestRoleID was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildLowestRoleID nativly to forgescipt?", "Assistant": "Yes, $guildLowestRoleID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildMaximumBitrate?", "Assistant": "Returns the maximum bitrate for voice channels of this guild\n\nExample usage:\n```js\n$guildMaximumBitrate[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildMaximumBitrate?", "Assistant": "Use `$guildMaximumBitrate` like this:\n```js\n$guildMaximumBitrate[data]\n```\n\nThis function returns the maximum bitrate for voice channels of this guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildMaximumBitrate in forgescript?", "Assistant": "Yes, You use `$guildMaximumBitrate` like this:\n```js\n$guildMaximumBitrate[data]\n```\n\nThis function returns the maximum bitrate for voice channels of this guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildMaximumBitrate?", "Assistant": "The arguments for `$guildMaximumBitrate` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildMaximumBitrate added?", "Assistant": "$guildMaximumBitrate was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildMaximumBitrate nativly to forgescipt?", "Assistant": "Yes, $guildMaximumBitrate is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildMaximumMembers?", "Assistant": "Returns the maximum members for this guild\n\nExample usage:\n```js\n$guildMaximumMembers[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildMaximumMembers?", "Assistant": "Use `$guildMaximumMembers` like this:\n```js\n$guildMaximumMembers[data]\n```\n\nThis function returns the maximum members for this guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildMaximumMembers in forgescript?", "Assistant": "Yes, You use `$guildMaximumMembers` like this:\n```js\n$guildMaximumMembers[data]\n```\n\nThis function returns the maximum members for this guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildMaximumMembers?", "Assistant": "The arguments for `$guildMaximumMembers` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildMaximumMembers added?", "Assistant": "$guildMaximumMembers was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildMaximumMembers nativly to forgescipt?", "Assistant": "Yes, $guildMaximumMembers is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildMaximumPresences?", "Assistant": "Returns the maximum presences for this guild\n\nExample usage:\n```js\n$guildMaximumPresences[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildMaximumPresences?", "Assistant": "Use `$guildMaximumPresences` like this:\n```js\n$guildMaximumPresences[data]\n```\n\nThis function returns the maximum presences for this guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildMaximumPresences in forgescript?", "Assistant": "Yes, You use `$guildMaximumPresences` like this:\n```js\n$guildMaximumPresences[data]\n```\n\nThis function returns the maximum presences for this guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildMaximumPresences?", "Assistant": "The arguments for `$guildMaximumPresences` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildMaximumPresences added?", "Assistant": "$guildMaximumPresences was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildMaximumPresences nativly to forgescipt?", "Assistant": "Yes, $guildMaximumPresences is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildMaxStageVideoChannelUsers?", "Assistant": "Returns the maximum video channel users for stage channels of this guild\n\nExample usage:\n```js\n$guildMaxStageVideoChannelUsers[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildMaxStageVideoChannelUsers?", "Assistant": "Use `$guildMaxStageVideoChannelUsers` like this:\n```js\n$guildMaxStageVideoChannelUsers[data]\n```\n\nThis function returns the maximum video channel users for stage channels of this guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildMaxStageVideoChannelUsers in forgescript?", "Assistant": "Yes, You use `$guildMaxStageVideoChannelUsers` like this:\n```js\n$guildMaxStageVideoChannelUsers[data]\n```\n\nThis function returns the maximum video channel users for stage channels of this guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildMaxStageVideoChannelUsers?", "Assistant": "The arguments for `$guildMaxStageVideoChannelUsers` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildMaxStageVideoChannelUsers added?", "Assistant": "$guildMaxStageVideoChannelUsers was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildMaxStageVideoChannelUsers nativly to forgescipt?", "Assistant": "Yes, $guildMaxStageVideoChannelUsers is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildMaxVideoChannelUsers?", "Assistant": "Returns the maximum video channel users for this guild\n\nExample usage:\n```js\n$guildMaxVideoChannelUsers[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildMaxVideoChannelUsers?", "Assistant": "Use `$guildMaxVideoChannelUsers` like this:\n```js\n$guildMaxVideoChannelUsers[data]\n```\n\nThis function returns the maximum video channel users for this guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildMaxVideoChannelUsers in forgescript?", "Assistant": "Yes, You use `$guildMaxVideoChannelUsers` like this:\n```js\n$guildMaxVideoChannelUsers[data]\n```\n\nThis function returns the maximum video channel users for this guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildMaxVideoChannelUsers?", "Assistant": "The arguments for `$guildMaxVideoChannelUsers` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildMaxVideoChannelUsers added?", "Assistant": "$guildMaxVideoChannelUsers was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildMaxVideoChannelUsers nativly to forgescipt?", "Assistant": "Yes, $guildMaxVideoChannelUsers is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildMemberCount?", "Assistant": "Returns the user count of a guild\n\nExample usage:\n```js\n$guildMemberCount[data;offline;false]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildMemberCount?", "Assistant": "Use `$guildMemberCount` like this:\n```js\n$guildMemberCount[data;offline;false]\n```\n\nThis function returns the user count of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildMemberCount in forgescript?", "Assistant": "Yes, You use `$guildMemberCount` like this:\n```js\n$guildMemberCount[data;offline;false]\n```\n\nThis function returns the user count of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildMemberCount?", "Assistant": "The arguments for `$guildMemberCount` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve member count from (Required)\n- **presence** (Enum): The presence of the users to count (Optional)\n- **count bots** (Boolean): Whether to count bots (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildMemberCount added?", "Assistant": "$guildMemberCount was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildMemberCount nativly to forgescipt?", "Assistant": "Yes, $guildMemberCount is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildMemberIDs?", "Assistant": "Returns all cached member ids of a guild\n\nExample usage:\n```js\n$guildMemberIDs[data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildMemberIDs?", "Assistant": "Use `$guildMemberIDs` like this:\n```js\n$guildMemberIDs[data;separator_example]\n```\n\nThis function returns all cached member ids of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildMemberIDs in forgescript?", "Assistant": "Yes, You use `$guildMemberIDs` like this:\n```js\n$guildMemberIDs[data;separator_example]\n```\n\nThis function returns all cached member ids of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildMemberIDs?", "Assistant": "The arguments for `$guildMemberIDs` are as follows:\n\n- **guild ID** (Guild): The guild to pull members from (Required)\n- **separator** (String): The separator to use for each member (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildMemberIDs added?", "Assistant": "$guildMemberIDs was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildMemberIDs nativly to forgescipt?", "Assistant": "Yes, $guildMemberIDs is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildMFALevel?", "Assistant": "Returns the mfa level for this guild\n\nExample usage:\n```js\n$guildMFALevel[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildMFALevel?", "Assistant": "Use `$guildMFALevel` like this:\n```js\n$guildMFALevel[data]\n```\n\nThis function returns the mfa level for this guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildMFALevel in forgescript?", "Assistant": "Yes, You use `$guildMFALevel` like this:\n```js\n$guildMFALevel[data]\n```\n\nThis function returns the mfa level for this guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildMFALevel?", "Assistant": "The arguments for `$guildMFALevel` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildMFALevel added?", "Assistant": "$guildMFALevel was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildMFALevel nativly to forgescipt?", "Assistant": "Yes, $guildMFALevel is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildName?", "Assistant": "Returns the server name\n\nExample usage:\n```js\n$guildName[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildName?", "Assistant": "Use `$guildName` like this:\n```js\n$guildName[data]\n```\n\nThis function returns the server name."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildName in forgescript?", "Assistant": "Yes, You use `$guildName` like this:\n```js\n$guildName[data]\n```\n\nThis function returns the server name."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildName?", "Assistant": "The arguments for `$guildName` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildName added?", "Assistant": "$guildName was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildName nativly to forgescipt?", "Assistant": "Yes, $guildName is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildNameAcronym?", "Assistant": "Returns the server name acronym\n\nExample usage:\n```js\n$guildNameAcronym[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildNameAcronym?", "Assistant": "Use `$guildNameAcronym` like this:\n```js\n$guildNameAcronym[data]\n```\n\nThis function returns the server name acronym."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildNameAcronym in forgescript?", "Assistant": "Yes, You use `$guildNameAcronym` like this:\n```js\n$guildNameAcronym[data]\n```\n\nThis function returns the server name acronym."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildNameAcronym?", "Assistant": "The arguments for `$guildNameAcronym` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildNameAcronym added?", "Assistant": "$guildNameAcronym was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildNameAcronym nativly to forgescipt?", "Assistant": "Yes, $guildNameAcronym is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildNames?", "Assistant": "Returns the server names of the bot\n\nExample usage:\n```js\n$guildNames[separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildNames?", "Assistant": "Use `$guildNames` like this:\n```js\n$guildNames[separator_example]\n```\n\nThis function returns the server names of the bot."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildNames in forgescript?", "Assistant": "Yes, You use `$guildNames` like this:\n```js\n$guildNames[separator_example]\n```\n\nThis function returns the server names of the bot."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildNames?", "Assistant": "The arguments for `$guildNames` are as follows:\n\n- **separator** (String): The separator to use for each guild (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildNames added?", "Assistant": "$guildNames was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildNames nativly to forgescipt?", "Assistant": "Yes, $guildNames is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildNSFWLevel?", "Assistant": "Returns the nsfw level for this guild\n\nExample usage:\n```js\n$guildNSFWLevel[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildNSFWLevel?", "Assistant": "Use `$guildNSFWLevel` like this:\n```js\n$guildNSFWLevel[data]\n```\n\nThis function returns the nsfw level for this guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildNSFWLevel in forgescript?", "Assistant": "Yes, You use `$guildNSFWLevel` like this:\n```js\n$guildNSFWLevel[data]\n```\n\nThis function returns the nsfw level for this guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildNSFWLevel?", "Assistant": "The arguments for `$guildNSFWLevel` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildNSFWLevel added?", "Assistant": "$guildNSFWLevel was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildNSFWLevel nativly to forgescipt?", "Assistant": "Yes, $guildNSFWLevel is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildOwnerID?", "Assistant": "Returns the server owner id\n\nExample usage:\n```js\n$guildOwnerID[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildOwnerID?", "Assistant": "Use `$guildOwnerID` like this:\n```js\n$guildOwnerID[data]\n```\n\nThis function returns the server owner id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildOwnerID in forgescript?", "Assistant": "Yes, You use `$guildOwnerID` like this:\n```js\n$guildOwnerID[data]\n```\n\nThis function returns the server owner id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildOwnerID?", "Assistant": "The arguments for `$guildOwnerID` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the owner from (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildOwnerID added?", "Assistant": "$guildOwnerID was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildOwnerID nativly to forgescipt?", "Assistant": "Yes, $guildOwnerID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildPartnered?", "Assistant": "Returns whether the server is partnered\n\nExample usage:\n```js\n$guildPartnered[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildPartnered?", "Assistant": "Use `$guildPartnered` like this:\n```js\n$guildPartnered[data]\n```\n\nThis function returns whether the server is partnered."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildPartnered in forgescript?", "Assistant": "Yes, You use `$guildPartnered` like this:\n```js\n$guildPartnered[data]\n```\n\nThis function returns whether the server is partnered."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildPartnered?", "Assistant": "The arguments for `$guildPartnered` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildPartnered added?", "Assistant": "$guildPartnered was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildPartnered nativly to forgescipt?", "Assistant": "Yes, $guildPartnered is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildPreferredLocale?", "Assistant": "Returns the server's preferred locale\n\nExample usage:\n```js\n$guildPreferredLocale[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildPreferredLocale?", "Assistant": "Use `$guildPreferredLocale` like this:\n```js\n$guildPreferredLocale[data]\n```\n\nThis function returns the server's preferred locale."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildPreferredLocale in forgescript?", "Assistant": "Yes, You use `$guildPreferredLocale` like this:\n```js\n$guildPreferredLocale[data]\n```\n\nThis function returns the server's preferred locale."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildPreferredLocale?", "Assistant": "The arguments for `$guildPreferredLocale` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildPreferredLocale added?", "Assistant": "$guildPreferredLocale was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildPreferredLocale nativly to forgescipt?", "Assistant": "Yes, $guildPreferredLocale is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildPublicUpdatesChannelID?", "Assistant": "Returns the server's public updates channel ID\n\nExample usage:\n```js\n$guildPublicUpdatesChannelID[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildPublicUpdatesChannelID?", "Assistant": "Use `$guildPublicUpdatesChannelID` like this:\n```js\n$guildPublicUpdatesChannelID[data]\n```\n\nThis function returns the server's public updates channel id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildPublicUpdatesChannelID in forgescript?", "Assistant": "Yes, You use `$guildPublicUpdatesChannelID` like this:\n```js\n$guildPublicUpdatesChannelID[data]\n```\n\nThis function returns the server's public updates channel id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildPublicUpdatesChannelID?", "Assistant": "The arguments for `$guildPublicUpdatesChannelID` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildPublicUpdatesChannelID added?", "Assistant": "$guildPublicUpdatesChannelID was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildPublicUpdatesChannelID nativly to forgescipt?", "Assistant": "Yes, $guildPublicUpdatesChannelID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildRawData?", "Assistant": "Returns the raw data of a guild\n\nExample usage:\n```js\n$guildRawData[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildRawData?", "Assistant": "Use `$guildRawData` like this:\n```js\n$guildRawData[data]\n```\n\nThis function returns the raw data of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildRawData in forgescript?", "Assistant": "Yes, You use `$guildRawData` like this:\n```js\n$guildRawData[data]\n```\n\nThis function returns the raw data of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildRawData?", "Assistant": "The arguments for `$guildRawData` are as follows:\n\n- **guild ID** (Guild): The guild to get raw data from (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildRawData added?", "Assistant": "$guildRawData was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildRawData nativly to forgescipt?", "Assistant": "Yes, $guildRawData is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildRoleCount?", "Assistant": "Returns the role count of a guild\n\nExample usage:\n```js\n$guildRoleCount[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildRoleCount?", "Assistant": "Use `$guildRoleCount` like this:\n```js\n$guildRoleCount[data]\n```\n\nThis function returns the role count of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildRoleCount in forgescript?", "Assistant": "Yes, You use `$guildRoleCount` like this:\n```js\n$guildRoleCount[data]\n```\n\nThis function returns the role count of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildRoleCount?", "Assistant": "The arguments for `$guildRoleCount` are as follows:\n\n- **guild ID** (Guild): The guild to get roles from (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildRoleCount added?", "Assistant": "$guildRoleCount was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildRoleCount nativly to forgescipt?", "Assistant": "Yes, $guildRoleCount is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildRoleIDs?", "Assistant": "Returns every role id of the guild\n\nExample usage:\n```js\n$guildRoleIDs[data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildRoleIDs?", "Assistant": "Use `$guildRoleIDs` like this:\n```js\n$guildRoleIDs[data;separator_example]\n```\n\nThis function returns every role id of the guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildRoleIDs in forgescript?", "Assistant": "Yes, You use `$guildRoleIDs` like this:\n```js\n$guildRoleIDs[data;separator_example]\n```\n\nThis function returns every role id of the guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildRoleIDs?", "Assistant": "The arguments for `$guildRoleIDs` are as follows:\n\n- **guild ID** (Guild): The guild to get role ids from (Required)\n- **separator** (String): The separator to use for every role (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildRoleIDs added?", "Assistant": "$guildRoleIDs was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildRoleIDs nativly to forgescipt?", "Assistant": "Yes, $guildRoleIDs is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildRulesChannelID?", "Assistant": "Returns the server's rules channel ID\n\nExample usage:\n```js\n$guildRulesChannelID[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildRulesChannelID?", "Assistant": "Use `$guildRulesChannelID` like this:\n```js\n$guildRulesChannelID[data]\n```\n\nThis function returns the server's rules channel id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildRulesChannelID in forgescript?", "Assistant": "Yes, You use `$guildRulesChannelID` like this:\n```js\n$guildRulesChannelID[data]\n```\n\nThis function returns the server's rules channel id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildRulesChannelID?", "Assistant": "The arguments for `$guildRulesChannelID` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildRulesChannelID added?", "Assistant": "$guildRulesChannelID was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildRulesChannelID nativly to forgescipt?", "Assistant": "Yes, $guildRulesChannelID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildSafetyAlertsChannelID?", "Assistant": "Returns the server's safety alerts channel ID\n\nExample usage:\n```js\n$guildSafetyAlertsChannelID[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildSafetyAlertsChannelID?", "Assistant": "Use `$guildSafetyAlertsChannelID` like this:\n```js\n$guildSafetyAlertsChannelID[data]\n```\n\nThis function returns the server's safety alerts channel id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildSafetyAlertsChannelID in forgescript?", "Assistant": "Yes, You use `$guildSafetyAlertsChannelID` like this:\n```js\n$guildSafetyAlertsChannelID[data]\n```\n\nThis function returns the server's safety alerts channel id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildSafetyAlertsChannelID?", "Assistant": "The arguments for `$guildSafetyAlertsChannelID` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildSafetyAlertsChannelID added?", "Assistant": "$guildSafetyAlertsChannelID was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildSafetyAlertsChannelID nativly to forgescipt?", "Assistant": "Yes, $guildSafetyAlertsChannelID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildShardID?", "Assistant": "Returns the server shard ID\n\nExample usage:\n```js\n$guildShardID[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildShardID?", "Assistant": "Use `$guildShardID` like this:\n```js\n$guildShardID[data]\n```\n\nThis function returns the server shard id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildShardID in forgescript?", "Assistant": "Yes, You use `$guildShardID` like this:\n```js\n$guildShardID[data]\n```\n\nThis function returns the server shard id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildShardID?", "Assistant": "The arguments for `$guildShardID` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildShardID added?", "Assistant": "$guildShardID was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildShardID nativly to forgescipt?", "Assistant": "Yes, $guildShardID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildSplashURL?", "Assistant": "Returns the guild splash url\n\nExample usage:\n```js\n$guildSplashURL[data;91;extension_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildSplashURL?", "Assistant": "Use `$guildSplashURL` like this:\n```js\n$guildSplashURL[data;91;extension_example]\n```\n\nThis function returns the guild splash url."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildSplashURL in forgescript?", "Assistant": "Yes, You use `$guildSplashURL` like this:\n```js\n$guildSplashURL[data;91;extension_example]\n```\n\nThis function returns the guild splash url."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildSplashURL?", "Assistant": "The arguments for `$guildSplashURL` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the splash (Required)\n- **size** (Number): The size to use for the image (Optional)\n- **extension** (String): The extension to use for the image (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildSplashURL added?", "Assistant": "$guildSplashURL was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildSplashURL nativly to forgescipt?", "Assistant": "Yes, $guildSplashURL is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildStickerIDs?", "Assistant": "Returns every sticker id of the guild\n\nExample usage:\n```js\n$guildStickerIDs[data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildStickerIDs?", "Assistant": "Use `$guildStickerIDs` like this:\n```js\n$guildStickerIDs[data;separator_example]\n```\n\nThis function returns every sticker id of the guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildStickerIDs in forgescript?", "Assistant": "Yes, You use `$guildStickerIDs` like this:\n```js\n$guildStickerIDs[data;separator_example]\n```\n\nThis function returns every sticker id of the guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildStickerIDs?", "Assistant": "The arguments for `$guildStickerIDs` are as follows:\n\n- **guild ID** (Guild): The guild to get sticker ids from (Required)\n- **separator** (String): The separator to use for every sticker (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildStickerIDs added?", "Assistant": "$guildStickerIDs was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildStickerIDs nativly to forgescipt?", "Assistant": "Yes, $guildStickerIDs is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildStickerLimit?", "Assistant": "Returns the sticker limit of a guild\n\nExample usage:\n```js\n$guildStickerLimit[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildStickerLimit?", "Assistant": "Use `$guildStickerLimit` like this:\n```js\n$guildStickerLimit[data]\n```\n\nThis function returns the sticker limit of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildStickerLimit in forgescript?", "Assistant": "Yes, You use `$guildStickerLimit` like this:\n```js\n$guildStickerLimit[data]\n```\n\nThis function returns the sticker limit of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildStickerLimit?", "Assistant": "The arguments for `$guildStickerLimit` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildStickerLimit added?", "Assistant": "$guildStickerLimit was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildStickerLimit nativly to forgescipt?", "Assistant": "Yes, $guildStickerLimit is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildSystemChannelID?", "Assistant": "Returns the server's system channel ID\n\nExample usage:\n```js\n$guildSystemChannelID[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildSystemChannelID?", "Assistant": "Use `$guildSystemChannelID` like this:\n```js\n$guildSystemChannelID[data]\n```\n\nThis function returns the server's system channel id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildSystemChannelID in forgescript?", "Assistant": "Yes, You use `$guildSystemChannelID` like this:\n```js\n$guildSystemChannelID[data]\n```\n\nThis function returns the server's system channel id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildSystemChannelID?", "Assistant": "The arguments for `$guildSystemChannelID` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildSystemChannelID added?", "Assistant": "$guildSystemChannelID was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildSystemChannelID nativly to forgescipt?", "Assistant": "Yes, $guildSystemChannelID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildTimedOutMembers?", "Assistant": "Returns all current timed out members of a guild\n\nExample usage:\n```js\n$guildTimedOutMembers[data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildTimedOutMembers?", "Assistant": "Use `$guildTimedOutMembers` like this:\n```js\n$guildTimedOutMembers[data;separator_example]\n```\n\nThis function returns all current timed out members of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildTimedOutMembers in forgescript?", "Assistant": "Yes, You use `$guildTimedOutMembers` like this:\n```js\n$guildTimedOutMembers[data;separator_example]\n```\n\nThis function returns all current timed out members of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildTimedOutMembers?", "Assistant": "The arguments for `$guildTimedOutMembers` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n- **separator** (String): The separator to use for every member (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildTimedOutMembers added?", "Assistant": "$guildTimedOutMembers was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildTimedOutMembers nativly to forgescipt?", "Assistant": "Yes, $guildTimedOutMembers is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildVanityCode?", "Assistant": "Returns the guilds vanity code\n\nExample usage:\n```js\n$guildVanityCode[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildVanityCode?", "Assistant": "Use `$guildVanityCode` like this:\n```js\n$guildVanityCode[data]\n```\n\nThis function returns the guilds vanity code."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildVanityCode in forgescript?", "Assistant": "Yes, You use `$guildVanityCode` like this:\n```js\n$guildVanityCode[data]\n```\n\nThis function returns the guilds vanity code."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildVanityCode?", "Assistant": "The arguments for `$guildVanityCode` are as follows:\n\n- **guild ID** (Guild): The guild to return its vanity code (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildVanityCode added?", "Assistant": "$guildVanityCode was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildVanityCode nativly to forgescipt?", "Assistant": "Yes, $guildVanityCode is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildVanityUses?", "Assistant": "Returns the guilds vanity uses\n\nExample usage:\n```js\n$guildVanityUses[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildVanityUses?", "Assistant": "Use `$guildVanityUses` like this:\n```js\n$guildVanityUses[data]\n```\n\nThis function returns the guilds vanity uses."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildVanityUses in forgescript?", "Assistant": "Yes, You use `$guildVanityUses` like this:\n```js\n$guildVanityUses[data]\n```\n\nThis function returns the guilds vanity uses."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildVanityUses?", "Assistant": "The arguments for `$guildVanityUses` are as follows:\n\n- **guild ID** (Guild): The guild to return its vanity uses (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildVanityUses added?", "Assistant": "$guildVanityUses was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildVanityUses nativly to forgescipt?", "Assistant": "Yes, $guildVanityUses is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildVerificationLevel?", "Assistant": "Returns the server verification level\n\nExample usage:\n```js\n$guildVerificationLevel[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildVerificationLevel?", "Assistant": "Use `$guildVerificationLevel` like this:\n```js\n$guildVerificationLevel[data]\n```\n\nThis function returns the server verification level."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildVerificationLevel in forgescript?", "Assistant": "Yes, You use `$guildVerificationLevel` like this:\n```js\n$guildVerificationLevel[data]\n```\n\nThis function returns the server verification level."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildVerificationLevel?", "Assistant": "The arguments for `$guildVerificationLevel` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildVerificationLevel added?", "Assistant": "$guildVerificationLevel was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildVerificationLevel nativly to forgescipt?", "Assistant": "Yes, $guildVerificationLevel is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildVerified?", "Assistant": "Returns whether the server is verified\n\nExample usage:\n```js\n$guildVerified[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildVerified?", "Assistant": "Use `$guildVerified` like this:\n```js\n$guildVerified[data]\n```\n\nThis function returns whether the server is verified."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildVerified in forgescript?", "Assistant": "Yes, You use `$guildVerified` like this:\n```js\n$guildVerified[data]\n```\n\nThis function returns whether the server is verified."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildVerified?", "Assistant": "The arguments for `$guildVerified` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildVerified added?", "Assistant": "$guildVerified was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildVerified nativly to forgescipt?", "Assistant": "Yes, $guildVerified is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildWidgetChannelEnabled?", "Assistant": "Returns whether widget channel is enabled for this guild\n\nExample usage:\n```js\n$guildWidgetChannelEnabled[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildWidgetChannelEnabled?", "Assistant": "Use `$guildWidgetChannelEnabled` like this:\n```js\n$guildWidgetChannelEnabled[data]\n```\n\nThis function returns whether widget channel is enabled for this guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildWidgetChannelEnabled in forgescript?", "Assistant": "Yes, You use `$guildWidgetChannelEnabled` like this:\n```js\n$guildWidgetChannelEnabled[data]\n```\n\nThis function returns whether widget channel is enabled for this guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildWidgetChannelEnabled?", "Assistant": "The arguments for `$guildWidgetChannelEnabled` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildWidgetChannelEnabled added?", "Assistant": "$guildWidgetChannelEnabled was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildWidgetChannelEnabled nativly to forgescipt?", "Assistant": "Yes, $guildWidgetChannelEnabled is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $guildWidgetChannelID?", "Assistant": "Returns the widget channel for this guild\n\nExample usage:\n```js\n$guildWidgetChannelID[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $guildWidgetChannelID?", "Assistant": "Use `$guildWidgetChannelID` like this:\n```js\n$guildWidgetChannelID[data]\n```\n\nThis function returns the widget channel for this guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildWidgetChannelID in forgescript?", "Assistant": "Yes, You use `$guildWidgetChannelID` like this:\n```js\n$guildWidgetChannelID[data]\n```\n\nThis function returns the widget channel for this guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $guildWidgetChannelID?", "Assistant": "The arguments for `$guildWidgetChannelID` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $guildWidgetChannelID added?", "Assistant": "$guildWidgetChannelID was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $guildWidgetChannelID nativly to forgescipt?", "Assistant": "Yes, $guildWidgetChannelID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $randomGuildID?", "Assistant": "Returns a random guild ID\n\nExample usage:\n```js\n$randomGuildID[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $randomGuildID?", "Assistant": "Use `$randomGuildID` like this:\n```js\n$randomGuildID[]\n```\n\nThis function returns a random guild id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $randomGuildID in forgescript?", "Assistant": "Yes, You use `$randomGuildID` like this:\n```js\n$randomGuildID[]\n```\n\nThis function returns a random guild id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $randomGuildID?", "Assistant": "The arguments for `$randomGuildID` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $randomGuildID added?", "Assistant": "$randomGuildID was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $randomGuildID nativly to forgescipt?", "Assistant": "Yes, $randomGuildID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $registerGuildApplicationCommands?", "Assistant": "Registers all application commands with type: 1 to a guild\n\nExample usage:\n```js\n$registerGuildApplicationCommands[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $registerGuildApplicationCommands?", "Assistant": "Use `$registerGuildApplicationCommands` like this:\n```js\n$registerGuildApplicationCommands[data]\n```\n\nThis function registers all application commands with type: 1 to a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $registerGuildApplicationCommands in forgescript?", "Assistant": "Yes, You use `$registerGuildApplicationCommands` like this:\n```js\n$registerGuildApplicationCommands[data]\n```\n\nThis function registers all application commands with type: 1 to a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $registerGuildApplicationCommands?", "Assistant": "The arguments for `$registerGuildApplicationCommands` are as follows:\n\n- **guild ID** (Guild): The guild to register commands to (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $registerGuildApplicationCommands added?", "Assistant": "$registerGuildApplicationCommands was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $registerGuildApplicationCommands nativly to forgescipt?", "Assistant": "Yes, $registerGuildApplicationCommands is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setGuildAFKChannel?", "Assistant": "Sets the AFK channel for a guild, returns bool\n\nExample usage:\n```js\n$setGuildAFKChannel[data;data;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setGuildAFKChannel?", "Assistant": "Use `$setGuildAFKChannel` like this:\n```js\n$setGuildAFKChannel[data;data;reason_example]\n```\n\nThis function sets the afk channel for a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildAFKChannel in forgescript?", "Assistant": "Yes, You use `$setGuildAFKChannel` like this:\n```js\n$setGuildAFKChannel[data;data;reason_example]\n```\n\nThis function sets the afk channel for a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setGuildAFKChannel?", "Assistant": "The arguments for `$setGuildAFKChannel` are as follows:\n\n- **guild ID** (Guild): The guild to set AFK channel for (Required)\n- **channel ID** (Channel): The new AFK channel (Optional)\n- **reason** (String): The reason for this action (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setGuildAFKChannel added?", "Assistant": "$setGuildAFKChannel was added in ForgeScript version 2.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildAFKChannel nativly to forgescipt?", "Assistant": "Yes, $setGuildAFKChannel is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setGuildAFKTimeout?", "Assistant": "Sets the AFK timeout for a guild, returns bool\n\nExample usage:\n```js\n$setGuildAFKTimeout[data;50;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setGuildAFKTimeout?", "Assistant": "Use `$setGuildAFKTimeout` like this:\n```js\n$setGuildAFKTimeout[data;50;reason_example]\n```\n\nThis function sets the afk timeout for a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildAFKTimeout in forgescript?", "Assistant": "Yes, You use `$setGuildAFKTimeout` like this:\n```js\n$setGuildAFKTimeout[data;50;reason_example]\n```\n\nThis function sets the afk timeout for a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setGuildAFKTimeout?", "Assistant": "The arguments for `$setGuildAFKTimeout` are as follows:\n\n- **guild ID** (Guild): The guild to set AFK timeout for (Required)\n- **seconds** (Number): The new AFK timeout in seconds (60, 300, 900, 1800, 3600) (Required)\n- **reason** (String): The reason for this action (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setGuildAFKTimeout added?", "Assistant": "$setGuildAFKTimeout was added in ForgeScript version 2.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildAFKTimeout nativly to forgescipt?", "Assistant": "Yes, $setGuildAFKTimeout is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setGuildBanner?", "Assistant": "Sets a guild banner, returns boolean\n\nExample usage:\n```js\n$setGuildBanner[data;url_example;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setGuildBanner?", "Assistant": "Use `$setGuildBanner` like this:\n```js\n$setGuildBanner[data;url_example;reason_example]\n```\n\nThis function sets a guild banner, returns boolean."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildBanner in forgescript?", "Assistant": "Yes, You use `$setGuildBanner` like this:\n```js\n$setGuildBanner[data;url_example;reason_example]\n```\n\nThis function sets a guild banner, returns boolean."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setGuildBanner?", "Assistant": "The arguments for `$setGuildBanner` are as follows:\n\n- **guild ID** (Guild): The guild to set banner on (Required)\n- **url** (String): The new banner (Optional)\n- **reason** (String): The reason for this action (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setGuildBanner added?", "Assistant": "$setGuildBanner was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildBanner nativly to forgescipt?", "Assistant": "Yes, $setGuildBanner is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setGuildBoostProgressBar?", "Assistant": "Sets a guild boost progress bar, returns bool\n\nExample usage:\n```js\n$setGuildBoostProgressBar[data;false;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setGuildBoostProgressBar?", "Assistant": "Use `$setGuildBoostProgressBar` like this:\n```js\n$setGuildBoostProgressBar[data;false;reason_example]\n```\n\nThis function sets a guild boost progress bar, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildBoostProgressBar in forgescript?", "Assistant": "Yes, You use `$setGuildBoostProgressBar` like this:\n```js\n$setGuildBoostProgressBar[data;false;reason_example]\n```\n\nThis function sets a guild boost progress bar, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setGuildBoostProgressBar?", "Assistant": "The arguments for `$setGuildBoostProgressBar` are as follows:\n\n- **guild ID** (Guild): The guild to set boost progress bar for (Required)\n- **enabled** (Boolean): Whether to enable the boost progress bar (Required)\n- **reason** (String): The reason for enabling/disabling boost progress bar (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setGuildBoostProgressBar added?", "Assistant": "$setGuildBoostProgressBar was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildBoostProgressBar nativly to forgescipt?", "Assistant": "Yes, $setGuildBoostProgressBar is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setGuildDefaultMessageNotifications?", "Assistant": "Sets the default message notifications setting for a guild, returns bool\n\nExample usage:\n```js\n$setGuildDefaultMessageNotifications[data;AllMessages;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setGuildDefaultMessageNotifications?", "Assistant": "Use `$setGuildDefaultMessageNotifications` like this:\n```js\n$setGuildDefaultMessageNotifications[data;AllMessages;reason_example]\n```\n\nThis function sets the default message notifications setting for a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildDefaultMessageNotifications in forgescript?", "Assistant": "Yes, You use `$setGuildDefaultMessageNotifications` like this:\n```js\n$setGuildDefaultMessageNotifications[data;AllMessages;reason_example]\n```\n\nThis function sets the default message notifications setting for a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setGuildDefaultMessageNotifications?", "Assistant": "The arguments for `$setGuildDefaultMessageNotifications` are as follows:\n\n- **guild ID** (Guild): The guild to set default message notifications for (Required)\n- **setting** (Enum): The new default message notifications setting (Optional)\n- **reason** (String): The reason for this action (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setGuildDefaultMessageNotifications added?", "Assistant": "$setGuildDefaultMessageNotifications was added in ForgeScript version 2.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildDefaultMessageNotifications nativly to forgescipt?", "Assistant": "Yes, $setGuildDefaultMessageNotifications is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setGuildDiscoverySplash?", "Assistant": "Sets the discovery splash for a guild, returns bool\n\nExample usage:\n```js\n$setGuildDiscoverySplash[data;url_example;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setGuildDiscoverySplash?", "Assistant": "Use `$setGuildDiscoverySplash` like this:\n```js\n$setGuildDiscoverySplash[data;url_example;reason_example]\n```\n\nThis function sets the discovery splash for a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildDiscoverySplash in forgescript?", "Assistant": "Yes, You use `$setGuildDiscoverySplash` like this:\n```js\n$setGuildDiscoverySplash[data;url_example;reason_example]\n```\n\nThis function sets the discovery splash for a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setGuildDiscoverySplash?", "Assistant": "The arguments for `$setGuildDiscoverySplash` are as follows:\n\n- **guild ID** (Guild): The guild to set discovery splash for (Required)\n- **url** (String): The new discovery splash (Optional)\n- **reason** (String): The reason for this action (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setGuildDiscoverySplash added?", "Assistant": "$setGuildDiscoverySplash was added in ForgeScript version 2.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildDiscoverySplash nativly to forgescipt?", "Assistant": "Yes, $setGuildDiscoverySplash is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setGuildExplicitContentFilter?", "Assistant": "Sets the explicit content filter for a guild, returns bool\n\nExample usage:\n```js\n$setGuildExplicitContentFilter[data;Disabled;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setGuildExplicitContentFilter?", "Assistant": "Use `$setGuildExplicitContentFilter` like this:\n```js\n$setGuildExplicitContentFilter[data;Disabled;reason_example]\n```\n\nThis function sets the explicit content filter for a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildExplicitContentFilter in forgescript?", "Assistant": "Yes, You use `$setGuildExplicitContentFilter` like this:\n```js\n$setGuildExplicitContentFilter[data;Disabled;reason_example]\n```\n\nThis function sets the explicit content filter for a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setGuildExplicitContentFilter?", "Assistant": "The arguments for `$setGuildExplicitContentFilter` are as follows:\n\n- **guild ID** (Guild): The guild to set explicit content filter for (Required)\n- **filter** (Enum): The new explicit content filter (Optional)\n- **reason** (String): The reason for this action (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setGuildExplicitContentFilter added?", "Assistant": "$setGuildExplicitContentFilter was added in ForgeScript version 2.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildExplicitContentFilter nativly to forgescipt?", "Assistant": "Yes, $setGuildExplicitContentFilter is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setGuildIcon?", "Assistant": "Sets a guild icon, returns boolean\n\nExample usage:\n```js\n$setGuildIcon[data;url_example;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setGuildIcon?", "Assistant": "Use `$setGuildIcon` like this:\n```js\n$setGuildIcon[data;url_example;reason_example]\n```\n\nThis function sets a guild icon, returns boolean."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildIcon in forgescript?", "Assistant": "Yes, You use `$setGuildIcon` like this:\n```js\n$setGuildIcon[data;url_example;reason_example]\n```\n\nThis function sets a guild icon, returns boolean."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setGuildIcon?", "Assistant": "The arguments for `$setGuildIcon` are as follows:\n\n- **guild ID** (Guild): The guild to set icon on (Required)\n- **url** (String): The new icon (Optional)\n- **reason** (String): The reason for this action (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setGuildIcon added?", "Assistant": "$setGuildIcon was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildIcon nativly to forgescipt?", "Assistant": "Yes, $setGuildIcon is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setGuildMFALevel?", "Assistant": "Sets the MFA level for a guild, returns bool\n\nExample usage:\n```js\n$setGuildMFALevel[data;Elevated;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setGuildMFALevel?", "Assistant": "Use `$setGuildMFALevel` like this:\n```js\n$setGuildMFALevel[data;Elevated;reason_example]\n```\n\nThis function sets the mfa level for a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildMFALevel in forgescript?", "Assistant": "Yes, You use `$setGuildMFALevel` like this:\n```js\n$setGuildMFALevel[data;Elevated;reason_example]\n```\n\nThis function sets the mfa level for a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setGuildMFALevel?", "Assistant": "The arguments for `$setGuildMFALevel` are as follows:\n\n- **guild ID** (Guild): The guild to set MFA level for (Required)\n- **level** (Enum): The new MFA level (Required)\n- **reason** (String): The reason for this action (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setGuildMFALevel added?", "Assistant": "$setGuildMFALevel was added in ForgeScript version 2.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildMFALevel nativly to forgescipt?", "Assistant": "Yes, $setGuildMFALevel is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setGuildName?", "Assistant": "Sets a guild name, returns boolean\n\nExample usage:\n```js\n$setGuildName[data;name_example;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setGuildName?", "Assistant": "Use `$setGuildName` like this:\n```js\n$setGuildName[data;name_example;reason_example]\n```\n\nThis function sets a guild name, returns boolean."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildName in forgescript?", "Assistant": "Yes, You use `$setGuildName` like this:\n```js\n$setGuildName[data;name_example;reason_example]\n```\n\nThis function sets a guild name, returns boolean."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setGuildName?", "Assistant": "The arguments for `$setGuildName` are as follows:\n\n- **guild ID** (Guild): The guild to set name (Required)\n- **name** (String): The new name (Required)\n- **reason** (String): The reason for this action (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setGuildName added?", "Assistant": "$setGuildName was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildName nativly to forgescipt?", "Assistant": "Yes, $setGuildName is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setGuildOwner?", "Assistant": "Sets the owner of a guild, returns bool\n\nExample usage:\n```js\n$setGuildOwner[data;data;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setGuildOwner?", "Assistant": "Use `$setGuildOwner` like this:\n```js\n$setGuildOwner[data;data;reason_example]\n```\n\nThis function sets the owner of a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildOwner in forgescript?", "Assistant": "Yes, You use `$setGuildOwner` like this:\n```js\n$setGuildOwner[data;data;reason_example]\n```\n\nThis function sets the owner of a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setGuildOwner?", "Assistant": "The arguments for `$setGuildOwner` are as follows:\n\n- **guild ID** (Guild): The guild to set owner on (Required)\n- **user ID** (Member): The new owner (Required)\n- **reason** (String): The reason for this action (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setGuildOwner added?", "Assistant": "$setGuildOwner was added in ForgeScript version 2.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildOwner nativly to forgescipt?", "Assistant": "Yes, $setGuildOwner is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setGuildPausedInvites?", "Assistant": "Sets a guild paused invite status, returns bool\n\nExample usage:\n```js\n$setGuildPausedInvites[data;true]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setGuildPausedInvites?", "Assistant": "Use `$setGuildPausedInvites` like this:\n```js\n$setGuildPausedInvites[data;true]\n```\n\nThis function sets a guild paused invite status, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildPausedInvites in forgescript?", "Assistant": "Yes, You use `$setGuildPausedInvites` like this:\n```js\n$setGuildPausedInvites[data;true]\n```\n\nThis function sets a guild paused invite status, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setGuildPausedInvites?", "Assistant": "The arguments for `$setGuildPausedInvites` are as follows:\n\n- **guild ID** (Guild): The guild to set paused invites for (Required)\n- **disabled** (Boolean): Whether to disable the invites (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setGuildPausedInvites added?", "Assistant": "$setGuildPausedInvites was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildPausedInvites nativly to forgescipt?", "Assistant": "Yes, $setGuildPausedInvites is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setGuildPreferredLocale?", "Assistant": "Sets the preferred locale of a guild, returns bool\n\nExample usage:\n```js\n$setGuildPreferredLocale[data;EnglishUS;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setGuildPreferredLocale?", "Assistant": "Use `$setGuildPreferredLocale` like this:\n```js\n$setGuildPreferredLocale[data;EnglishUS;reason_example]\n```\n\nThis function sets the preferred locale of a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildPreferredLocale in forgescript?", "Assistant": "Yes, You use `$setGuildPreferredLocale` like this:\n```js\n$setGuildPreferredLocale[data;EnglishUS;reason_example]\n```\n\nThis function sets the preferred locale of a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setGuildPreferredLocale?", "Assistant": "The arguments for `$setGuildPreferredLocale` are as follows:\n\n- **guild ID** (Guild): The guild to set preferred locale on (Required)\n- **locale** (Enum): The new preferred locale (Optional)\n- **reason** (String): The reason for this action (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setGuildPreferredLocale added?", "Assistant": "$setGuildPreferredLocale was added in ForgeScript version 2.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildPreferredLocale nativly to forgescipt?", "Assistant": "Yes, $setGuildPreferredLocale is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setGuildPublicUpdatesChannel?", "Assistant": "Sets the public updates channel for a guild, returns bool\n\nExample usage:\n```js\n$setGuildPublicUpdatesChannel[data;data;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setGuildPublicUpdatesChannel?", "Assistant": "Use `$setGuildPublicUpdatesChannel` like this:\n```js\n$setGuildPublicUpdatesChannel[data;data;reason_example]\n```\n\nThis function sets the public updates channel for a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildPublicUpdatesChannel in forgescript?", "Assistant": "Yes, You use `$setGuildPublicUpdatesChannel` like this:\n```js\n$setGuildPublicUpdatesChannel[data;data;reason_example]\n```\n\nThis function sets the public updates channel for a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setGuildPublicUpdatesChannel?", "Assistant": "The arguments for `$setGuildPublicUpdatesChannel` are as follows:\n\n- **guild ID** (Guild): The guild to set public updates channel for (Required)\n- **channel ID** (Channel): The new public updates channel (Optional)\n- **reason** (String): The reason for this action (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setGuildPublicUpdatesChannel added?", "Assistant": "$setGuildPublicUpdatesChannel was added in ForgeScript version 2.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildPublicUpdatesChannel nativly to forgescipt?", "Assistant": "Yes, $setGuildPublicUpdatesChannel is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setGuildRulesChannel?", "Assistant": "Sets the rules channel for a guild, returns bool\n\nExample usage:\n```js\n$setGuildRulesChannel[data;data;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setGuildRulesChannel?", "Assistant": "Use `$setGuildRulesChannel` like this:\n```js\n$setGuildRulesChannel[data;data;reason_example]\n```\n\nThis function sets the rules channel for a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildRulesChannel in forgescript?", "Assistant": "Yes, You use `$setGuildRulesChannel` like this:\n```js\n$setGuildRulesChannel[data;data;reason_example]\n```\n\nThis function sets the rules channel for a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setGuildRulesChannel?", "Assistant": "The arguments for `$setGuildRulesChannel` are as follows:\n\n- **guild ID** (Guild): The guild to set rules channel for (Required)\n- **channel ID** (Channel): The new rules channel (Optional)\n- **reason** (String): The reason for this action (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setGuildRulesChannel added?", "Assistant": "$setGuildRulesChannel was added in ForgeScript version 2.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildRulesChannel nativly to forgescipt?", "Assistant": "Yes, $setGuildRulesChannel is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setGuildSafetyAlertsChannel?", "Assistant": "Sets the safety alerts channel for a guild, returns bool\n\nExample usage:\n```js\n$setGuildSafetyAlertsChannel[data;data;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setGuildSafetyAlertsChannel?", "Assistant": "Use `$setGuildSafetyAlertsChannel` like this:\n```js\n$setGuildSafetyAlertsChannel[data;data;reason_example]\n```\n\nThis function sets the safety alerts channel for a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildSafetyAlertsChannel in forgescript?", "Assistant": "Yes, You use `$setGuildSafetyAlertsChannel` like this:\n```js\n$setGuildSafetyAlertsChannel[data;data;reason_example]\n```\n\nThis function sets the safety alerts channel for a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setGuildSafetyAlertsChannel?", "Assistant": "The arguments for `$setGuildSafetyAlertsChannel` are as follows:\n\n- **guild ID** (Guild): The guild to set safety alerts channel for (Required)\n- **channel ID** (Channel): The new safety alerts channel (Optional)\n- **reason** (String): The reason for this action (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setGuildSafetyAlertsChannel added?", "Assistant": "$setGuildSafetyAlertsChannel was added in ForgeScript version 2.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildSafetyAlertsChannel nativly to forgescipt?", "Assistant": "Yes, $setGuildSafetyAlertsChannel is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setGuildSplash?", "Assistant": "Sets a guild splash, returns boolean\n\nExample usage:\n```js\n$setGuildSplash[data;url_example;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setGuildSplash?", "Assistant": "Use `$setGuildSplash` like this:\n```js\n$setGuildSplash[data;url_example;reason_example]\n```\n\nThis function sets a guild splash, returns boolean."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildSplash in forgescript?", "Assistant": "Yes, You use `$setGuildSplash` like this:\n```js\n$setGuildSplash[data;url_example;reason_example]\n```\n\nThis function sets a guild splash, returns boolean."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setGuildSplash?", "Assistant": "The arguments for `$setGuildSplash` are as follows:\n\n- **guild ID** (Guild): The guild to set splash on (Required)\n- **url** (String): The new splash (Optional)\n- **reason** (String): The reason for this action (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setGuildSplash added?", "Assistant": "$setGuildSplash was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildSplash nativly to forgescipt?", "Assistant": "Yes, $setGuildSplash is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setGuildSystemChannel?", "Assistant": "Sets the system channel for a guild, returns bool\n\nExample usage:\n```js\n$setGuildSystemChannel[data;data;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setGuildSystemChannel?", "Assistant": "Use `$setGuildSystemChannel` like this:\n```js\n$setGuildSystemChannel[data;data;reason_example]\n```\n\nThis function sets the system channel for a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildSystemChannel in forgescript?", "Assistant": "Yes, You use `$setGuildSystemChannel` like this:\n```js\n$setGuildSystemChannel[data;data;reason_example]\n```\n\nThis function sets the system channel for a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setGuildSystemChannel?", "Assistant": "The arguments for `$setGuildSystemChannel` are as follows:\n\n- **guild ID** (Guild): The guild to set system channel for (Required)\n- **channel ID** (Channel): The new system channel (Optional)\n- **reason** (String): The reason for this action (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setGuildSystemChannel added?", "Assistant": "$setGuildSystemChannel was added in ForgeScript version 2.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildSystemChannel nativly to forgescipt?", "Assistant": "Yes, $setGuildSystemChannel is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setGuildVerificationLevel?", "Assistant": "Sets the verification level of a guild, returns bool\n\nExample usage:\n```js\n$setGuildVerificationLevel[data;None;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setGuildVerificationLevel?", "Assistant": "Use `$setGuildVerificationLevel` like this:\n```js\n$setGuildVerificationLevel[data;None;reason_example]\n```\n\nThis function sets the verification level of a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildVerificationLevel in forgescript?", "Assistant": "Yes, You use `$setGuildVerificationLevel` like this:\n```js\n$setGuildVerificationLevel[data;None;reason_example]\n```\n\nThis function sets the verification level of a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setGuildVerificationLevel?", "Assistant": "The arguments for `$setGuildVerificationLevel` are as follows:\n\n- **guild ID** (Guild): The guild to set verification level on (Required)\n- **level** (Enum): The new verification level (Optional)\n- **reason** (String): The reason for this action (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setGuildVerificationLevel added?", "Assistant": "$setGuildVerificationLevel was added in ForgeScript version 2.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildVerificationLevel nativly to forgescipt?", "Assistant": "Yes, $setGuildVerificationLevel is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setGuildWidgetSettings?", "Assistant": "Sets the widget settings of a guild, returns bool\n\nExample usage:\n```js\n$setGuildWidgetSettings[data;data;false;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setGuildWidgetSettings?", "Assistant": "Use `$setGuildWidgetSettings` like this:\n```js\n$setGuildWidgetSettings[data;data;false;reason_example]\n```\n\nThis function sets the widget settings of a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildWidgetSettings in forgescript?", "Assistant": "Yes, You use `$setGuildWidgetSettings` like this:\n```js\n$setGuildWidgetSettings[data;data;false;reason_example]\n```\n\nThis function sets the widget settings of a guild, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setGuildWidgetSettings?", "Assistant": "The arguments for `$setGuildWidgetSettings` are as follows:\n\n- **guild ID** (Guild): The guild to set widget settings on (Required)\n- **channel ID** (Channel): The invite channel for the widget (Optional)\n- **enabled** (Boolean): Whether to enable the widget (Optional)\n- **reason** (String): The reason for this action (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setGuildWidgetSettings added?", "Assistant": "$setGuildWidgetSettings was added in ForgeScript version 2.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setGuildWidgetSettings nativly to forgescipt?", "Assistant": "Yes, $setGuildWidgetSettings is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $httpAddForm?", "Assistant": "Adds form data to request\n\nExample usage:\n```js\n$httpAddForm[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $httpAddForm?", "Assistant": "Use `$httpAddForm` like this:\n```js\n$httpAddForm[]\n```\n\nThis function adds form data to request."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $httpAddForm in forgescript?", "Assistant": "Yes, You use `$httpAddForm` like this:\n```js\n$httpAddForm[]\n```\n\nThis function adds form data to request."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $httpAddForm?", "Assistant": "The arguments for `$httpAddForm` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $httpAddForm added?", "Assistant": "$httpAddForm was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $httpAddForm nativly to forgescipt?", "Assistant": "Yes, $httpAddForm is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $httpAddHeader?", "Assistant": "Adds an HTTP header\n\nExample usage:\n```js\n$httpAddHeader[name_example;value_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $httpAddHeader?", "Assistant": "Use `$httpAddHeader` like this:\n```js\n$httpAddHeader[name_example;value_example]\n```\n\nThis function adds an http header."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $httpAddHeader in forgescript?", "Assistant": "Yes, You use `$httpAddHeader` like this:\n```js\n$httpAddHeader[name_example;value_example]\n```\n\nThis function adds an http header."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $httpAddHeader?", "Assistant": "The arguments for `$httpAddHeader` are as follows:\n\n- **name** (String): The header name (Required)\n- **value** (String): The header value (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $httpAddHeader added?", "Assistant": "$httpAddHeader was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $httpAddHeader nativly to forgescipt?", "Assistant": "Yes, $httpAddHeader is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $httpAppendFile?", "Assistant": "Appends a file to form data\n\nExample usage:\n```js\n$httpAppendFile[key_example;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $httpAppendFile?", "Assistant": "Use `$httpAppendFile` like this:\n```js\n$httpAppendFile[key_example;data]\n```\n\nThis function appends a file to form data."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $httpAppendFile in forgescript?", "Assistant": "Yes, You use `$httpAppendFile` like this:\n```js\n$httpAppendFile[key_example;data]\n```\n\nThis function appends a file to form data."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $httpAppendFile?", "Assistant": "The arguments for `$httpAppendFile` are as follows:\n\n- **key** (String): The key name to add this value to (Required)\n- **url / path** (Attachment): The path or url to use (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $httpAppendFile added?", "Assistant": "$httpAppendFile was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $httpAppendFile nativly to forgescipt?", "Assistant": "Yes, $httpAppendFile is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $httpAppendValue?", "Assistant": "Appends a key-value to form data\n\nExample usage:\n```js\n$httpAppendValue[key_example;value_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $httpAppendValue?", "Assistant": "Use `$httpAppendValue` like this:\n```js\n$httpAppendValue[key_example;value_example]\n```\n\nThis function appends a key-value to form data."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $httpAppendValue in forgescript?", "Assistant": "Yes, You use `$httpAppendValue` like this:\n```js\n$httpAppendValue[key_example;value_example]\n```\n\nThis function appends a key-value to form data."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $httpAppendValue?", "Assistant": "The arguments for `$httpAppendValue` are as follows:\n\n- **key** (String): The key name to add this value to (Required)\n- **value** (String): The value to set (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $httpAppendValue added?", "Assistant": "$httpAppendValue was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $httpAppendValue nativly to forgescipt?", "Assistant": "Yes, $httpAppendValue is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $httpGetHeader?", "Assistant": "Gets an HTTP header\n\nExample usage:\n```js\n$httpGetHeader[name_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $httpGetHeader?", "Assistant": "Use `$httpGetHeader` like this:\n```js\n$httpGetHeader[name_example]\n```\n\nThis function gets an http header."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $httpGetHeader in forgescript?", "Assistant": "Yes, You use `$httpGetHeader` like this:\n```js\n$httpGetHeader[name_example]\n```\n\nThis function gets an http header."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $httpGetHeader?", "Assistant": "The arguments for `$httpGetHeader` are as follows:\n\n- **name** (String): The header name (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $httpGetHeader added?", "Assistant": "$httpGetHeader was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $httpGetHeader nativly to forgescipt?", "Assistant": "Yes, $httpGetHeader is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $httpPing?", "Assistant": "Returns the response time of the HTTP request\n\nExample usage:\n```js\n$httpPing[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $httpPing?", "Assistant": "Use `$httpPing` like this:\n```js\n$httpPing[]\n```\n\nThis function returns the response time of the http request."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $httpPing in forgescript?", "Assistant": "Yes, You use `$httpPing` like this:\n```js\n$httpPing[]\n```\n\nThis function returns the response time of the http request."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $httpPing?", "Assistant": "The arguments for `$httpPing` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $httpPing added?", "Assistant": "$httpPing was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $httpPing nativly to forgescipt?", "Assistant": "Yes, $httpPing is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $httpRemoveHeader?", "Assistant": "Removes an HTTP header\n\nExample usage:\n```js\n$httpRemoveHeader[name_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $httpRemoveHeader?", "Assistant": "Use `$httpRemoveHeader` like this:\n```js\n$httpRemoveHeader[name_example]\n```\n\nThis function removes an http header."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $httpRemoveHeader in forgescript?", "Assistant": "Yes, You use `$httpRemoveHeader` like this:\n```js\n$httpRemoveHeader[name_example]\n```\n\nThis function removes an http header."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $httpRemoveHeader?", "Assistant": "The arguments for `$httpRemoveHeader` are as follows:\n\n- **name** (String): The header name (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $httpRemoveHeader added?", "Assistant": "$httpRemoveHeader was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $httpRemoveHeader nativly to forgescipt?", "Assistant": "Yes, $httpRemoveHeader is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $httpRequest?", "Assistant": "Performs an http request, returns the status code\n\nExample usage:\n```js\n$httpRequest[url_example;method_example;variable_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $httpRequest?", "Assistant": "Use `$httpRequest` like this:\n```js\n$httpRequest[url_example;method_example;variable_example]\n```\n\nThis function performs an http request, returns the status code."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $httpRequest in forgescript?", "Assistant": "Yes, You use `$httpRequest` like this:\n```js\n$httpRequest[url_example;method_example;variable_example]\n```\n\nThis function performs an http request, returns the status code."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $httpRequest?", "Assistant": "The arguments for `$httpRequest` are as follows:\n\n- **url** (String): The url to perform this request to (Required)\n- **method** (String): The method to use (Required)\n- **variable** (String): Environment variable name to load the response to (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $httpRequest added?", "Assistant": "$httpRequest was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $httpRequest nativly to forgescipt?", "Assistant": "Yes, $httpRequest is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $httpResult?", "Assistant": "Retrieve an http result value\n\nExample usage:\n```js\n$httpResult[key_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $httpResult?", "Assistant": "Use `$httpResult` like this:\n```js\n$httpResult[key_example]\n```\n\nThis function retrieve an http result value."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $httpResult in forgescript?", "Assistant": "Yes, You use `$httpResult` like this:\n```js\n$httpResult[key_example]\n```\n\nThis function retrieve an http result value."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $httpResult?", "Assistant": "The arguments for `$httpResult` are as follows:\n\n- **key** (String): The key to return its value (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $httpResult added?", "Assistant": "$httpResult was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $httpResult nativly to forgescipt?", "Assistant": "Yes, $httpResult is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $httpSetBody?", "Assistant": "Sets a JSON body for the request\n\nExample usage:\n```js\n$httpSetBody[{key: body_value}]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $httpSetBody?", "Assistant": "Use `$httpSetBody` like this:\n```js\n$httpSetBody[{key: body_value}]\n```\n\nThis function sets a json body for the request."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $httpSetBody in forgescript?", "Assistant": "Yes, You use `$httpSetBody` like this:\n```js\n$httpSetBody[{key: body_value}]\n```\n\nThis function sets a json body for the request."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $httpSetBody?", "Assistant": "The arguments for `$httpSetBody` are as follows:\n\n- **body** (Json): The JSON body (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $httpSetBody added?", "Assistant": "$httpSetBody was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $httpSetBody nativly to forgescipt?", "Assistant": "Yes, $httpSetBody is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $httpSetContentType?", "Assistant": "Forces the http request to be decoded using given content type\n\nExample usage:\n```js\n$httpSetContentType[Text]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $httpSetContentType?", "Assistant": "Use `$httpSetContentType` like this:\n```js\n$httpSetContentType[Text]\n```\n\nThis function forces the http request to be decoded using given content type."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $httpSetContentType in forgescript?", "Assistant": "Yes, You use `$httpSetContentType` like this:\n```js\n$httpSetContentType[Text]\n```\n\nThis function forces the http request to be decoded using given content type."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $httpSetContentType?", "Assistant": "The arguments for `$httpSetContentType` are as follows:\n\n- **type** (Enum): The content type of the result (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $httpSetContentType added?", "Assistant": "$httpSetContentType was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $httpSetContentType nativly to forgescipt?", "Assistant": "Yes, $httpSetContentType is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $applicationCommandDescription?", "Assistant": "Returns an application command description\n\nExample usage:\n```js\n$applicationCommandDescription[id_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $applicationCommandDescription?", "Assistant": "Use `$applicationCommandDescription` like this:\n```js\n$applicationCommandDescription[id_example]\n```\n\nThis function returns an application command description."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $applicationCommandDescription in forgescript?", "Assistant": "Yes, You use `$applicationCommandDescription` like this:\n```js\n$applicationCommandDescription[id_example]\n```\n\nThis function returns an application command description."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $applicationCommandDescription?", "Assistant": "The arguments for `$applicationCommandDescription` are as follows:\n\n- **id** (String): The id of the command to pull its description (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $applicationCommandDescription added?", "Assistant": "$applicationCommandDescription was added in ForgeScript version 1.0.7."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $applicationCommandDescription nativly to forgescipt?", "Assistant": "Yes, $applicationCommandDescription is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $applicationCommandDisplay?", "Assistant": "Gets the full command interaction with all options\n\nExample usage:\n```js\n$applicationCommandDisplay[false]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $applicationCommandDisplay?", "Assistant": "Use `$applicationCommandDisplay` like this:\n```js\n$applicationCommandDisplay[false]\n```\n\nThis function gets the full command interaction with all options."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $applicationCommandDisplay in forgescript?", "Assistant": "Yes, You use `$applicationCommandDisplay` like this:\n```js\n$applicationCommandDisplay[false]\n```\n\nThis function gets the full command interaction with all options."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $applicationCommandDisplay?", "Assistant": "The arguments for `$applicationCommandDisplay` are as follows:\n\n- **hide option name** (Boolean): Whether to suppress option names from being displayed (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $applicationCommandDisplay added?", "Assistant": "$applicationCommandDisplay was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $applicationCommandDisplay nativly to forgescipt?", "Assistant": "Yes, $applicationCommandDisplay is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $applicationCommandID?", "Assistant": "Returns the application command id\n\nExample usage:\n```js\n$applicationCommandID[name_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $applicationCommandID?", "Assistant": "Use `$applicationCommandID` like this:\n```js\n$applicationCommandID[name_example]\n```\n\nThis function returns the application command id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $applicationCommandID in forgescript?", "Assistant": "Yes, You use `$applicationCommandID` like this:\n```js\n$applicationCommandID[name_example]\n```\n\nThis function returns the application command id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $applicationCommandID?", "Assistant": "The arguments for `$applicationCommandID` are as follows:\n\n- **name** (String): The name of the command to pull its id (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $applicationCommandID added?", "Assistant": "$applicationCommandID was added in ForgeScript version 1.0.7."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $applicationCommandID nativly to forgescipt?", "Assistant": "Yes, $applicationCommandID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $applicationCommandName?", "Assistant": "Returns an application command name\n\nExample usage:\n```js\n$applicationCommandName[id_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $applicationCommandName?", "Assistant": "Use `$applicationCommandName` like this:\n```js\n$applicationCommandName[id_example]\n```\n\nThis function returns an application command name."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $applicationCommandName in forgescript?", "Assistant": "Yes, You use `$applicationCommandName` like this:\n```js\n$applicationCommandName[id_example]\n```\n\nThis function returns an application command name."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $applicationCommandName?", "Assistant": "The arguments for `$applicationCommandName` are as follows:\n\n- **id** (String): The id of the command to pull its name (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $applicationCommandName added?", "Assistant": "$applicationCommandName was added in ForgeScript version 1.0.7."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $applicationCommandName nativly to forgescipt?", "Assistant": "Yes, $applicationCommandName is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $applicationCommandOptions?", "Assistant": "Returns an application command options in JSON format\n\nExample usage:\n```js\n$applicationCommandOptions[id_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $applicationCommandOptions?", "Assistant": "Use `$applicationCommandOptions` like this:\n```js\n$applicationCommandOptions[id_example]\n```\n\nThis function returns an application command options in json format."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $applicationCommandOptions in forgescript?", "Assistant": "Yes, You use `$applicationCommandOptions` like this:\n```js\n$applicationCommandOptions[id_example]\n```\n\nThis function returns an application command options in json format."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $applicationCommandOptions?", "Assistant": "The arguments for `$applicationCommandOptions` are as follows:\n\n- **id** (String): The id of the command to pull its options (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $applicationCommandOptions added?", "Assistant": "$applicationCommandOptions was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $applicationCommandOptions nativly to forgescipt?", "Assistant": "Yes, $applicationCommandOptions is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $applicationSubCommandGroupName?", "Assistant": "Returns the application sub command group name of this interaction\n\nExample usage:\n```js\n$applicationSubCommandGroupName[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $applicationSubCommandGroupName?", "Assistant": "Use `$applicationSubCommandGroupName` like this:\n```js\n$applicationSubCommandGroupName[]\n```\n\nThis function returns the application sub command group name of this interaction."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $applicationSubCommandGroupName in forgescript?", "Assistant": "Yes, You use `$applicationSubCommandGroupName` like this:\n```js\n$applicationSubCommandGroupName[]\n```\n\nThis function returns the application sub command group name of this interaction."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $applicationSubCommandGroupName?", "Assistant": "The arguments for `$applicationSubCommandGroupName` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $applicationSubCommandGroupName added?", "Assistant": "$applicationSubCommandGroupName was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $applicationSubCommandGroupName nativly to forgescipt?", "Assistant": "Yes, $applicationSubCommandGroupName is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $applicationSubCommandName?", "Assistant": "Returns the application sub command name of this interaction\n\nExample usage:\n```js\n$applicationSubCommandName[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $applicationSubCommandName?", "Assistant": "Use `$applicationSubCommandName` like this:\n```js\n$applicationSubCommandName[]\n```\n\nThis function returns the application sub command name of this interaction."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $applicationSubCommandName in forgescript?", "Assistant": "Yes, You use `$applicationSubCommandName` like this:\n```js\n$applicationSubCommandName[]\n```\n\nThis function returns the application sub command name of this interaction."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $applicationSubCommandName?", "Assistant": "The arguments for `$applicationSubCommandName` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $applicationSubCommandName added?", "Assistant": "$applicationSubCommandName was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $applicationSubCommandName nativly to forgescipt?", "Assistant": "Yes, $applicationSubCommandName is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $authorizingIntegrationOwners?", "Assistant": "Returns the authorizing integration owners of this interaction\n\nExample usage:\n```js\n$authorizingIntegrationOwners[Guild]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $authorizingIntegrationOwners?", "Assistant": "Use `$authorizingIntegrationOwners` like this:\n```js\n$authorizingIntegrationOwners[Guild]\n```\n\nThis function returns the authorizing integration owners of this interaction."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $authorizingIntegrationOwners in forgescript?", "Assistant": "Yes, You use `$authorizingIntegrationOwners` like this:\n```js\n$authorizingIntegrationOwners[Guild]\n```\n\nThis function returns the authorizing integration owners of this interaction."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $authorizingIntegrationOwners?", "Assistant": "The arguments for `$authorizingIntegrationOwners` are as follows:\n\n- **type** (Enum): The type of authorizing integration owners to return (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $authorizingIntegrationOwners added?", "Assistant": "$authorizingIntegrationOwners was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $authorizingIntegrationOwners nativly to forgescipt?", "Assistant": "Yes, $authorizingIntegrationOwners is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $autocomplete?", "Assistant": "Forces autocomplete response\n\nExample usage:\n```js\n$autocomplete[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $autocomplete?", "Assistant": "Use `$autocomplete` like this:\n```js\n$autocomplete[]\n```\n\nThis function forces autocomplete response."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $autocomplete in forgescript?", "Assistant": "Yes, You use `$autocomplete` like this:\n```js\n$autocomplete[]\n```\n\nThis function forces autocomplete response."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $autocomplete?", "Assistant": "The arguments for `$autocomplete` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $autocomplete added?", "Assistant": "$autocomplete was added in ForgeScript version 1.0.6."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $autocomplete nativly to forgescipt?", "Assistant": "Yes, $autocomplete is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $context?", "Assistant": "Returns the context of this interaction\n\nExample usage:\n```js\n$context[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $context?", "Assistant": "Use `$context` like this:\n```js\n$context[]\n```\n\nThis function returns the context of this interaction."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $context in forgescript?", "Assistant": "Yes, You use `$context` like this:\n```js\n$context[]\n```\n\nThis function returns the context of this interaction."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $context?", "Assistant": "The arguments for `$context` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $context added?", "Assistant": "$context was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $context nativly to forgescipt?", "Assistant": "Yes, $context is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $customID?", "Assistant": "Retrieves the custom id of the interaction\n\nExample usage:\n```js\n$customID[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $customID?", "Assistant": "Use `$customID` like this:\n```js\n$customID[]\n```\n\nThis function retrieves the custom id of the interaction."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $customID in forgescript?", "Assistant": "Yes, You use `$customID` like this:\n```js\n$customID[]\n```\n\nThis function retrieves the custom id of the interaction."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $customID?", "Assistant": "The arguments for `$customID` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $customID added?", "Assistant": "$customID was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $customID nativly to forgescipt?", "Assistant": "Yes, $customID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $defer?", "Assistant": "Defers this interaction\n\nExample usage:\n```js\n$defer[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $defer?", "Assistant": "Use `$defer` like this:\n```js\n$defer[]\n```\n\nThis function defers this interaction."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $defer in forgescript?", "Assistant": "Yes, You use `$defer` like this:\n```js\n$defer[]\n```\n\nThis function defers this interaction."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $defer?", "Assistant": "The arguments for `$defer` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $defer added?", "Assistant": "$defer was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $defer nativly to forgescipt?", "Assistant": "Yes, $defer is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $deferUpdate?", "Assistant": "Defers this interaction as an update\n\nExample usage:\n```js\n$deferUpdate[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $deferUpdate?", "Assistant": "Use `$deferUpdate` like this:\n```js\n$deferUpdate[]\n```\n\nThis function defers this interaction as an update."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deferUpdate in forgescript?", "Assistant": "Yes, You use `$deferUpdate` like this:\n```js\n$deferUpdate[]\n```\n\nThis function defers this interaction as an update."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $deferUpdate?", "Assistant": "The arguments for `$deferUpdate` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $deferUpdate added?", "Assistant": "$deferUpdate was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deferUpdate nativly to forgescipt?", "Assistant": "Yes, $deferUpdate is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $ephemeral?", "Assistant": "Marks this reply as ephemeral\n\nExample usage:\n```js\n$ephemeral[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $ephemeral?", "Assistant": "Use `$ephemeral` like this:\n```js\n$ephemeral[]\n```\n\nThis function marks this reply as ephemeral."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $ephemeral in forgescript?", "Assistant": "Yes, You use `$ephemeral` like this:\n```js\n$ephemeral[]\n```\n\nThis function marks this reply as ephemeral."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $ephemeral?", "Assistant": "The arguments for `$ephemeral` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $ephemeral added?", "Assistant": "$ephemeral was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $ephemeral nativly to forgescipt?", "Assistant": "Yes, $ephemeral is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $focusedOptionName?", "Assistant": "Returns the focused option of the command\n\nExample usage:\n```js\n$focusedOptionName[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $focusedOptionName?", "Assistant": "Use `$focusedOptionName` like this:\n```js\n$focusedOptionName[]\n```\n\nThis function returns the focused option of the command."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $focusedOptionName in forgescript?", "Assistant": "Yes, You use `$focusedOptionName` like this:\n```js\n$focusedOptionName[]\n```\n\nThis function returns the focused option of the command."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $focusedOptionName?", "Assistant": "The arguments for `$focusedOptionName` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $focusedOptionName added?", "Assistant": "$focusedOptionName was added in ForgeScript version 1.0.6."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $focusedOptionName nativly to forgescipt?", "Assistant": "Yes, $focusedOptionName is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $focusedOptionValue?", "Assistant": "Returns the focused option value of the command\n\nExample usage:\n```js\n$focusedOptionValue[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $focusedOptionValue?", "Assistant": "Use `$focusedOptionValue` like this:\n```js\n$focusedOptionValue[]\n```\n\nThis function returns the focused option value of the command."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $focusedOptionValue in forgescript?", "Assistant": "Yes, You use `$focusedOptionValue` like this:\n```js\n$focusedOptionValue[]\n```\n\nThis function returns the focused option value of the command."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $focusedOptionValue?", "Assistant": "The arguments for `$focusedOptionValue` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $focusedOptionValue added?", "Assistant": "$focusedOptionValue was added in ForgeScript version 1.0.6."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $focusedOptionValue nativly to forgescipt?", "Assistant": "Yes, $focusedOptionValue is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $input?", "Assistant": "Returns a value from a text field\n\nExample usage:\n```js\n$input[custom_ID_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $input?", "Assistant": "Use `$input` like this:\n```js\n$input[custom_ID_example]\n```\n\nThis function returns a value from a text field."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $input in forgescript?", "Assistant": "Yes, You use `$input` like this:\n```js\n$input[custom_ID_example]\n```\n\nThis function returns a value from a text field."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $input?", "Assistant": "The arguments for `$input` are as follows:\n\n- **custom ID** (String): The custom id to get the input field value (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $input added?", "Assistant": "$input was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $input nativly to forgescipt?", "Assistant": "Yes, $input is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $interactionDelete?", "Assistant": "Deletes this interaction's reply\n\nExample usage:\n```js\n$interactionDelete[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $interactionDelete?", "Assistant": "Use `$interactionDelete` like this:\n```js\n$interactionDelete[]\n```\n\nThis function deletes this interaction's reply."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $interactionDelete in forgescript?", "Assistant": "Yes, You use `$interactionDelete` like this:\n```js\n$interactionDelete[]\n```\n\nThis function deletes this interaction's reply."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $interactionDelete?", "Assistant": "The arguments for `$interactionDelete` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $interactionDelete added?", "Assistant": "$interactionDelete was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $interactionDelete nativly to forgescipt?", "Assistant": "Yes, $interactionDelete is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $interactionFollowUp?", "Assistant": "Forces an interaction follow up\n\nExample usage:\n```js\n$interactionFollowUp[content_example;true]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $interactionFollowUp?", "Assistant": "Use `$interactionFollowUp` like this:\n```js\n$interactionFollowUp[content_example;true]\n```\n\nThis function forces an interaction follow up."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $interactionFollowUp in forgescript?", "Assistant": "Yes, You use `$interactionFollowUp` like this:\n```js\n$interactionFollowUp[content_example;true]\n```\n\nThis function forces an interaction follow up."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $interactionFollowUp?", "Assistant": "The arguments for `$interactionFollowUp` are as follows:\n\n- **content** (String): The content to use for this follow up (Required)\n- **return message ID** (Boolean): Whether to fetch and return the message id of the follow up (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $interactionFollowUp added?", "Assistant": "$interactionFollowUp was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $interactionFollowUp nativly to forgescipt?", "Assistant": "Yes, $interactionFollowUp is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $interactionRawData?", "Assistant": "Returns the raw data of this interaction\n\nExample usage:\n```js\n$interactionRawData[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $interactionRawData?", "Assistant": "Use `$interactionRawData` like this:\n```js\n$interactionRawData[]\n```\n\nThis function returns the raw data of this interaction."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $interactionRawData in forgescript?", "Assistant": "Yes, You use `$interactionRawData` like this:\n```js\n$interactionRawData[]\n```\n\nThis function returns the raw data of this interaction."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $interactionRawData?", "Assistant": "The arguments for `$interactionRawData` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $interactionRawData added?", "Assistant": "$interactionRawData was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $interactionRawData nativly to forgescipt?", "Assistant": "Yes, $interactionRawData is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $interactionReply?", "Assistant": "Forces an interaction reply\n\nExample usage:\n```js\n$interactionReply[content_example;true]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $interactionReply?", "Assistant": "Use `$interactionReply` like this:\n```js\n$interactionReply[content_example;true]\n```\n\nThis function forces an interaction reply."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $interactionReply in forgescript?", "Assistant": "Yes, You use `$interactionReply` like this:\n```js\n$interactionReply[content_example;true]\n```\n\nThis function forces an interaction reply."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $interactionReply?", "Assistant": "The arguments for `$interactionReply` are as follows:\n\n- **content** (String): The content to use for this response (Required)\n- **return message ID** (Boolean): Whether to fetch and return the message id of the reply (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $interactionReply added?", "Assistant": "$interactionReply was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $interactionReply nativly to forgescipt?", "Assistant": "Yes, $interactionReply is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $interactionRequirePremium?", "Assistant": "Requires premium to use this interaction\n\nExample usage:\n```js\n$interactionRequirePremium[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $interactionRequirePremium?", "Assistant": "Use `$interactionRequirePremium` like this:\n```js\n$interactionRequirePremium[]\n```\n\nThis function requires premium to use this interaction."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $interactionRequirePremium in forgescript?", "Assistant": "Yes, You use `$interactionRequirePremium` like this:\n```js\n$interactionRequirePremium[]\n```\n\nThis function requires premium to use this interaction."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $interactionRequirePremium?", "Assistant": "The arguments for `$interactionRequirePremium` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $interactionRequirePremium added?", "Assistant": "$interactionRequirePremium was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $interactionRequirePremium nativly to forgescipt?", "Assistant": "Yes, $interactionRequirePremium is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $interactionUpdate?", "Assistant": "Forces an interaction update\n\nExample usage:\n```js\n$interactionUpdate[content_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $interactionUpdate?", "Assistant": "Use `$interactionUpdate` like this:\n```js\n$interactionUpdate[content_example]\n```\n\nThis function forces an interaction update."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $interactionUpdate in forgescript?", "Assistant": "Yes, You use `$interactionUpdate` like this:\n```js\n$interactionUpdate[content_example]\n```\n\nThis function forces an interaction update."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $interactionUpdate?", "Assistant": "The arguments for `$interactionUpdate` are as follows:\n\n- **content** (String): The content to use for this response (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $interactionUpdate added?", "Assistant": "$interactionUpdate was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $interactionUpdate nativly to forgescipt?", "Assistant": "Yes, $interactionUpdate is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isAnySelectMenu?", "Assistant": "Returns whether the context is a select menu\n\nExample usage:\n```js\n$isAnySelectMenu[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isAnySelectMenu?", "Assistant": "Use `$isAnySelectMenu` like this:\n```js\n$isAnySelectMenu[]\n```\n\nThis function returns whether the context is a select menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isAnySelectMenu in forgescript?", "Assistant": "Yes, You use `$isAnySelectMenu` like this:\n```js\n$isAnySelectMenu[]\n```\n\nThis function returns whether the context is a select menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isAnySelectMenu?", "Assistant": "The arguments for `$isAnySelectMenu` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isAnySelectMenu added?", "Assistant": "$isAnySelectMenu was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isAnySelectMenu nativly to forgescipt?", "Assistant": "Yes, $isAnySelectMenu is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isAutocomplete?", "Assistant": "Returns whether the interaction is autocomplete\n\nExample usage:\n```js\n$isAutocomplete[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isAutocomplete?", "Assistant": "Use `$isAutocomplete` like this:\n```js\n$isAutocomplete[]\n```\n\nThis function returns whether the interaction is autocomplete."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isAutocomplete in forgescript?", "Assistant": "Yes, You use `$isAutocomplete` like this:\n```js\n$isAutocomplete[]\n```\n\nThis function returns whether the interaction is autocomplete."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isAutocomplete?", "Assistant": "The arguments for `$isAutocomplete` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isAutocomplete added?", "Assistant": "$isAutocomplete was added in ForgeScript version 1.0.6."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isAutocomplete nativly to forgescipt?", "Assistant": "Yes, $isAutocomplete is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isButton?", "Assistant": "Returns whether the interaction is a button\n\nExample usage:\n```js\n$isButton[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isButton?", "Assistant": "Use `$isButton` like this:\n```js\n$isButton[]\n```\n\nThis function returns whether the interaction is a button."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isButton in forgescript?", "Assistant": "Yes, You use `$isButton` like this:\n```js\n$isButton[]\n```\n\nThis function returns whether the interaction is a button."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isButton?", "Assistant": "The arguments for `$isButton` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isButton added?", "Assistant": "$isButton was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isButton nativly to forgescipt?", "Assistant": "Yes, $isButton is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isChannelSelectMenu?", "Assistant": "Returns whether the context is a channel select menu\n\nExample usage:\n```js\n$isChannelSelectMenu[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isChannelSelectMenu?", "Assistant": "Use `$isChannelSelectMenu` like this:\n```js\n$isChannelSelectMenu[]\n```\n\nThis function returns whether the context is a channel select menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isChannelSelectMenu in forgescript?", "Assistant": "Yes, You use `$isChannelSelectMenu` like this:\n```js\n$isChannelSelectMenu[]\n```\n\nThis function returns whether the context is a channel select menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isChannelSelectMenu?", "Assistant": "The arguments for `$isChannelSelectMenu` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isChannelSelectMenu added?", "Assistant": "$isChannelSelectMenu was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isChannelSelectMenu nativly to forgescipt?", "Assistant": "Yes, $isChannelSelectMenu is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isCommand?", "Assistant": "Returns whether the interaction is a command\n\nExample usage:\n```js\n$isCommand[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isCommand?", "Assistant": "Use `$isCommand` like this:\n```js\n$isCommand[]\n```\n\nThis function returns whether the interaction is a command."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isCommand in forgescript?", "Assistant": "Yes, You use `$isCommand` like this:\n```js\n$isCommand[]\n```\n\nThis function returns whether the interaction is a command."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isCommand?", "Assistant": "The arguments for `$isCommand` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isCommand added?", "Assistant": "$isCommand was added in ForgeScript version 1.0.6."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isCommand nativly to forgescipt?", "Assistant": "Yes, $isCommand is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isContextMenu?", "Assistant": "Returns whether the interaction is a context menu\n\nExample usage:\n```js\n$isContextMenu[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isContextMenu?", "Assistant": "Use `$isContextMenu` like this:\n```js\n$isContextMenu[]\n```\n\nThis function returns whether the interaction is a context menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isContextMenu in forgescript?", "Assistant": "Yes, You use `$isContextMenu` like this:\n```js\n$isContextMenu[]\n```\n\nThis function returns whether the interaction is a context menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isContextMenu?", "Assistant": "The arguments for `$isContextMenu` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isContextMenu added?", "Assistant": "$isContextMenu was added in ForgeScript version 1.0.6."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isContextMenu nativly to forgescipt?", "Assistant": "Yes, $isContextMenu is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isMentionableSelectMenu?", "Assistant": "Returns whether the context is a mentionable select menu\n\nExample usage:\n```js\n$isMentionableSelectMenu[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isMentionableSelectMenu?", "Assistant": "Use `$isMentionableSelectMenu` like this:\n```js\n$isMentionableSelectMenu[]\n```\n\nThis function returns whether the context is a mentionable select menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isMentionableSelectMenu in forgescript?", "Assistant": "Yes, You use `$isMentionableSelectMenu` like this:\n```js\n$isMentionableSelectMenu[]\n```\n\nThis function returns whether the context is a mentionable select menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isMentionableSelectMenu?", "Assistant": "The arguments for `$isMentionableSelectMenu` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isMentionableSelectMenu added?", "Assistant": "$isMentionableSelectMenu was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isMentionableSelectMenu nativly to forgescipt?", "Assistant": "Yes, $isMentionableSelectMenu is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isModal?", "Assistant": "Returns whether the context is a modal\n\nExample usage:\n```js\n$isModal[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isModal?", "Assistant": "Use `$isModal` like this:\n```js\n$isModal[]\n```\n\nThis function returns whether the context is a modal."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isModal in forgescript?", "Assistant": "Yes, You use `$isModal` like this:\n```js\n$isModal[]\n```\n\nThis function returns whether the context is a modal."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isModal?", "Assistant": "The arguments for `$isModal` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isModal added?", "Assistant": "$isModal was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isModal nativly to forgescipt?", "Assistant": "Yes, $isModal is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isRepliable?", "Assistant": "Returns whether this interaction can be replied to\n\nExample usage:\n```js\n$isRepliable[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isRepliable?", "Assistant": "Use `$isRepliable` like this:\n```js\n$isRepliable[]\n```\n\nThis function returns whether this interaction can be replied to."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isRepliable in forgescript?", "Assistant": "Yes, You use `$isRepliable` like this:\n```js\n$isRepliable[]\n```\n\nThis function returns whether this interaction can be replied to."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isRepliable?", "Assistant": "The arguments for `$isRepliable` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isRepliable added?", "Assistant": "$isRepliable was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isRepliable nativly to forgescipt?", "Assistant": "Yes, $isRepliable is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isRoleSelectMenu?", "Assistant": "Returns whether the context is a role select menu\n\nExample usage:\n```js\n$isRoleSelectMenu[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isRoleSelectMenu?", "Assistant": "Use `$isRoleSelectMenu` like this:\n```js\n$isRoleSelectMenu[]\n```\n\nThis function returns whether the context is a role select menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isRoleSelectMenu in forgescript?", "Assistant": "Yes, You use `$isRoleSelectMenu` like this:\n```js\n$isRoleSelectMenu[]\n```\n\nThis function returns whether the context is a role select menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isRoleSelectMenu?", "Assistant": "The arguments for `$isRoleSelectMenu` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isRoleSelectMenu added?", "Assistant": "$isRoleSelectMenu was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isRoleSelectMenu nativly to forgescipt?", "Assistant": "Yes, $isRoleSelectMenu is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isSlashCommand?", "Assistant": "Returns whether the interaction is a slash command\n\nExample usage:\n```js\n$isSlashCommand[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isSlashCommand?", "Assistant": "Use `$isSlashCommand` like this:\n```js\n$isSlashCommand[]\n```\n\nThis function returns whether the interaction is a slash command."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isSlashCommand in forgescript?", "Assistant": "Yes, You use `$isSlashCommand` like this:\n```js\n$isSlashCommand[]\n```\n\nThis function returns whether the interaction is a slash command."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isSlashCommand?", "Assistant": "The arguments for `$isSlashCommand` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isSlashCommand added?", "Assistant": "$isSlashCommand was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isSlashCommand nativly to forgescipt?", "Assistant": "Yes, $isSlashCommand is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isStringSelectMenu?", "Assistant": "Returns whether the context is a string select menu\n\nExample usage:\n```js\n$isStringSelectMenu[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isStringSelectMenu?", "Assistant": "Use `$isStringSelectMenu` like this:\n```js\n$isStringSelectMenu[]\n```\n\nThis function returns whether the context is a string select menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isStringSelectMenu in forgescript?", "Assistant": "Yes, You use `$isStringSelectMenu` like this:\n```js\n$isStringSelectMenu[]\n```\n\nThis function returns whether the context is a string select menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isStringSelectMenu?", "Assistant": "The arguments for `$isStringSelectMenu` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isStringSelectMenu added?", "Assistant": "$isStringSelectMenu was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isStringSelectMenu nativly to forgescipt?", "Assistant": "Yes, $isStringSelectMenu is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isUserSelectMenu?", "Assistant": "Returns whether the context is a user select menu\n\nExample usage:\n```js\n$isUserSelectMenu[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isUserSelectMenu?", "Assistant": "Use `$isUserSelectMenu` like this:\n```js\n$isUserSelectMenu[]\n```\n\nThis function returns whether the context is a user select menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isUserSelectMenu in forgescript?", "Assistant": "Yes, You use `$isUserSelectMenu` like this:\n```js\n$isUserSelectMenu[]\n```\n\nThis function returns whether the context is a user select menu."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isUserSelectMenu?", "Assistant": "The arguments for `$isUserSelectMenu` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isUserSelectMenu added?", "Assistant": "$isUserSelectMenu was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isUserSelectMenu nativly to forgescipt?", "Assistant": "Yes, $isUserSelectMenu is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $locale?", "Assistant": "Retrieves the user locale of the interaction\n\nExample usage:\n```js\n$locale[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $locale?", "Assistant": "Use `$locale` like this:\n```js\n$locale[]\n```\n\nThis function retrieves the user locale of the interaction."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $locale in forgescript?", "Assistant": "Yes, You use `$locale` like this:\n```js\n$locale[]\n```\n\nThis function retrieves the user locale of the interaction."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $locale?", "Assistant": "The arguments for `$locale` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $locale added?", "Assistant": "$locale was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $locale nativly to forgescipt?", "Assistant": "Yes, $locale is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $modal?", "Assistant": "Creates a modal\n\nExample usage:\n```js\n$modal[custom_ID_example;title_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $modal?", "Assistant": "Use `$modal` like this:\n```js\n$modal[custom_ID_example;title_example]\n```\n\nThis function creates a modal."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $modal in forgescript?", "Assistant": "Yes, You use `$modal` like this:\n```js\n$modal[custom_ID_example;title_example]\n```\n\nThis function creates a modal."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $modal?", "Assistant": "The arguments for `$modal` are as follows:\n\n- **custom ID** (String): The custom id for this modal (Required)\n- **title** (String): The title for the modal (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $modal added?", "Assistant": "$modal was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $modal nativly to forgescipt?", "Assistant": "Yes, $modal is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $option?", "Assistant": "Returns an option value with given name (interaction command)\n\nExample usage:\n```js\n$option[option_name_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $option?", "Assistant": "Use `$option` like this:\n```js\n$option[option_name_example]\n```\n\nThis function returns an option value with given name (interaction command)."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $option in forgescript?", "Assistant": "Yes, You use `$option` like this:\n```js\n$option[option_name_example]\n```\n\nThis function returns an option value with given name (interaction command)."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $option?", "Assistant": "The arguments for `$option` are as follows:\n\n- **option name** (String): The option name to retrieve its value (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $option added?", "Assistant": "$option was added in ForgeScript version 1.0.6."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $option nativly to forgescipt?", "Assistant": "Yes, $option is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $selectMenuValues?", "Assistant": "Returns select menu values\n\nExample usage:\n```js\n$selectMenuValues[99;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $selectMenuValues?", "Assistant": "Use `$selectMenuValues` like this:\n```js\n$selectMenuValues[99;separator_example]\n```\n\nThis function returns select menu values."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $selectMenuValues in forgescript?", "Assistant": "Yes, You use `$selectMenuValues` like this:\n```js\n$selectMenuValues[99;separator_example]\n```\n\nThis function returns select menu values."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $selectMenuValues?", "Assistant": "The arguments for `$selectMenuValues` are as follows:\n\n- **index** (Number): The index of the value (Optional)\n- **separator** (String): The separator to use for each value (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $selectMenuValues added?", "Assistant": "$selectMenuValues was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $selectMenuValues nativly to forgescipt?", "Assistant": "Yes, $selectMenuValues is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $showModal?", "Assistant": "Submits the modal\n\nExample usage:\n```js\n$showModal[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $showModal?", "Assistant": "Use `$showModal` like this:\n```js\n$showModal[]\n```\n\nThis function submits the modal."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $showModal in forgescript?", "Assistant": "Yes, You use `$showModal` like this:\n```js\n$showModal[]\n```\n\nThis function submits the modal."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $showModal?", "Assistant": "The arguments for `$showModal` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $showModal added?", "Assistant": "$showModal was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $showModal nativly to forgescipt?", "Assistant": "Yes, $showModal is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $targetMessage?", "Assistant": "Retrieves data of the target message\n\nExample usage:\n```js\n$targetMessage[pinned;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $targetMessage?", "Assistant": "Use `$targetMessage` like this:\n```js\n$targetMessage[pinned;separator_example]\n```\n\nThis function retrieves data of the target message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $targetMessage in forgescript?", "Assistant": "Yes, You use `$targetMessage` like this:\n```js\n$targetMessage[pinned;separator_example]\n```\n\nThis function retrieves data of the target message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $targetMessage?", "Assistant": "The arguments for `$targetMessage` are as follows:\n\n- **property** (Enum): The property to pull (Required)\n- **separator** (String): Separator to use in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $targetMessage added?", "Assistant": "$targetMessage was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $targetMessage nativly to forgescipt?", "Assistant": "Yes, $targetMessage is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $targetMessageEmbeds?", "Assistant": "Retrieves data of embeds from the target message\n\nExample usage:\n```js\n$targetMessageEmbeds[31;timestamp;74]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $targetMessageEmbeds?", "Assistant": "Use `$targetMessageEmbeds` like this:\n```js\n$targetMessageEmbeds[31;timestamp;74]\n```\n\nThis function retrieves data of embeds from the target message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $targetMessageEmbeds in forgescript?", "Assistant": "Yes, You use `$targetMessageEmbeds` like this:\n```js\n$targetMessageEmbeds[31;timestamp;74]\n```\n\nThis function retrieves data of embeds from the target message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $targetMessageEmbeds?", "Assistant": "The arguments for `$targetMessageEmbeds` are as follows:\n\n- **embed index** (Number): The embed index to get data from (Optional)\n- **property** (Enum): The property to pull (Optional)\n- **field index** (Number): The index of the field to get (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $targetMessageEmbeds added?", "Assistant": "$targetMessageEmbeds was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $targetMessageEmbeds nativly to forgescipt?", "Assistant": "Yes, $targetMessageEmbeds is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $deleteInvite?", "Assistant": "Deletes an invite, returns bool\n\nExample usage:\n```js\n$deleteInvite[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $deleteInvite?", "Assistant": "Use `$deleteInvite` like this:\n```js\n$deleteInvite[data]\n```\n\nThis function deletes an invite, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteInvite in forgescript?", "Assistant": "Yes, You use `$deleteInvite` like this:\n```js\n$deleteInvite[data]\n```\n\nThis function deletes an invite, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $deleteInvite?", "Assistant": "The arguments for `$deleteInvite` are as follows:\n\n- **code** (Invite): The invite code (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $deleteInvite added?", "Assistant": "$deleteInvite was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteInvite nativly to forgescipt?", "Assistant": "Yes, $deleteInvite is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $inviteExists?", "Assistant": "Returns whether an invite code exists\n\nExample usage:\n```js\n$inviteExists[code_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $inviteExists?", "Assistant": "Use `$inviteExists` like this:\n```js\n$inviteExists[code_example]\n```\n\nThis function returns whether an invite code exists."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $inviteExists in forgescript?", "Assistant": "Yes, You use `$inviteExists` like this:\n```js\n$inviteExists[code_example]\n```\n\nThis function returns whether an invite code exists."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $inviteExists?", "Assistant": "The arguments for `$inviteExists` are as follows:\n\n- **code** (String): The invite to check (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $inviteExists added?", "Assistant": "$inviteExists was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $inviteExists nativly to forgescipt?", "Assistant": "Yes, $inviteExists is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $inviterCode?", "Assistant": "Returns the invite code that was used by this person\n\nExample usage:\n```js\n$inviterCode[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $inviterCode?", "Assistant": "Use `$inviterCode` like this:\n```js\n$inviterCode[data;data]\n```\n\nThis function returns the invite code that was used by this person."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $inviterCode in forgescript?", "Assistant": "Yes, You use `$inviterCode` like this:\n```js\n$inviterCode[data;data]\n```\n\nThis function returns the invite code that was used by this person."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $inviterCode?", "Assistant": "The arguments for `$inviterCode` are as follows:\n\n- **guild ID** (Guild): The guild to pull member from (Required)\n- **user ID** (Member): The member to get its invite code (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $inviterCode added?", "Assistant": "$inviterCode was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $inviterCode nativly to forgescipt?", "Assistant": "Yes, $inviterCode is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $inviterID?", "Assistant": "Returns the user who invited this person\n\nExample usage:\n```js\n$inviterID[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $inviterID?", "Assistant": "Use `$inviterID` like this:\n```js\n$inviterID[data;data]\n```\n\nThis function returns the user who invited this person."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $inviterID in forgescript?", "Assistant": "Yes, You use `$inviterID` like this:\n```js\n$inviterID[data;data]\n```\n\nThis function returns the user who invited this person."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $inviterID?", "Assistant": "The arguments for `$inviterID` are as follows:\n\n- **guild ID** (Guild): The guild to pull member from (Required)\n- **user ID** (Member): The member to get its inviter (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $inviterID added?", "Assistant": "$inviterID was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $inviterID nativly to forgescipt?", "Assistant": "Yes, $inviterID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isJSON?", "Assistant": "Checks whether given json is valid\n\nExample usage:\n```js\n$isJSON[json_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isJSON?", "Assistant": "Use `$isJSON` like this:\n```js\n$isJSON[json_example]\n```\n\nThis function checks whether given json is valid."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isJSON in forgescript?", "Assistant": "Yes, You use `$isJSON` like this:\n```js\n$isJSON[json_example]\n```\n\nThis function checks whether given json is valid."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isJSON?", "Assistant": "The arguments for `$isJSON` are as follows:\n\n- **json** (String): The json to check for (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isJSON added?", "Assistant": "$isJSON was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isJSON nativly to forgescipt?", "Assistant": "Yes, $isJSON is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $jsonDelete?", "Assistant": "Delete a key from a traversed json\n\nExample usage:\n```js\n$jsonDelete[keys_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $jsonDelete?", "Assistant": "Use `$jsonDelete` like this:\n```js\n$jsonDelete[keys_example]\n```\n\nThis function delete a key from a traversed json."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $jsonDelete in forgescript?", "Assistant": "Yes, You use `$jsonDelete` like this:\n```js\n$jsonDelete[keys_example]\n```\n\nThis function delete a key from a traversed json."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $jsonDelete?", "Assistant": "The arguments for `$jsonDelete` are as follows:\n\n- **keys** (String): The keys to use to traverse the object (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $jsonDelete added?", "Assistant": "$jsonDelete was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $jsonDelete nativly to forgescipt?", "Assistant": "Yes, $jsonDelete is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $jsonEntries?", "Assistant": "Gets entries from a json var\n\nExample usage:\n```js\n$jsonEntries[variable_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $jsonEntries?", "Assistant": "Use `$jsonEntries` like this:\n```js\n$jsonEntries[variable_example]\n```\n\nThis function gets entries from a json var."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $jsonEntries in forgescript?", "Assistant": "Yes, You use `$jsonEntries` like this:\n```js\n$jsonEntries[variable_example]\n```\n\nThis function gets entries from a json var."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $jsonEntries?", "Assistant": "The arguments for `$jsonEntries` are as follows:\n\n- **variable** (String): The variable to get entries from (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $jsonEntries added?", "Assistant": "$jsonEntries was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $jsonEntries nativly to forgescipt?", "Assistant": "Yes, $jsonEntries is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $jsonKeys?", "Assistant": "Gets keys from a json var\n\nExample usage:\n```js\n$jsonKeys[variable_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $jsonKeys?", "Assistant": "Use `$jsonKeys` like this:\n```js\n$jsonKeys[variable_example]\n```\n\nThis function gets keys from a json var."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $jsonKeys in forgescript?", "Assistant": "Yes, You use `$jsonKeys` like this:\n```js\n$jsonKeys[variable_example]\n```\n\nThis function gets keys from a json var."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $jsonKeys?", "Assistant": "The arguments for `$jsonKeys` are as follows:\n\n- **variable** (String): The variable to get keys from (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $jsonKeys added?", "Assistant": "$jsonKeys was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $jsonKeys nativly to forgescipt?", "Assistant": "Yes, $jsonKeys is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $jsonLoad?", "Assistant": "Loads JSON to an env variable\n\nExample usage:\n```js\n$jsonLoad[variable_example;{key: json_value}]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $jsonLoad?", "Assistant": "Use `$jsonLoad` like this:\n```js\n$jsonLoad[variable_example;{key: json_value}]\n```\n\nThis function loads json to an env variable."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $jsonLoad in forgescript?", "Assistant": "Yes, You use `$jsonLoad` like this:\n```js\n$jsonLoad[variable_example;{key: json_value}]\n```\n\nThis function loads json to an env variable."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $jsonLoad?", "Assistant": "The arguments for `$jsonLoad` are as follows:\n\n- **variable** (String): The variable to load it to (Required)\n- **json** (Json): The json data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $jsonLoad added?", "Assistant": "$jsonLoad was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $jsonLoad nativly to forgescipt?", "Assistant": "Yes, $jsonLoad is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $jsonSet?", "Assistant": "Adds a json key with a value\n\nExample usage:\n```js\n$jsonSet[keys;value_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $jsonSet?", "Assistant": "Use `$jsonSet` like this:\n```js\n$jsonSet[keys;value_example]\n```\n\nThis function adds a json key with a value."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $jsonSet in forgescript?", "Assistant": "Yes, You use `$jsonSet` like this:\n```js\n$jsonSet[keys;value_example]\n```\n\nThis function adds a json key with a value."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $jsonSet?", "Assistant": "The arguments for `$jsonSet` are as follows:\n\n- **keys;value** (String): The keys to traverse, with the value to use at the end (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $jsonSet added?", "Assistant": "$jsonSet was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $jsonSet nativly to forgescipt?", "Assistant": "Yes, $jsonSet is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $jsonStringify?", "Assistant": "Returns the JSON in stringified format\n\nExample usage:\n```js\n$jsonStringify[variable_example;88]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $jsonStringify?", "Assistant": "Use `$jsonStringify` like this:\n```js\n$jsonStringify[variable_example;88]\n```\n\nThis function returns the json in stringified format."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $jsonStringify in forgescript?", "Assistant": "Yes, You use `$jsonStringify` like this:\n```js\n$jsonStringify[variable_example;88]\n```\n\nThis function returns the json in stringified format."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $jsonStringify?", "Assistant": "The arguments for `$jsonStringify` are as follows:\n\n- **variable** (String): The variable to stringify (Required)\n- **space** (Number): The space to use (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $jsonStringify added?", "Assistant": "$jsonStringify was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $jsonStringify nativly to forgescipt?", "Assistant": "Yes, $jsonStringify is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $jsonValues?", "Assistant": "Gets values from a json var\n\nExample usage:\n```js\n$jsonValues[variable_example;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $jsonValues?", "Assistant": "Use `$jsonValues` like this:\n```js\n$jsonValues[variable_example;separator_example]\n```\n\nThis function gets values from a json var."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $jsonValues in forgescript?", "Assistant": "Yes, You use `$jsonValues` like this:\n```js\n$jsonValues[variable_example;separator_example]\n```\n\nThis function gets values from a json var."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $jsonValues?", "Assistant": "The arguments for `$jsonValues` are as follows:\n\n- **variable** (String): The variable to get values from (Required)\n- **separator** (String): The separator to use for each value (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $jsonValues added?", "Assistant": "$jsonValues was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $jsonValues nativly to forgescipt?", "Assistant": "Yes, $jsonValues is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $onlyForCategories?", "Assistant": "Only executes code if given ids match the current category\n\nExample usage:\n```js\n$onlyForCategories[code_example;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $onlyForCategories?", "Assistant": "Use `$onlyForCategories` like this:\n```js\n$onlyForCategories[code_example;data]\n```\n\nThis function only executes code if given ids match the current category."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $onlyForCategories in forgescript?", "Assistant": "Yes, You use `$onlyForCategories` like this:\n```js\n$onlyForCategories[code_example;data]\n```\n\nThis function only executes code if given ids match the current category."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $onlyForCategories?", "Assistant": "The arguments for `$onlyForCategories` are as follows:\n\n- **code** (String): The code to execute if category is not whitelisted (Required)\n- **channels** (Channel): The categories to check for (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $onlyForCategories added?", "Assistant": "$onlyForCategories was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $onlyForCategories nativly to forgescipt?", "Assistant": "Yes, $onlyForCategories is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $onlyForChannels?", "Assistant": "Only executes code if given ids match the current channel\n\nExample usage:\n```js\n$onlyForChannels[code_example;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $onlyForChannels?", "Assistant": "Use `$onlyForChannels` like this:\n```js\n$onlyForChannels[code_example;data]\n```\n\nThis function only executes code if given ids match the current channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $onlyForChannels in forgescript?", "Assistant": "Yes, You use `$onlyForChannels` like this:\n```js\n$onlyForChannels[code_example;data]\n```\n\nThis function only executes code if given ids match the current channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $onlyForChannels?", "Assistant": "The arguments for `$onlyForChannels` are as follows:\n\n- **code** (String): The code to execute if channel is not whitelisted (Required)\n- **channels** (Channel): The channels to check for (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $onlyForChannels added?", "Assistant": "$onlyForChannels was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $onlyForChannels nativly to forgescipt?", "Assistant": "Yes, $onlyForChannels is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $onlyForGuilds?", "Assistant": "Only executes code if given ids match the guild\n\nExample usage:\n```js\n$onlyForGuilds[code_example;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $onlyForGuilds?", "Assistant": "Use `$onlyForGuilds` like this:\n```js\n$onlyForGuilds[code_example;data]\n```\n\nThis function only executes code if given ids match the guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $onlyForGuilds in forgescript?", "Assistant": "Yes, You use `$onlyForGuilds` like this:\n```js\n$onlyForGuilds[code_example;data]\n```\n\nThis function only executes code if given ids match the guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $onlyForGuilds?", "Assistant": "The arguments for `$onlyForGuilds` are as follows:\n\n- **code** (String): The code to execute if guild is not whitelisted (Required)\n- **guilds** (Guild): The guilds to check for (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $onlyForGuilds added?", "Assistant": "$onlyForGuilds was added in ForgeScript version 1.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $onlyForGuilds nativly to forgescipt?", "Assistant": "Yes, $onlyForGuilds is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $onlyForRoles?", "Assistant": "Only executes code if user has given roles\n\nExample usage:\n```js\n$onlyForRoles[code_example;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $onlyForRoles?", "Assistant": "Use `$onlyForRoles` like this:\n```js\n$onlyForRoles[code_example;data]\n```\n\nThis function only executes code if user has given roles."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $onlyForRoles in forgescript?", "Assistant": "Yes, You use `$onlyForRoles` like this:\n```js\n$onlyForRoles[code_example;data]\n```\n\nThis function only executes code if user has given roles."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $onlyForRoles?", "Assistant": "The arguments for `$onlyForRoles` are as follows:\n\n- **code** (String): The code to execute if user does not meet the roles (Required)\n- **roles** (Role): The roles to check for (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $onlyForRoles added?", "Assistant": "$onlyForRoles was added in ForgeScript version 1.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $onlyForRoles nativly to forgescipt?", "Assistant": "Yes, $onlyForRoles is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $onlyForUsers?", "Assistant": "Only executes code if given ids match the author\n\nExample usage:\n```js\n$onlyForUsers[code_example;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $onlyForUsers?", "Assistant": "Use `$onlyForUsers` like this:\n```js\n$onlyForUsers[code_example;data]\n```\n\nThis function only executes code if given ids match the author."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $onlyForUsers in forgescript?", "Assistant": "Yes, You use `$onlyForUsers` like this:\n```js\n$onlyForUsers[code_example;data]\n```\n\nThis function only executes code if given ids match the author."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $onlyForUsers?", "Assistant": "The arguments for `$onlyForUsers` are as follows:\n\n- **code** (String): The code to execute if user is not whitelisted (Required)\n- **users** (User): The users to check for (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $onlyForUsers added?", "Assistant": "$onlyForUsers was added in ForgeScript version 1.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $onlyForUsers nativly to forgescipt?", "Assistant": "Yes, $onlyForUsers is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $onlyIf?", "Assistant": "Stop execution if condition is not matched\n\nExample usage:\n```js\n$onlyIf[condition_example;code_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $onlyIf?", "Assistant": "Use `$onlyIf` like this:\n```js\n$onlyIf[condition_example;code_example]\n```\n\nThis function stop execution if condition is not matched."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $onlyIf in forgescript?", "Assistant": "Yes, You use `$onlyIf` like this:\n```js\n$onlyIf[condition_example;code_example]\n```\n\nThis function stop execution if condition is not matched."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $onlyIf?", "Assistant": "The arguments for `$onlyIf` are as follows:\n\n- **condition** (String): The condition to use (Required)\n- **code** (String): The code to execute if error (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $onlyIf added?", "Assistant": "$onlyIf was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $onlyIf nativly to forgescipt?", "Assistant": "Yes, $onlyIf is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $stop?", "Assistant": "Stops code execution\n\nExample usage:\n```js\n$stop[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $stop?", "Assistant": "Use `$stop` like this:\n```js\n$stop[]\n```\n\nThis function stops code execution."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $stop in forgescript?", "Assistant": "Yes, You use `$stop` like this:\n```js\n$stop[]\n```\n\nThis function stops code execution."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $stop?", "Assistant": "The arguments for `$stop` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $stop added?", "Assistant": "$stop was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $stop nativly to forgescipt?", "Assistant": "Yes, $stop is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $log?", "Assistant": "Log something to console\n\nExample usage:\n```js\n$log[message_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $log?", "Assistant": "Use `$log` like this:\n```js\n$log[message_example]\n```\n\nThis function log something to console."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $log in forgescript?", "Assistant": "Yes, You use `$log` like this:\n```js\n$log[message_example]\n```\n\nThis function log something to console."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $log?", "Assistant": "The arguments for `$log` are as follows:\n\n- **message** (String): The message to log to console (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $log added?", "Assistant": "$log was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $log nativly to forgescipt?", "Assistant": "Yes, $log is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $logger?", "Assistant": "Implements Logger API of ForgeScript.\n\nExample usage:\n```js\n$logger[Error;text_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $logger?", "Assistant": "Use `$logger` like this:\n```js\n$logger[Error;text_example]\n```\n\nThis function implements logger api of forgescript.."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $logger in forgescript?", "Assistant": "Yes, You use `$logger` like this:\n```js\n$logger[Error;text_example]\n```\n\nThis function implements logger api of forgescript.."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $logger?", "Assistant": "The arguments for `$logger` are as follows:\n\n- **log type** (Enum): The log type (Required)\n- **text** (String): What to log (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $logger added?", "Assistant": "$logger was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $logger nativly to forgescipt?", "Assistant": "Yes, $logger is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $findChannel?", "Assistant": "Finds a channel\n\nExample usage:\n```js\n$findChannel[query_example;true]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $findChannel?", "Assistant": "Use `$findChannel` like this:\n```js\n$findChannel[query_example;true]\n```\n\nThis function finds a channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $findChannel in forgescript?", "Assistant": "Yes, You use `$findChannel` like this:\n```js\n$findChannel[query_example;true]\n```\n\nThis function finds a channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $findChannel?", "Assistant": "The arguments for `$findChannel` are as follows:\n\n- **query** (String): The id, mention or channel name to find (Required)\n- **return channel** (Boolean): Returns the current channel id if none found (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $findChannel added?", "Assistant": "$findChannel was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $findChannel nativly to forgescipt?", "Assistant": "Yes, $findChannel is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $findChannels?", "Assistant": "Finds channels of a guild using a query\n\nExample usage:\n```js\n$findChannels[data;query_example;17;topic;separator_example;includes]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $findChannels?", "Assistant": "Use `$findChannels` like this:\n```js\n$findChannels[data;query_example;17;topic;separator_example;includes]\n```\n\nThis function finds channels of a guild using a query."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $findChannels in forgescript?", "Assistant": "Yes, You use `$findChannels` like this:\n```js\n$findChannels[data;query_example;17;topic;separator_example;includes]\n```\n\nThis function finds channels of a guild using a query."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $findChannels?", "Assistant": "The arguments for `$findChannels` are as follows:\n\n- **guild ID** (Guild): The guild to find the channels on (Required)\n- **query** (String): The id, mention or channel name to find (Required)\n- **limit** (Number): The limit of results (Optional)\n- **property** (Enum): The property to return (Optional)\n- **separator** (String): The separator to use for every result (Optional)\n- **method** (Enum): The method to use for searching (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $findChannels added?", "Assistant": "$findChannels was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $findChannels nativly to forgescipt?", "Assistant": "Yes, $findChannels is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $findEmoji?", "Assistant": "Finds a emoji\n\nExample usage:\n```js\n$findEmoji[query_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $findEmoji?", "Assistant": "Use `$findEmoji` like this:\n```js\n$findEmoji[query_example]\n```\n\nThis function finds a emoji."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $findEmoji in forgescript?", "Assistant": "Yes, You use `$findEmoji` like this:\n```js\n$findEmoji[query_example]\n```\n\nThis function finds a emoji."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $findEmoji?", "Assistant": "The arguments for `$findEmoji` are as follows:\n\n- **query** (String): The id, mention or emoji name to find (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $findEmoji added?", "Assistant": "$findEmoji was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $findEmoji nativly to forgescipt?", "Assistant": "Yes, $findEmoji is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $findGuildChannel?", "Assistant": "Finds a channel of a guild\n\nExample usage:\n```js\n$findGuildChannel[data;query_example;true]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $findGuildChannel?", "Assistant": "Use `$findGuildChannel` like this:\n```js\n$findGuildChannel[data;query_example;true]\n```\n\nThis function finds a channel of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $findGuildChannel in forgescript?", "Assistant": "Yes, You use `$findGuildChannel` like this:\n```js\n$findGuildChannel[data;query_example;true]\n```\n\nThis function finds a channel of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $findGuildChannel?", "Assistant": "The arguments for `$findGuildChannel` are as follows:\n\n- **guild ID** (Guild): The guild to find the channel on (Required)\n- **query** (String): The id, mention or channel name to find (Required)\n- **return channel** (Boolean): Returns the current channel id if none found (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $findGuildChannel added?", "Assistant": "$findGuildChannel was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $findGuildChannel nativly to forgescipt?", "Assistant": "Yes, $findGuildChannel is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $findGuildEmoji?", "Assistant": "Finds a emoji of a guild\n\nExample usage:\n```js\n$findGuildEmoji[data;query_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $findGuildEmoji?", "Assistant": "Use `$findGuildEmoji` like this:\n```js\n$findGuildEmoji[data;query_example]\n```\n\nThis function finds a emoji of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $findGuildEmoji in forgescript?", "Assistant": "Yes, You use `$findGuildEmoji` like this:\n```js\n$findGuildEmoji[data;query_example]\n```\n\nThis function finds a emoji of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $findGuildEmoji?", "Assistant": "The arguments for `$findGuildEmoji` are as follows:\n\n- **guild ID** (Guild): The guild to find the emoji on (Required)\n- **query** (String): The id, mention or emoji name to find (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $findGuildEmoji added?", "Assistant": "$findGuildEmoji was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $findGuildEmoji nativly to forgescipt?", "Assistant": "Yes, $findGuildEmoji is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $findMember?", "Assistant": "Finds a member of a guild\n\nExample usage:\n```js\n$findMember[data;query_example;true]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $findMember?", "Assistant": "Use `$findMember` like this:\n```js\n$findMember[data;query_example;true]\n```\n\nThis function finds a member of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $findMember in forgescript?", "Assistant": "Yes, You use `$findMember` like this:\n```js\n$findMember[data;query_example;true]\n```\n\nThis function finds a member of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $findMember?", "Assistant": "The arguments for `$findMember` are as follows:\n\n- **guild ID** (Guild): The guild to find the member on (Required)\n- **query** (String): The id, mention or name to find (Required)\n- **return author** (Boolean): Returns the current author id if none found (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $findMember added?", "Assistant": "$findMember was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $findMember nativly to forgescipt?", "Assistant": "Yes, $findMember is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $findMembers?", "Assistant": "Finds member of a guild using a query\n\nExample usage:\n```js\n$findMembers[data;query_example;57;timedOutUntil;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $findMembers?", "Assistant": "Use `$findMembers` like this:\n```js\n$findMembers[data;query_example;57;timedOutUntil;separator_example]\n```\n\nThis function finds member of a guild using a query."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $findMembers in forgescript?", "Assistant": "Yes, You use `$findMembers` like this:\n```js\n$findMembers[data;query_example;57;timedOutUntil;separator_example]\n```\n\nThis function finds member of a guild using a query."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $findMembers?", "Assistant": "The arguments for `$findMembers` are as follows:\n\n- **guild ID** (Guild): The guild to use (Required)\n- **query** (String): The query to use (Required)\n- **limit** (Number): The limit of results (Optional)\n- **enum value** (Enum): The enum value to use (Optional)\n- **separator** (String): The separator to use for every result (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $findMembers added?", "Assistant": "$findMembers was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $findMembers nativly to forgescipt?", "Assistant": "Yes, $findMembers is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $findRole?", "Assistant": "Finds a role of a guild\n\nExample usage:\n```js\n$findRole[data;query_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $findRole?", "Assistant": "Use `$findRole` like this:\n```js\n$findRole[data;query_example]\n```\n\nThis function finds a role of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $findRole in forgescript?", "Assistant": "Yes, You use `$findRole` like this:\n```js\n$findRole[data;query_example]\n```\n\nThis function finds a role of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $findRole?", "Assistant": "The arguments for `$findRole` are as follows:\n\n- **guild ID** (Guild): The guild to find the role on (Required)\n- **query** (String): The id, mention or role name to find (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $findRole added?", "Assistant": "$findRole was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $findRole nativly to forgescipt?", "Assistant": "Yes, $findRole is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $findRoles?", "Assistant": "Finds roles of a guild using a query\n\nExample usage:\n```js\n$findRoles[data;query_example;46;name;separator_example;startsWith]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $findRoles?", "Assistant": "Use `$findRoles` like this:\n```js\n$findRoles[data;query_example;46;name;separator_example;startsWith]\n```\n\nThis function finds roles of a guild using a query."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $findRoles in forgescript?", "Assistant": "Yes, You use `$findRoles` like this:\n```js\n$findRoles[data;query_example;46;name;separator_example;startsWith]\n```\n\nThis function finds roles of a guild using a query."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $findRoles?", "Assistant": "The arguments for `$findRoles` are as follows:\n\n- **guild ID** (Guild): The guild to find the roles on (Required)\n- **query** (String): The id, mention or role name to find (Required)\n- **limit** (Number): The limit of results (Optional)\n- **property** (Enum): The property to return (Optional)\n- **separator** (String): The separator to use for every result (Optional)\n- **method** (Enum): The method to use for searching (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $findRoles added?", "Assistant": "$findRoles was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $findRoles nativly to forgescipt?", "Assistant": "Yes, $findRoles is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $findUser?", "Assistant": "Finds a user\n\nExample usage:\n```js\n$findUser[query_example;false]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $findUser?", "Assistant": "Use `$findUser` like this:\n```js\n$findUser[query_example;false]\n```\n\nThis function finds a user."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $findUser in forgescript?", "Assistant": "Yes, You use `$findUser` like this:\n```js\n$findUser[query_example;false]\n```\n\nThis function finds a user."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $findUser?", "Assistant": "The arguments for `$findUser` are as follows:\n\n- **query** (String): The id, mention or user name to find (Required)\n- **return author** (Boolean): Returns the current author id if none found (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $findUser added?", "Assistant": "$findUser was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $findUser nativly to forgescipt?", "Assistant": "Yes, $findUser is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $abs?", "Assistant": "Returns the absolute value of a number (the value without regard to whether it is positive or negative)\n\nExample usage:\n```js\n$abs[22]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $abs?", "Assistant": "Use `$abs` like this:\n```js\n$abs[22]\n```\n\nThis function returns the absolute value of a number (the value without regard to whether it is positive or negative)."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $abs in forgescript?", "Assistant": "Yes, You use `$abs` like this:\n```js\n$abs[22]\n```\n\nThis function returns the absolute value of a number (the value without regard to whether it is positive or negative)."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $abs?", "Assistant": "The arguments for `$abs` are as follows:\n\n- **number** (Number): The number to use (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $abs added?", "Assistant": "$abs was added in ForgeScript version 1.0.1."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $abs nativly to forgescipt?", "Assistant": "Yes, $abs is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $base?", "Assistant": "Convert number from one base to another\n\nExample usage:\n```js\n$base[number_example;12;9]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $base?", "Assistant": "Use `$base` like this:\n```js\n$base[number_example;12;9]\n```\n\nThis function convert number from one base to another."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $base in forgescript?", "Assistant": "Yes, You use `$base` like this:\n```js\n$base[number_example;12;9]\n```\n\nThis function convert number from one base to another."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $base?", "Assistant": "The arguments for `$base` are as follows:\n\n- **number** (String): The target number for conversion (Required)\n- **to** (Number): The target base (Required)\n- **from** (Number): The source base (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $base added?", "Assistant": "$base was added in ForgeScript version 1.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $base nativly to forgescipt?", "Assistant": "Yes, $base is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $bigintDivide?", "Assistant": "Divides multiple numbers\n\nExample usage:\n```js\n$bigintDivide[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $bigintDivide?", "Assistant": "Use `$bigintDivide` like this:\n```js\n$bigintDivide[data]\n```\n\nThis function divides multiple numbers."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $bigintDivide in forgescript?", "Assistant": "Yes, You use `$bigintDivide` like this:\n```js\n$bigintDivide[data]\n```\n\nThis function divides multiple numbers."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $bigintDivide?", "Assistant": "The arguments for `$bigintDivide` are as follows:\n\n- **numbers** (BigInt): Numbers to divide (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $bigintDivide added?", "Assistant": "$bigintDivide was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $bigintDivide nativly to forgescipt?", "Assistant": "Yes, $bigintDivide is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $bigintMulti?", "Assistant": "Multiplies multiple numbers\n\nExample usage:\n```js\n$bigintMulti[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $bigintMulti?", "Assistant": "Use `$bigintMulti` like this:\n```js\n$bigintMulti[data]\n```\n\nThis function multiplies multiple numbers."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $bigintMulti in forgescript?", "Assistant": "Yes, You use `$bigintMulti` like this:\n```js\n$bigintMulti[data]\n```\n\nThis function multiplies multiple numbers."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $bigintMulti?", "Assistant": "The arguments for `$bigintMulti` are as follows:\n\n- **numbers** (BigInt): Numbers to multiply (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $bigintMulti added?", "Assistant": "$bigintMulti was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $bigintMulti nativly to forgescipt?", "Assistant": "Yes, $bigintMulti is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $bigintSub?", "Assistant": "Subtracts multiple numbers\n\nExample usage:\n```js\n$bigintSub[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $bigintSub?", "Assistant": "Use `$bigintSub` like this:\n```js\n$bigintSub[data]\n```\n\nThis function subtracts multiple numbers."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $bigintSub in forgescript?", "Assistant": "Yes, You use `$bigintSub` like this:\n```js\n$bigintSub[data]\n```\n\nThis function subtracts multiple numbers."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $bigintSub?", "Assistant": "The arguments for `$bigintSub` are as follows:\n\n- **numbers** (BigInt): Numbers to sub (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $bigintSub added?", "Assistant": "$bigintSub was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $bigintSub nativly to forgescipt?", "Assistant": "Yes, $bigintSub is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $bigintSum?", "Assistant": "Adds multiple numbers\n\nExample usage:\n```js\n$bigintSum[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $bigintSum?", "Assistant": "Use `$bigintSum` like this:\n```js\n$bigintSum[data]\n```\n\nThis function adds multiple numbers."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $bigintSum in forgescript?", "Assistant": "Yes, You use `$bigintSum` like this:\n```js\n$bigintSum[data]\n```\n\nThis function adds multiple numbers."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $bigintSum?", "Assistant": "The arguments for `$bigintSum` are as follows:\n\n- **numbers** (BigInt): Numbers to add (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $bigintSum added?", "Assistant": "$bigintSum was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $bigintSum nativly to forgescipt?", "Assistant": "Yes, $bigintSum is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $ceil?", "Assistant": "Returns the smallest integer greater than or equal to its numeric argument\n\nExample usage:\n```js\n$ceil[40]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $ceil?", "Assistant": "Use `$ceil` like this:\n```js\n$ceil[40]\n```\n\nThis function returns the smallest integer greater than or equal to its numeric argument."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $ceil in forgescript?", "Assistant": "Yes, You use `$ceil` like this:\n```js\n$ceil[40]\n```\n\nThis function returns the smallest integer greater than or equal to its numeric argument."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $ceil?", "Assistant": "The arguments for `$ceil` are as follows:\n\n- **number** (Number): The number to use (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $ceil added?", "Assistant": "$ceil was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $ceil nativly to forgescipt?", "Assistant": "Yes, $ceil is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $divide?", "Assistant": "Divides multiple numbers\n\nExample usage:\n```js\n$divide[60]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $divide?", "Assistant": "Use `$divide` like this:\n```js\n$divide[60]\n```\n\nThis function divides multiple numbers."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $divide in forgescript?", "Assistant": "Yes, You use `$divide` like this:\n```js\n$divide[60]\n```\n\nThis function divides multiple numbers."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $divide?", "Assistant": "The arguments for `$divide` are as follows:\n\n- **numbers** (Number): Numbers to divide (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $divide added?", "Assistant": "$divide was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $divide nativly to forgescipt?", "Assistant": "Yes, $divide is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $floor?", "Assistant": "Returns the greatest integer less than or equal to its numeric argument\n\nExample usage:\n```js\n$floor[71]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $floor?", "Assistant": "Use `$floor` like this:\n```js\n$floor[71]\n```\n\nThis function returns the greatest integer less than or equal to its numeric argument."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $floor in forgescript?", "Assistant": "Yes, You use `$floor` like this:\n```js\n$floor[71]\n```\n\nThis function returns the greatest integer less than or equal to its numeric argument."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $floor?", "Assistant": "The arguments for `$floor` are as follows:\n\n- **number** (Number): The number to use (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $floor added?", "Assistant": "$floor was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $floor nativly to forgescipt?", "Assistant": "Yes, $floor is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $logn?", "Assistant": "Returns the natural logarithm (base e) of a number\n\nExample usage:\n```js\n$logn[80]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $logn?", "Assistant": "Use `$logn` like this:\n```js\n$logn[80]\n```\n\nThis function returns the natural logarithm (base e) of a number."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $logn in forgescript?", "Assistant": "Yes, You use `$logn` like this:\n```js\n$logn[80]\n```\n\nThis function returns the natural logarithm (base e) of a number."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $logn?", "Assistant": "The arguments for `$logn` are as follows:\n\n- **number** (Number): Number to get its logarithm (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $logn added?", "Assistant": "$logn was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $logn nativly to forgescipt?", "Assistant": "Yes, $logn is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $math?", "Assistant": "Run math expression, returns nothing if incorrect expression\n\nExample usage:\n```js\n$math[expr_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $math?", "Assistant": "Use `$math` like this:\n```js\n$math[expr_example]\n```\n\nThis function run math expression, returns nothing if incorrect expression."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $math in forgescript?", "Assistant": "Yes, You use `$math` like this:\n```js\n$math[expr_example]\n```\n\nThis function run math expression, returns nothing if incorrect expression."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $math?", "Assistant": "The arguments for `$math` are as follows:\n\n- **expr** (String): The expression (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $math added?", "Assistant": "$math was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $math nativly to forgescipt?", "Assistant": "Yes, $math is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $max?", "Assistant": "Returns the largest number of the ones given\n\nExample usage:\n```js\n$max[100]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $max?", "Assistant": "Use `$max` like this:\n```js\n$max[100]\n```\n\nThis function returns the largest number of the ones given."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $max in forgescript?", "Assistant": "Yes, You use `$max` like this:\n```js\n$max[100]\n```\n\nThis function returns the largest number of the ones given."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $max?", "Assistant": "The arguments for `$max` are as follows:\n\n- **numbers** (Number): Numbers among which to find the largest (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $max added?", "Assistant": "$max was added in ForgeScript version 1.0.7."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $max nativly to forgescipt?", "Assistant": "Yes, $max is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $min?", "Assistant": "Returns the smallest number of the ones given\n\nExample usage:\n```js\n$min[45]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $min?", "Assistant": "Use `$min` like this:\n```js\n$min[45]\n```\n\nThis function returns the smallest number of the ones given."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $min in forgescript?", "Assistant": "Yes, You use `$min` like this:\n```js\n$min[45]\n```\n\nThis function returns the smallest number of the ones given."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $min?", "Assistant": "The arguments for `$min` are as follows:\n\n- **numbers** (Number): Numbers among which to find the smallest (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $min added?", "Assistant": "$min was added in ForgeScript version 1.0.7."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $min nativly to forgescipt?", "Assistant": "Yes, $min is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $modulo?", "Assistant": "Returns the remainder of multiple numbers\n\nExample usage:\n```js\n$modulo[8]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $modulo?", "Assistant": "Use `$modulo` like this:\n```js\n$modulo[8]\n```\n\nThis function returns the remainder of multiple numbers."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $modulo in forgescript?", "Assistant": "Yes, You use `$modulo` like this:\n```js\n$modulo[8]\n```\n\nThis function returns the remainder of multiple numbers."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $modulo?", "Assistant": "The arguments for `$modulo` are as follows:\n\n- **numbers** (Number): Numbers to get their remainders (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $modulo added?", "Assistant": "$modulo was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $modulo nativly to forgescipt?", "Assistant": "Yes, $modulo is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $multi?", "Assistant": "Multiplies multiple numbers\n\nExample usage:\n```js\n$multi[45]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $multi?", "Assistant": "Use `$multi` like this:\n```js\n$multi[45]\n```\n\nThis function multiplies multiple numbers."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $multi in forgescript?", "Assistant": "Yes, You use `$multi` like this:\n```js\n$multi[45]\n```\n\nThis function multiplies multiple numbers."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $multi?", "Assistant": "The arguments for `$multi` are as follows:\n\n- **numbers** (Number): Numbers to multiply (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $multi added?", "Assistant": "$multi was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $multi nativly to forgescipt?", "Assistant": "Yes, $multi is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $pow?", "Assistant": "Exponentially multiply multiple numbers\n\nExample usage:\n```js\n$pow[85]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $pow?", "Assistant": "Use `$pow` like this:\n```js\n$pow[85]\n```\n\nThis function exponentially multiply multiple numbers."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $pow in forgescript?", "Assistant": "Yes, You use `$pow` like this:\n```js\n$pow[85]\n```\n\nThis function exponentially multiply multiple numbers."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $pow?", "Assistant": "The arguments for `$pow` are as follows:\n\n- **numbers** (Number): Numbers to power by (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $pow added?", "Assistant": "$pow was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $pow nativly to forgescipt?", "Assistant": "Yes, $pow is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $round?", "Assistant": "Rounds provided number to a certain number of decimal places\n\nExample usage:\n```js\n$round[90;48]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $round?", "Assistant": "Use `$round` like this:\n```js\n$round[90;48]\n```\n\nThis function rounds provided number to a certain number of decimal places."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $round in forgescript?", "Assistant": "Yes, You use `$round` like this:\n```js\n$round[90;48]\n```\n\nThis function rounds provided number to a certain number of decimal places."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $round?", "Assistant": "The arguments for `$round` are as follows:\n\n- **number** (Number): The number to use (Required)\n- **decimal places** (Number): The number of decimal places to round to (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $round added?", "Assistant": "$round was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $round nativly to forgescipt?", "Assistant": "Yes, $round is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $sqrt?", "Assistant": "Returns the square root of a number\n\nExample usage:\n```js\n$sqrt[1]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $sqrt?", "Assistant": "Use `$sqrt` like this:\n```js\n$sqrt[1]\n```\n\nThis function returns the square root of a number."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $sqrt in forgescript?", "Assistant": "Yes, You use `$sqrt` like this:\n```js\n$sqrt[1]\n```\n\nThis function returns the square root of a number."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $sqrt?", "Assistant": "The arguments for `$sqrt` are as follows:\n\n- **number** (Number): The number to use (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $sqrt added?", "Assistant": "$sqrt was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $sqrt nativly to forgescipt?", "Assistant": "Yes, $sqrt is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $sub?", "Assistant": "Subtracts multiple numbers\n\nExample usage:\n```js\n$sub[1]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $sub?", "Assistant": "Use `$sub` like this:\n```js\n$sub[1]\n```\n\nThis function subtracts multiple numbers."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $sub in forgescript?", "Assistant": "Yes, You use `$sub` like this:\n```js\n$sub[1]\n```\n\nThis function subtracts multiple numbers."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $sub?", "Assistant": "The arguments for `$sub` are as follows:\n\n- **numbers** (Number): Numbers to sub (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $sub added?", "Assistant": "$sub was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $sub nativly to forgescipt?", "Assistant": "Yes, $sub is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $sum?", "Assistant": "Adds multiple numbers\n\nExample usage:\n```js\n$sum[60]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $sum?", "Assistant": "Use `$sum` like this:\n```js\n$sum[60]\n```\n\nThis function adds multiple numbers."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $sum in forgescript?", "Assistant": "Yes, You use `$sum` like this:\n```js\n$sum[60]\n```\n\nThis function adds multiple numbers."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $sum?", "Assistant": "The arguments for `$sum` are as follows:\n\n- **numbers** (Number): Numbers to add (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $sum added?", "Assistant": "$sum was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $sum nativly to forgescipt?", "Assistant": "Yes, $sum is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $trunc?", "Assistant": "Returns the integer part of the a numeric expression, x, removing any fractional digits. If x is already an integer, the result is x\n\nExample usage:\n```js\n$trunc[76]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $trunc?", "Assistant": "Use `$trunc` like this:\n```js\n$trunc[76]\n```\n\nThis function returns the integer part of the a numeric expression, x, removing any fractional digits. if x is already an integer, the result is x."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $trunc in forgescript?", "Assistant": "Yes, You use `$trunc` like this:\n```js\n$trunc[76]\n```\n\nThis function returns the integer part of the a numeric expression, x, removing any fractional digits. if x is already an integer, the result is x."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $trunc?", "Assistant": "The arguments for `$trunc` are as follows:\n\n- **number** (Number): The number to use (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $trunc added?", "Assistant": "$trunc was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $trunc nativly to forgescipt?", "Assistant": "Yes, $trunc is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $ban?", "Assistant": "Bans a member from the guild, returns true or false depending on whether the action was successfully performed\n\nExample usage:\n```js\n$ban[data;data;reason_example;91]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $ban?", "Assistant": "Use `$ban` like this:\n```js\n$ban[data;data;reason_example;91]\n```\n\nThis function bans a member from the guild, returns true or false depending on whether the action was successfully performed."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $ban in forgescript?", "Assistant": "Yes, You use `$ban` like this:\n```js\n$ban[data;data;reason_example;91]\n```\n\nThis function bans a member from the guild, returns true or false depending on whether the action was successfully performed."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $ban?", "Assistant": "The arguments for `$ban` are as follows:\n\n- **guild ID** (Guild): The guild to ban a member from (Required)\n- **user ID** (User): The member to ban (Required)\n- **reason** (String): The reason to ban for (Optional)\n- **delete message seconds** (Number): Delete messages from this member that were sent in this seconds time span (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $ban added?", "Assistant": "$ban was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $ban nativly to forgescipt?", "Assistant": "Yes, $ban is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $fetchMembers?", "Assistant": "Caches all members of a guild\n\nExample usage:\n```js\n$fetchMembers[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $fetchMembers?", "Assistant": "Use `$fetchMembers` like this:\n```js\n$fetchMembers[data]\n```\n\nThis function caches all members of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $fetchMembers in forgescript?", "Assistant": "Yes, You use `$fetchMembers` like this:\n```js\n$fetchMembers[data]\n```\n\nThis function caches all members of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $fetchMembers?", "Assistant": "The arguments for `$fetchMembers` are as follows:\n\n- **guild ID** (Guild): The guild to cache members of (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $fetchMembers added?", "Assistant": "$fetchMembers was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $fetchMembers nativly to forgescipt?", "Assistant": "Yes, $fetchMembers is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $getThreadMembers?", "Assistant": "Gets thread members\n\nExample usage:\n```js\n$getThreadMembers[data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $getThreadMembers?", "Assistant": "Use `$getThreadMembers` like this:\n```js\n$getThreadMembers[data;separator_example]\n```\n\nThis function gets thread members."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $getThreadMembers in forgescript?", "Assistant": "Yes, You use `$getThreadMembers` like this:\n```js\n$getThreadMembers[data;separator_example]\n```\n\nThis function gets thread members."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $getThreadMembers?", "Assistant": "The arguments for `$getThreadMembers` are as follows:\n\n- **channel ID** (Channel): The thread to pull members from (Required)\n- **separator** (String): The separator for every id (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $getThreadMembers added?", "Assistant": "$getThreadMembers was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $getThreadMembers nativly to forgescipt?", "Assistant": "Yes, $getThreadMembers is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $hasAnyPerms?", "Assistant": "Returns whether given member has any of the provided perms\n\nExample usage:\n```js\n$hasAnyPerms[data;data;perms_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $hasAnyPerms?", "Assistant": "Use `$hasAnyPerms` like this:\n```js\n$hasAnyPerms[data;data;perms_example]\n```\n\nThis function returns whether given member has any of the provided perms."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $hasAnyPerms in forgescript?", "Assistant": "Yes, You use `$hasAnyPerms` like this:\n```js\n$hasAnyPerms[data;data;perms_example]\n```\n\nThis function returns whether given member has any of the provided perms."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $hasAnyPerms?", "Assistant": "The arguments for `$hasAnyPerms` are as follows:\n\n- **guild ID** (Guild): The guild to pull member from (Required)\n- **user ID** (Member): The user to check for perms (Required)\n- **perms** (String): The perms to check for (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $hasAnyPerms added?", "Assistant": "$hasAnyPerms was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $hasAnyPerms nativly to forgescipt?", "Assistant": "Yes, $hasAnyPerms is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $hasAnyRole?", "Assistant": "Returns whether given member has any role\n\nExample usage:\n```js\n$hasAnyRole[data;data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $hasAnyRole?", "Assistant": "Use `$hasAnyRole` like this:\n```js\n$hasAnyRole[data;data;data]\n```\n\nThis function returns whether given member has any role."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $hasAnyRole in forgescript?", "Assistant": "Yes, You use `$hasAnyRole` like this:\n```js\n$hasAnyRole[data;data;data]\n```\n\nThis function returns whether given member has any role."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $hasAnyRole?", "Assistant": "The arguments for `$hasAnyRole` are as follows:\n\n- **guild ID** (Guild): The guild to pull member from (Required)\n- **user ID** (Member): The user to check for roles (Required)\n- **roles** (Role): The roles to check for (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $hasAnyRole added?", "Assistant": "$hasAnyRole was added in ForgeScript version 1.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $hasAnyRole nativly to forgescipt?", "Assistant": "Yes, $hasAnyRole is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $hasPerms?", "Assistant": "Returns whether given member has X perms\n\nExample usage:\n```js\n$hasPerms[data;data;perms_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $hasPerms?", "Assistant": "Use `$hasPerms` like this:\n```js\n$hasPerms[data;data;perms_example]\n```\n\nThis function returns whether given member has x perms."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $hasPerms in forgescript?", "Assistant": "Yes, You use `$hasPerms` like this:\n```js\n$hasPerms[data;data;perms_example]\n```\n\nThis function returns whether given member has x perms."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $hasPerms?", "Assistant": "The arguments for `$hasPerms` are as follows:\n\n- **guild ID** (Guild): The guild to pull member from (Required)\n- **user ID** (Member): The user to check for perms (Required)\n- **perms** (String): The perms to check for (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $hasPerms added?", "Assistant": "$hasPerms was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $hasPerms nativly to forgescipt?", "Assistant": "Yes, $hasPerms is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $hasRoles?", "Assistant": "Returns whether given member has all roles\n\nExample usage:\n```js\n$hasRoles[data;data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $hasRoles?", "Assistant": "Use `$hasRoles` like this:\n```js\n$hasRoles[data;data;data]\n```\n\nThis function returns whether given member has all roles."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $hasRoles in forgescript?", "Assistant": "Yes, You use `$hasRoles` like this:\n```js\n$hasRoles[data;data;data]\n```\n\nThis function returns whether given member has all roles."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $hasRoles?", "Assistant": "The arguments for `$hasRoles` are as follows:\n\n- **guild ID** (Guild): The guild to pull member from (Required)\n- **user ID** (Member): The user to check for roles (Required)\n- **roles** (Role): The roles to check for (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $hasRoles added?", "Assistant": "$hasRoles was added in ForgeScript version 1.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $hasRoles nativly to forgescipt?", "Assistant": "Yes, $hasRoles is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isBanned?", "Assistant": "Whether this user is banned\n\nExample usage:\n```js\n$isBanned[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isBanned?", "Assistant": "Use `$isBanned` like this:\n```js\n$isBanned[data;data]\n```\n\nThis function whether this user is banned."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isBanned in forgescript?", "Assistant": "Yes, You use `$isBanned` like this:\n```js\n$isBanned[data;data]\n```\n\nThis function whether this user is banned."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isBanned?", "Assistant": "The arguments for `$isBanned` are as follows:\n\n- **guild ID** (Guild): The guild to check bans on (Required)\n- **user ID** (User): The user to check ban (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isBanned added?", "Assistant": "$isBanned was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isBanned nativly to forgescipt?", "Assistant": "Yes, $isBanned is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isBoosting?", "Assistant": "Whether this user is boosting\n\nExample usage:\n```js\n$isBoosting[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isBoosting?", "Assistant": "Use `$isBoosting` like this:\n```js\n$isBoosting[data;data]\n```\n\nThis function whether this user is boosting."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isBoosting in forgescript?", "Assistant": "Yes, You use `$isBoosting` like this:\n```js\n$isBoosting[data;data]\n```\n\nThis function whether this user is boosting."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isBoosting?", "Assistant": "The arguments for `$isBoosting` are as follows:\n\n- **guild ID** (Guild): The guild to pull member from (Required)\n- **user ID** (Member): The user to check boost status for (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isBoosting added?", "Assistant": "$isBoosting was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isBoosting nativly to forgescipt?", "Assistant": "Yes, $isBoosting is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isDeaf?", "Assistant": "Whether a member is deafened\n\nExample usage:\n```js\n$isDeaf[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isDeaf?", "Assistant": "Use `$isDeaf` like this:\n```js\n$isDeaf[data;data]\n```\n\nThis function whether a member is deafened."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isDeaf in forgescript?", "Assistant": "Yes, You use `$isDeaf` like this:\n```js\n$isDeaf[data;data]\n```\n\nThis function whether a member is deafened."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isDeaf?", "Assistant": "The arguments for `$isDeaf` are as follows:\n\n- **guild ID** (Guild): The guild to pull the member from (Required)\n- **user ID** (Member): The member to get its voice state (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isDeaf added?", "Assistant": "$isDeaf was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isDeaf nativly to forgescipt?", "Assistant": "Yes, $isDeaf is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isGuildDeaf?", "Assistant": "Whether a member is server deafened\n\nExample usage:\n```js\n$isGuildDeaf[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isGuildDeaf?", "Assistant": "Use `$isGuildDeaf` like this:\n```js\n$isGuildDeaf[data;data]\n```\n\nThis function whether a member is server deafened."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isGuildDeaf in forgescript?", "Assistant": "Yes, You use `$isGuildDeaf` like this:\n```js\n$isGuildDeaf[data;data]\n```\n\nThis function whether a member is server deafened."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isGuildDeaf?", "Assistant": "The arguments for `$isGuildDeaf` are as follows:\n\n- **guild ID** (Guild): The guild to pull the member from (Required)\n- **user ID** (Member): The member to get its voice state (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isGuildDeaf added?", "Assistant": "$isGuildDeaf was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isGuildDeaf nativly to forgescipt?", "Assistant": "Yes, $isGuildDeaf is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isGuildMuted?", "Assistant": "Whether a member is server muted\n\nExample usage:\n```js\n$isGuildMuted[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isGuildMuted?", "Assistant": "Use `$isGuildMuted` like this:\n```js\n$isGuildMuted[data;data]\n```\n\nThis function whether a member is server muted."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isGuildMuted in forgescript?", "Assistant": "Yes, You use `$isGuildMuted` like this:\n```js\n$isGuildMuted[data;data]\n```\n\nThis function whether a member is server muted."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isGuildMuted?", "Assistant": "The arguments for `$isGuildMuted` are as follows:\n\n- **guild ID** (Guild): The guild to pull the member from (Required)\n- **user ID** (Member): The member to get its voice state (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isGuildMuted added?", "Assistant": "$isGuildMuted was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isGuildMuted nativly to forgescipt?", "Assistant": "Yes, $isGuildMuted is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isMuted?", "Assistant": "Whether a member is muted\n\nExample usage:\n```js\n$isMuted[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isMuted?", "Assistant": "Use `$isMuted` like this:\n```js\n$isMuted[data;data]\n```\n\nThis function whether a member is muted."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isMuted in forgescript?", "Assistant": "Yes, You use `$isMuted` like this:\n```js\n$isMuted[data;data]\n```\n\nThis function whether a member is muted."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isMuted?", "Assistant": "The arguments for `$isMuted` are as follows:\n\n- **guild ID** (Guild): The guild to pull the member from (Required)\n- **user ID** (Member): The member to get its voice state (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isMuted added?", "Assistant": "$isMuted was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isMuted nativly to forgescipt?", "Assistant": "Yes, $isMuted is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isSelfDeaf?", "Assistant": "Whether a member is self deafened\n\nExample usage:\n```js\n$isSelfDeaf[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isSelfDeaf?", "Assistant": "Use `$isSelfDeaf` like this:\n```js\n$isSelfDeaf[data;data]\n```\n\nThis function whether a member is self deafened."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isSelfDeaf in forgescript?", "Assistant": "Yes, You use `$isSelfDeaf` like this:\n```js\n$isSelfDeaf[data;data]\n```\n\nThis function whether a member is self deafened."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isSelfDeaf?", "Assistant": "The arguments for `$isSelfDeaf` are as follows:\n\n- **guild ID** (Guild): The guild to pull the member from (Required)\n- **user ID** (Member): The member to get its voice state (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isSelfDeaf added?", "Assistant": "$isSelfDeaf was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isSelfDeaf nativly to forgescipt?", "Assistant": "Yes, $isSelfDeaf is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isSelfMuted?", "Assistant": "Whether a member is self muted\n\nExample usage:\n```js\n$isSelfMuted[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isSelfMuted?", "Assistant": "Use `$isSelfMuted` like this:\n```js\n$isSelfMuted[data;data]\n```\n\nThis function whether a member is self muted."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isSelfMuted in forgescript?", "Assistant": "Yes, You use `$isSelfMuted` like this:\n```js\n$isSelfMuted[data;data]\n```\n\nThis function whether a member is self muted."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isSelfMuted?", "Assistant": "The arguments for `$isSelfMuted` are as follows:\n\n- **guild ID** (Guild): The guild to pull the member from (Required)\n- **user ID** (Member): The member to get its voice state (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isSelfMuted added?", "Assistant": "$isSelfMuted was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isSelfMuted nativly to forgescipt?", "Assistant": "Yes, $isSelfMuted is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isTimedOut?", "Assistant": "Whether an member is timed out\n\nExample usage:\n```js\n$isTimedOut[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isTimedOut?", "Assistant": "Use `$isTimedOut` like this:\n```js\n$isTimedOut[data;data]\n```\n\nThis function whether an member is timed out."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isTimedOut in forgescript?", "Assistant": "Yes, You use `$isTimedOut` like this:\n```js\n$isTimedOut[data;data]\n```\n\nThis function whether an member is timed out."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isTimedOut?", "Assistant": "The arguments for `$isTimedOut` are as follows:\n\n- **guild ID** (Guild): The guild to pull member from (Required)\n- **user ID** (Member): The member to check for timeout (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isTimedOut added?", "Assistant": "$isTimedOut was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isTimedOut nativly to forgescipt?", "Assistant": "Yes, $isTimedOut is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isVerified?", "Assistant": "Whether a member is verified\n\nExample usage:\n```js\n$isVerified[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isVerified?", "Assistant": "Use `$isVerified` like this:\n```js\n$isVerified[data;data]\n```\n\nThis function whether a member is verified."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isVerified in forgescript?", "Assistant": "Yes, You use `$isVerified` like this:\n```js\n$isVerified[data;data]\n```\n\nThis function whether a member is verified."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isVerified?", "Assistant": "The arguments for `$isVerified` are as follows:\n\n- **guild ID** (Guild): The guild to pull the member from (Required)\n- **user ID** (Member): The member to get its voice state (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isVerified added?", "Assistant": "$isVerified was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isVerified nativly to forgescipt?", "Assistant": "Yes, $isVerified is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $kickMember?", "Assistant": "Kicks a member from the guild, returns true or false depending on whether the action was successfully performed\n\nExample usage:\n```js\n$kickMember[data;data;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $kickMember?", "Assistant": "Use `$kickMember` like this:\n```js\n$kickMember[data;data;reason_example]\n```\n\nThis function kicks a member from the guild, returns true or false depending on whether the action was successfully performed."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $kickMember in forgescript?", "Assistant": "Yes, You use `$kickMember` like this:\n```js\n$kickMember[data;data;reason_example]\n```\n\nThis function kicks a member from the guild, returns true or false depending on whether the action was successfully performed."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $kickMember?", "Assistant": "The arguments for `$kickMember` are as follows:\n\n- **guild ID** (Guild): The guild to kick a member from (Required)\n- **user ID** (Member): The user to kick (Required)\n- **reason** (String): The reason to kick for (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $kickMember added?", "Assistant": "$kickMember was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $kickMember nativly to forgescipt?", "Assistant": "Yes, $kickMember is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $memberActivity?", "Assistant": "Returns the activity of a member\n\nExample usage:\n```js\n$memberActivity[data;data;buttons;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $memberActivity?", "Assistant": "Use `$memberActivity` like this:\n```js\n$memberActivity[data;data;buttons;separator_example]\n```\n\nThis function returns the activity of a member."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberActivity in forgescript?", "Assistant": "Yes, You use `$memberActivity` like this:\n```js\n$memberActivity[data;data;buttons;separator_example]\n```\n\nThis function returns the activity of a member."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $memberActivity?", "Assistant": "The arguments for `$memberActivity` are as follows:\n\n- **guild ID** (Guild): The guild to pull the member from (Required)\n- **user ID** (Member): The member to return its activity (Required)\n- **property** (Enum): The property of the activity to return (Optional)\n- **separator** (String): The separator to use for every property (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $memberActivity added?", "Assistant": "$memberActivity was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberActivity nativly to forgescipt?", "Assistant": "Yes, $memberActivity is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $memberAddRoles?", "Assistant": "Adds roles to a member and returns bool\n\nExample usage:\n```js\n$memberAddRoles[data;data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $memberAddRoles?", "Assistant": "Use `$memberAddRoles` like this:\n```js\n$memberAddRoles[data;data;data]\n```\n\nThis function adds roles to a member and returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberAddRoles in forgescript?", "Assistant": "Yes, You use `$memberAddRoles` like this:\n```js\n$memberAddRoles[data;data;data]\n```\n\nThis function adds roles to a member and returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $memberAddRoles?", "Assistant": "The arguments for `$memberAddRoles` are as follows:\n\n- **guild ID** (Guild): The guild to pull member from (Required)\n- **user ID** (Member): The user to add roles to (Required)\n- **roles** (Role): The roles to add (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $memberAddRoles added?", "Assistant": "$memberAddRoles was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberAddRoles nativly to forgescipt?", "Assistant": "Yes, $memberAddRoles is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $memberAvatar?", "Assistant": "Returns the member avatar\n\nExample usage:\n```js\n$memberAvatar[data;data;14;extension_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $memberAvatar?", "Assistant": "Use `$memberAvatar` like this:\n```js\n$memberAvatar[data;data;14;extension_example]\n```\n\nThis function returns the member avatar."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberAvatar in forgescript?", "Assistant": "Yes, You use `$memberAvatar` like this:\n```js\n$memberAvatar[data;data;14;extension_example]\n```\n\nThis function returns the member avatar."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $memberAvatar?", "Assistant": "The arguments for `$memberAvatar` are as follows:\n\n- **guild ID** (Guild): The guild to pull member from (Required)\n- **user ID** (Member): The user to retrieve the avatar (Required)\n- **size** (Number): The size to use for the image (Optional)\n- **extension** (String): The extension to use for the image (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $memberAvatar added?", "Assistant": "$memberAvatar was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberAvatar nativly to forgescipt?", "Assistant": "Yes, $memberAvatar is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $memberBanner?", "Assistant": "Returns the member banner\n\nExample usage:\n```js\n$memberBanner[data;data;55;extension_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $memberBanner?", "Assistant": "Use `$memberBanner` like this:\n```js\n$memberBanner[data;data;55;extension_example]\n```\n\nThis function returns the member banner."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberBanner in forgescript?", "Assistant": "Yes, You use `$memberBanner` like this:\n```js\n$memberBanner[data;data;55;extension_example]\n```\n\nThis function returns the member banner."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $memberBanner?", "Assistant": "The arguments for `$memberBanner` are as follows:\n\n- **guild ID** (Guild): The guild to pull member from (Required)\n- **user ID** (Member): The user to retrieve the banner (Required)\n- **size** (Number): The size to use for the image (Optional)\n- **extension** (String): The extension to use for the image (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $memberBanner added?", "Assistant": "$memberBanner was added in ForgeScript version 2.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberBanner nativly to forgescipt?", "Assistant": "Yes, $memberBanner is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $memberBoostingSince?", "Assistant": "Returns when the member started boosting the guild\n\nExample usage:\n```js\n$memberBoostingSince[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $memberBoostingSince?", "Assistant": "Use `$memberBoostingSince` like this:\n```js\n$memberBoostingSince[data;data]\n```\n\nThis function returns when the member started boosting the guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberBoostingSince in forgescript?", "Assistant": "Yes, You use `$memberBoostingSince` like this:\n```js\n$memberBoostingSince[data;data]\n```\n\nThis function returns when the member started boosting the guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $memberBoostingSince?", "Assistant": "The arguments for `$memberBoostingSince` are as follows:\n\n- **guild ID** (Guild): The guild to pull member from (Required)\n- **user ID** (Member): The user to check boost status for (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $memberBoostingSince added?", "Assistant": "$memberBoostingSince was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberBoostingSince nativly to forgescipt?", "Assistant": "Yes, $memberBoostingSince is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $memberCustomStatus?", "Assistant": "Returns the custom status of a member\n\nExample usage:\n```js\n$memberCustomStatus[data;data;state]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $memberCustomStatus?", "Assistant": "Use `$memberCustomStatus` like this:\n```js\n$memberCustomStatus[data;data;state]\n```\n\nThis function returns the custom status of a member."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberCustomStatus in forgescript?", "Assistant": "Yes, You use `$memberCustomStatus` like this:\n```js\n$memberCustomStatus[data;data;state]\n```\n\nThis function returns the custom status of a member."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $memberCustomStatus?", "Assistant": "The arguments for `$memberCustomStatus` are as follows:\n\n- **guild ID** (Guild): The guild to pull the user from (Required)\n- **user ID** (Member): The user to return its custom status (Required)\n- **type** (Enum): The type of the custom status to fetch (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $memberCustomStatus added?", "Assistant": "$memberCustomStatus was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberCustomStatus nativly to forgescipt?", "Assistant": "Yes, $memberCustomStatus is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $memberDisplayColor?", "Assistant": "Returns the display color of a member\n\nExample usage:\n```js\n$memberDisplayColor[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $memberDisplayColor?", "Assistant": "Use `$memberDisplayColor` like this:\n```js\n$memberDisplayColor[data;data]\n```\n\nThis function returns the display color of a member."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberDisplayColor in forgescript?", "Assistant": "Yes, You use `$memberDisplayColor` like this:\n```js\n$memberDisplayColor[data;data]\n```\n\nThis function returns the display color of a member."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $memberDisplayColor?", "Assistant": "The arguments for `$memberDisplayColor` are as follows:\n\n- **guild ID** (Guild): The guild to pull member from (Required)\n- **user ID** (Member): The user to get its color (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $memberDisplayColor added?", "Assistant": "$memberDisplayColor was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberDisplayColor nativly to forgescipt?", "Assistant": "Yes, $memberDisplayColor is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $memberExists?", "Assistant": "Returns whether a member id exists\n\nExample usage:\n```js\n$memberExists[data;member_ID_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $memberExists?", "Assistant": "Use `$memberExists` like this:\n```js\n$memberExists[data;member_ID_example]\n```\n\nThis function returns whether a member id exists."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberExists in forgescript?", "Assistant": "Yes, You use `$memberExists` like this:\n```js\n$memberExists[data;member_ID_example]\n```\n\nThis function returns whether a member id exists."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $memberExists?", "Assistant": "The arguments for `$memberExists` are as follows:\n\n- **guild ID** (Guild): The guild to check for the member (Required)\n- **member ID** (String): The member to check for (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $memberExists added?", "Assistant": "$memberExists was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberExists nativly to forgescipt?", "Assistant": "Yes, $memberExists is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $memberFlags?", "Assistant": "Returns the flags of a member\n\nExample usage:\n```js\n$memberFlags[data;data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $memberFlags?", "Assistant": "Use `$memberFlags` like this:\n```js\n$memberFlags[data;data;separator_example]\n```\n\nThis function returns the flags of a member."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberFlags in forgescript?", "Assistant": "Yes, You use `$memberFlags` like this:\n```js\n$memberFlags[data;data;separator_example]\n```\n\nThis function returns the flags of a member."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $memberFlags?", "Assistant": "The arguments for `$memberFlags` are as follows:\n\n- **guild ID** (Guild): The guild to pull member from (Required)\n- **user ID** (Member): The user to get its flags (Required)\n- **separator** (String): The separator to use for every flag (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $memberFlags added?", "Assistant": "$memberFlags was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberFlags nativly to forgescipt?", "Assistant": "Yes, $memberFlags is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $memberHighestRoleID?", "Assistant": "Returns the highest role id of a member\n\nExample usage:\n```js\n$memberHighestRoleID[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $memberHighestRoleID?", "Assistant": "Use `$memberHighestRoleID` like this:\n```js\n$memberHighestRoleID[data;data]\n```\n\nThis function returns the highest role id of a member."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberHighestRoleID in forgescript?", "Assistant": "Yes, You use `$memberHighestRoleID` like this:\n```js\n$memberHighestRoleID[data;data]\n```\n\nThis function returns the highest role id of a member."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $memberHighestRoleID?", "Assistant": "The arguments for `$memberHighestRoleID` are as follows:\n\n- **guild ID** (Guild): The guild to pull member from (Required)\n- **user ID** (Member): The user to get its highest role id (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $memberHighestRoleID added?", "Assistant": "$memberHighestRoleID was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberHighestRoleID nativly to forgescipt?", "Assistant": "Yes, $memberHighestRoleID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $memberJoinedAt?", "Assistant": "Returns the timestamp the member joined at\n\nExample usage:\n```js\n$memberJoinedAt[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $memberJoinedAt?", "Assistant": "Use `$memberJoinedAt` like this:\n```js\n$memberJoinedAt[data;data]\n```\n\nThis function returns the timestamp the member joined at."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberJoinedAt in forgescript?", "Assistant": "Yes, You use `$memberJoinedAt` like this:\n```js\n$memberJoinedAt[data;data]\n```\n\nThis function returns the timestamp the member joined at."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $memberJoinedAt?", "Assistant": "The arguments for `$memberJoinedAt` are as follows:\n\n- **guild ID** (Guild): The guild to pull member from (Required)\n- **user ID** (Member): The user to get its join date (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $memberJoinedAt added?", "Assistant": "$memberJoinedAt was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberJoinedAt nativly to forgescipt?", "Assistant": "Yes, $memberJoinedAt is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $memberJoinPosition?", "Assistant": "Returns the position at which the member joined the guild\n\nExample usage:\n```js\n$memberJoinPosition[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $memberJoinPosition?", "Assistant": "Use `$memberJoinPosition` like this:\n```js\n$memberJoinPosition[data;data]\n```\n\nThis function returns the position at which the member joined the guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberJoinPosition in forgescript?", "Assistant": "Yes, You use `$memberJoinPosition` like this:\n```js\n$memberJoinPosition[data;data]\n```\n\nThis function returns the position at which the member joined the guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $memberJoinPosition?", "Assistant": "The arguments for `$memberJoinPosition` are as follows:\n\n- **guild ID** (Guild): The guild to pull member from (Required)\n- **user ID** (Member): The user to get its join position (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $memberJoinPosition added?", "Assistant": "$memberJoinPosition was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberJoinPosition nativly to forgescipt?", "Assistant": "Yes, $memberJoinPosition is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $memberLowestRoleID?", "Assistant": "Returns the lowest role id of a member\n\nExample usage:\n```js\n$memberLowestRoleID[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $memberLowestRoleID?", "Assistant": "Use `$memberLowestRoleID` like this:\n```js\n$memberLowestRoleID[data;data]\n```\n\nThis function returns the lowest role id of a member."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberLowestRoleID in forgescript?", "Assistant": "Yes, You use `$memberLowestRoleID` like this:\n```js\n$memberLowestRoleID[data;data]\n```\n\nThis function returns the lowest role id of a member."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $memberLowestRoleID?", "Assistant": "The arguments for `$memberLowestRoleID` are as follows:\n\n- **guild ID** (Guild): The guild to pull member from (Required)\n- **user ID** (Member): The user to get its lowest role id (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $memberLowestRoleID added?", "Assistant": "$memberLowestRoleID was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberLowestRoleID nativly to forgescipt?", "Assistant": "Yes, $memberLowestRoleID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $memberPerms?", "Assistant": "Returns the member perms\n\nExample usage:\n```js\n$memberPerms[data;data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $memberPerms?", "Assistant": "Use `$memberPerms` like this:\n```js\n$memberPerms[data;data;separator_example]\n```\n\nThis function returns the member perms."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberPerms in forgescript?", "Assistant": "Yes, You use `$memberPerms` like this:\n```js\n$memberPerms[data;data;separator_example]\n```\n\nThis function returns the member perms."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $memberPerms?", "Assistant": "The arguments for `$memberPerms` are as follows:\n\n- **guild ID** (Guild): The guild id to return the member from (Required)\n- **user ID** (Member): The member id to return its perms (Required)\n- **separator** (String): The separator to use for every perm (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $memberPerms added?", "Assistant": "$memberPerms was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberPerms nativly to forgescipt?", "Assistant": "Yes, $memberPerms is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $memberRawData?", "Assistant": "Returns the raw data of a member\n\nExample usage:\n```js\n$memberRawData[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $memberRawData?", "Assistant": "Use `$memberRawData` like this:\n```js\n$memberRawData[data;data]\n```\n\nThis function returns the raw data of a member."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberRawData in forgescript?", "Assistant": "Yes, You use `$memberRawData` like this:\n```js\n$memberRawData[data;data]\n```\n\nThis function returns the raw data of a member."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $memberRawData?", "Assistant": "The arguments for `$memberRawData` are as follows:\n\n- **guild ID** (Guild): The guild to pull member from (Required)\n- **user ID** (Member): The member to get raw data from (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $memberRawData added?", "Assistant": "$memberRawData was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberRawData nativly to forgescipt?", "Assistant": "Yes, $memberRawData is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $memberRemoveRoles?", "Assistant": "Removes roles from a member and returns bool\n\nExample usage:\n```js\n$memberRemoveRoles[data;data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $memberRemoveRoles?", "Assistant": "Use `$memberRemoveRoles` like this:\n```js\n$memberRemoveRoles[data;data;data]\n```\n\nThis function removes roles from a member and returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberRemoveRoles in forgescript?", "Assistant": "Yes, You use `$memberRemoveRoles` like this:\n```js\n$memberRemoveRoles[data;data;data]\n```\n\nThis function removes roles from a member and returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $memberRemoveRoles?", "Assistant": "The arguments for `$memberRemoveRoles` are as follows:\n\n- **guild ID** (Guild): The guild to pull member from (Required)\n- **user ID** (Member): The user to remove roles from (Required)\n- **roles** (Role): The roles to remove (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $memberRemoveRoles added?", "Assistant": "$memberRemoveRoles was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberRemoveRoles nativly to forgescipt?", "Assistant": "Yes, $memberRemoveRoles is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $memberRoles?", "Assistant": "Returns the role ids of a member\n\nExample usage:\n```js\n$memberRoles[data;data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $memberRoles?", "Assistant": "Use `$memberRoles` like this:\n```js\n$memberRoles[data;data;separator_example]\n```\n\nThis function returns the role ids of a member."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberRoles in forgescript?", "Assistant": "Yes, You use `$memberRoles` like this:\n```js\n$memberRoles[data;data;separator_example]\n```\n\nThis function returns the role ids of a member."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $memberRoles?", "Assistant": "The arguments for `$memberRoles` are as follows:\n\n- **guild ID** (Guild): The guild to pull member from (Required)\n- **user ID** (Member): The user to get roles from (Required)\n- **separator** (String): The separator to use for each role (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $memberRoles added?", "Assistant": "$memberRoles was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberRoles nativly to forgescipt?", "Assistant": "Yes, $memberRoles is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $memberSetNickname?", "Assistant": "Edits a member's nickname\n\nExample usage:\n```js\n$memberSetNickname[data;data;nickname_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $memberSetNickname?", "Assistant": "Use `$memberSetNickname` like this:\n```js\n$memberSetNickname[data;data;nickname_example]\n```\n\nThis function edits a member's nickname."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberSetNickname in forgescript?", "Assistant": "Yes, You use `$memberSetNickname` like this:\n```js\n$memberSetNickname[data;data;nickname_example]\n```\n\nThis function edits a member's nickname."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $memberSetNickname?", "Assistant": "The arguments for `$memberSetNickname` are as follows:\n\n- **guild ID** (Guild): The guild to pull member from (Required)\n- **user ID** (Member): The member to edit its nickname (Required)\n- **nickname** (String): The new nickname, leave empty to reset (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $memberSetNickname added?", "Assistant": "$memberSetNickname was added in ForgeScript version 1.0.7."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberSetNickname nativly to forgescipt?", "Assistant": "Yes, $memberSetNickname is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $memberSetRoles?", "Assistant": "Sets roles to a member and returns bool\n\nExample usage:\n```js\n$memberSetRoles[data;data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $memberSetRoles?", "Assistant": "Use `$memberSetRoles` like this:\n```js\n$memberSetRoles[data;data;data]\n```\n\nThis function sets roles to a member and returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberSetRoles in forgescript?", "Assistant": "Yes, You use `$memberSetRoles` like this:\n```js\n$memberSetRoles[data;data;data]\n```\n\nThis function sets roles to a member and returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $memberSetRoles?", "Assistant": "The arguments for `$memberSetRoles` are as follows:\n\n- **guild ID** (Guild): The guild to pull member from (Required)\n- **user ID** (Member): The user to set roles to (Required)\n- **roles** (Role): The roles to set (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $memberSetRoles added?", "Assistant": "$memberSetRoles was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberSetRoles nativly to forgescipt?", "Assistant": "Yes, $memberSetRoles is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $memberTimeoutDuration?", "Assistant": "Returns the timeout duration of a member\n\nExample usage:\n```js\n$memberTimeoutDuration[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $memberTimeoutDuration?", "Assistant": "Use `$memberTimeoutDuration` like this:\n```js\n$memberTimeoutDuration[data;data]\n```\n\nThis function returns the timeout duration of a member."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberTimeoutDuration in forgescript?", "Assistant": "Yes, You use `$memberTimeoutDuration` like this:\n```js\n$memberTimeoutDuration[data;data]\n```\n\nThis function returns the timeout duration of a member."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $memberTimeoutDuration?", "Assistant": "The arguments for `$memberTimeoutDuration` are as follows:\n\n- **guild ID** (Guild): The guild to pull member from (Required)\n- **user ID** (Member): The member to get duration for (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $memberTimeoutDuration added?", "Assistant": "$memberTimeoutDuration was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $memberTimeoutDuration nativly to forgescipt?", "Assistant": "Yes, $memberTimeoutDuration is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $nickname?", "Assistant": "Returns the member nickname\n\nExample usage:\n```js\n$nickname[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $nickname?", "Assistant": "Use `$nickname` like this:\n```js\n$nickname[data;data]\n```\n\nThis function returns the member nickname."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $nickname in forgescript?", "Assistant": "Yes, You use `$nickname` like this:\n```js\n$nickname[data;data]\n```\n\nThis function returns the member nickname."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $nickname?", "Assistant": "The arguments for `$nickname` are as follows:\n\n- **guild ID** (Guild): The guild id to return the member from (Required)\n- **user ID** (Member): The member id return its nick (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $nickname added?", "Assistant": "$nickname was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $nickname nativly to forgescipt?", "Assistant": "Yes, $nickname is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $platform?", "Assistant": "Returns the member platforms\n\nExample usage:\n```js\n$platform[data;data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $platform?", "Assistant": "Use `$platform` like this:\n```js\n$platform[data;data;separator_example]\n```\n\nThis function returns the member platforms."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $platform in forgescript?", "Assistant": "Yes, You use `$platform` like this:\n```js\n$platform[data;data;separator_example]\n```\n\nThis function returns the member platforms."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $platform?", "Assistant": "The arguments for `$platform` are as follows:\n\n- **guild ID** (Guild): The guild id to return the member from (Required)\n- **user ID** (Member): The member id return its platform (Required)\n- **separator** (String): The separator for each platform (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $platform added?", "Assistant": "$platform was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $platform nativly to forgescipt?", "Assistant": "Yes, $platform is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $pruneMembers?", "Assistant": "Prunes inactive members from the guild, returns number of kicked members\n\nExample usage:\n```js\n$pruneMembers[data;47;false;reason_example;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $pruneMembers?", "Assistant": "Use `$pruneMembers` like this:\n```js\n$pruneMembers[data;47;false;reason_example;data]\n```\n\nThis function prunes inactive members from the guild, returns number of kicked members."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $pruneMembers in forgescript?", "Assistant": "Yes, You use `$pruneMembers` like this:\n```js\n$pruneMembers[data;47;false;reason_example;data]\n```\n\nThis function prunes inactive members from the guild, returns number of kicked members."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $pruneMembers?", "Assistant": "The arguments for `$pruneMembers` are as follows:\n\n- **guild ID** (Guild): The guild to prune members from (Required)\n- **days** (Number): The days of inactivity required to kick (Optional)\n- **dry** (Boolean): Whether to perform a dry prune (Optional)\n- **reason** (String): The reason for pruning members (Optional)\n- **roles** (Role): The roles to include when pruning (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $pruneMembers added?", "Assistant": "$pruneMembers was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $pruneMembers nativly to forgescipt?", "Assistant": "Yes, $pruneMembers is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $randomMemberID?", "Assistant": "Returns a random member ID of a guild\n\nExample usage:\n```js\n$randomMemberID[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $randomMemberID?", "Assistant": "Use `$randomMemberID` like this:\n```js\n$randomMemberID[data]\n```\n\nThis function returns a random member id of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $randomMemberID in forgescript?", "Assistant": "Yes, You use `$randomMemberID` like this:\n```js\n$randomMemberID[data]\n```\n\nThis function returns a random member id of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $randomMemberID?", "Assistant": "The arguments for `$randomMemberID` are as follows:\n\n- **guild ID** (Guild): The guild to get member from (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $randomMemberID added?", "Assistant": "$randomMemberID was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $randomMemberID nativly to forgescipt?", "Assistant": "Yes, $randomMemberID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $status?", "Assistant": "Returns the member status\n\nExample usage:\n```js\n$status[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $status?", "Assistant": "Use `$status` like this:\n```js\n$status[data;data]\n```\n\nThis function returns the member status."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $status in forgescript?", "Assistant": "Yes, You use `$status` like this:\n```js\n$status[data;data]\n```\n\nThis function returns the member status."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $status?", "Assistant": "The arguments for `$status` are as follows:\n\n- **guild ID** (Guild): The guild to return the member from (Required)\n- **user ID** (Member): The member to return its status (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $status added?", "Assistant": "$status was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $status nativly to forgescipt?", "Assistant": "Yes, $status is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $timeout?", "Assistant": "Times a member out for X milliseconds\n\nExample usage:\n```js\n$timeout[data;data;data;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $timeout?", "Assistant": "Use `$timeout` like this:\n```js\n$timeout[data;data;data;reason_example]\n```\n\nThis function times a member out for x milliseconds."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $timeout in forgescript?", "Assistant": "Yes, You use `$timeout` like this:\n```js\n$timeout[data;data;data;reason_example]\n```\n\nThis function times a member out for x milliseconds."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $timeout?", "Assistant": "The arguments for `$timeout` are as follows:\n\n- **guild ID** (Guild): The guild to pull member from (Required)\n- **user ID** (Member): The member to timeout (Required)\n- **duration** (Time): The duration to timeout for (Optional)\n- **reason** (String): The reason to timeout the member (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $timeout added?", "Assistant": "$timeout was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $timeout nativly to forgescipt?", "Assistant": "Yes, $timeout is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $unban?", "Assistant": "Unbans a user\n\nExample usage:\n```js\n$unban[data;data;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $unban?", "Assistant": "Use `$unban` like this:\n```js\n$unban[data;data;reason_example]\n```\n\nThis function unbans a user."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $unban in forgescript?", "Assistant": "Yes, You use `$unban` like this:\n```js\n$unban[data;data;reason_example]\n```\n\nThis function unbans a user."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $unban?", "Assistant": "The arguments for `$unban` are as follows:\n\n- **guild ID** (Guild): The guild to unban a user from (Required)\n- **user ID** (User): The user to unban (Required)\n- **reason** (String): The unban reason (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $unban added?", "Assistant": "$unban was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $unban nativly to forgescipt?", "Assistant": "Yes, $unban is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $voiceID?", "Assistant": "Returns the voice channel id a member is connected to\n\nExample usage:\n```js\n$voiceID[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $voiceID?", "Assistant": "Use `$voiceID` like this:\n```js\n$voiceID[data;data]\n```\n\nThis function returns the voice channel id a member is connected to."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $voiceID in forgescript?", "Assistant": "Yes, You use `$voiceID` like this:\n```js\n$voiceID[data;data]\n```\n\nThis function returns the voice channel id a member is connected to."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $voiceID?", "Assistant": "The arguments for `$voiceID` are as follows:\n\n- **guild ID** (Guild): The guild to pull member from (Required)\n- **user ID** (Member): The member to get its voice channel (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $voiceID added?", "Assistant": "$voiceID was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $voiceID nativly to forgescipt?", "Assistant": "Yes, $voiceID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $voiceKick?", "Assistant": "Kicks a member from voice channel\n\nExample usage:\n```js\n$voiceKick[data;data;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $voiceKick?", "Assistant": "Use `$voiceKick` like this:\n```js\n$voiceKick[data;data;reason_example]\n```\n\nThis function kicks a member from voice channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $voiceKick in forgescript?", "Assistant": "Yes, You use `$voiceKick` like this:\n```js\n$voiceKick[data;data;reason_example]\n```\n\nThis function kicks a member from voice channel."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $voiceKick?", "Assistant": "The arguments for `$voiceKick` are as follows:\n\n- **guild ID** (Guild): The guild to pull member from (Required)\n- **user ID** (Member): The user to kick (Required)\n- **reason** (String): Reason to kick this user (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $voiceKick added?", "Assistant": "$voiceKick was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $voiceKick nativly to forgescipt?", "Assistant": "Yes, $voiceKick is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $voiceMove?", "Assistant": "Moves a member from a voice channel, returns bool\n\nExample usage:\n```js\n$voiceMove[data;data;data;reason_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $voiceMove?", "Assistant": "Use `$voiceMove` like this:\n```js\n$voiceMove[data;data;data;reason_example]\n```\n\nThis function moves a member from a voice channel, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $voiceMove in forgescript?", "Assistant": "Yes, You use `$voiceMove` like this:\n```js\n$voiceMove[data;data;data;reason_example]\n```\n\nThis function moves a member from a voice channel, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $voiceMove?", "Assistant": "The arguments for `$voiceMove` are as follows:\n\n- **guild ID** (Guild): The guild to pull member from (Required)\n- **user ID** (Member): The user to move (Required)\n- **channel ID** (Channel): The voice channel to move this user to (Optional)\n- **reason** (String): The reason for moving the user (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $voiceMove added?", "Assistant": "$voiceMove was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $voiceMove nativly to forgescipt?", "Assistant": "Yes, $voiceMove is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $disableAllMentions?", "Assistant": "Disables every possible mention\n\nExample usage:\n```js\n$disableAllMentions[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $disableAllMentions?", "Assistant": "Use `$disableAllMentions` like this:\n```js\n$disableAllMentions[]\n```\n\nThis function disables every possible mention."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $disableAllMentions in forgescript?", "Assistant": "Yes, You use `$disableAllMentions` like this:\n```js\n$disableAllMentions[]\n```\n\nThis function disables every possible mention."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $disableAllMentions?", "Assistant": "The arguments for `$disableAllMentions` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $disableAllMentions added?", "Assistant": "$disableAllMentions was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $disableAllMentions nativly to forgescipt?", "Assistant": "Yes, $disableAllMentions is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $disableEveryoneMention?", "Assistant": "Disables everyone mention\n\nExample usage:\n```js\n$disableEveryoneMention[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $disableEveryoneMention?", "Assistant": "Use `$disableEveryoneMention` like this:\n```js\n$disableEveryoneMention[]\n```\n\nThis function disables everyone mention."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $disableEveryoneMention in forgescript?", "Assistant": "Yes, You use `$disableEveryoneMention` like this:\n```js\n$disableEveryoneMention[]\n```\n\nThis function disables everyone mention."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $disableEveryoneMention?", "Assistant": "The arguments for `$disableEveryoneMention` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $disableEveryoneMention added?", "Assistant": "$disableEveryoneMention was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $disableEveryoneMention nativly to forgescipt?", "Assistant": "Yes, $disableEveryoneMention is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $disableRoleMentions?", "Assistant": "Disables all role mentions\n\nExample usage:\n```js\n$disableRoleMentions[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $disableRoleMentions?", "Assistant": "Use `$disableRoleMentions` like this:\n```js\n$disableRoleMentions[]\n```\n\nThis function disables all role mentions."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $disableRoleMentions in forgescript?", "Assistant": "Yes, You use `$disableRoleMentions` like this:\n```js\n$disableRoleMentions[]\n```\n\nThis function disables all role mentions."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $disableRoleMentions?", "Assistant": "The arguments for `$disableRoleMentions` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $disableRoleMentions added?", "Assistant": "$disableRoleMentions was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $disableRoleMentions nativly to forgescipt?", "Assistant": "Yes, $disableRoleMentions is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $disableUserMentions?", "Assistant": "Disables all user mentions\n\nExample usage:\n```js\n$disableUserMentions[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $disableUserMentions?", "Assistant": "Use `$disableUserMentions` like this:\n```js\n$disableUserMentions[]\n```\n\nThis function disables all user mentions."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $disableUserMentions in forgescript?", "Assistant": "Yes, You use `$disableUserMentions` like this:\n```js\n$disableUserMentions[]\n```\n\nThis function disables all user mentions."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $disableUserMentions?", "Assistant": "The arguments for `$disableUserMentions` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $disableUserMentions added?", "Assistant": "$disableUserMentions was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $disableUserMentions nativly to forgescipt?", "Assistant": "Yes, $disableUserMentions is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $enableRoleMentions?", "Assistant": "Only parses these roles for mentions\n\nExample usage:\n```js\n$enableRoleMentions[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $enableRoleMentions?", "Assistant": "Use `$enableRoleMentions` like this:\n```js\n$enableRoleMentions[data;data]\n```\n\nThis function only parses these roles for mentions."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $enableRoleMentions in forgescript?", "Assistant": "Yes, You use `$enableRoleMentions` like this:\n```js\n$enableRoleMentions[data;data]\n```\n\nThis function only parses these roles for mentions."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $enableRoleMentions?", "Assistant": "The arguments for `$enableRoleMentions` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve roles from (Required)\n- **roles** (Role): The roles to parse mentions for (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $enableRoleMentions added?", "Assistant": "$enableRoleMentions was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $enableRoleMentions nativly to forgescipt?", "Assistant": "Yes, $enableRoleMentions is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $enableUserMentions?", "Assistant": "Only parses these users for mentions\n\nExample usage:\n```js\n$enableUserMentions[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $enableUserMentions?", "Assistant": "Use `$enableUserMentions` like this:\n```js\n$enableUserMentions[data]\n```\n\nThis function only parses these users for mentions."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $enableUserMentions in forgescript?", "Assistant": "Yes, You use `$enableUserMentions` like this:\n```js\n$enableUserMentions[data]\n```\n\nThis function only parses these users for mentions."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $enableUserMentions?", "Assistant": "The arguments for `$enableUserMentions` are as follows:\n\n- **users** (User): The users to parse mentions for (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $enableUserMentions added?", "Assistant": "$enableUserMentions was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $enableUserMentions nativly to forgescipt?", "Assistant": "Yes, $enableUserMentions is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isChannelMentioned?", "Assistant": "Returns whether a channel was mentioned in this message\n\nExample usage:\n```js\n$isChannelMentioned[data;data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isChannelMentioned?", "Assistant": "Use `$isChannelMentioned` like this:\n```js\n$isChannelMentioned[data;data;data]\n```\n\nThis function returns whether a channel was mentioned in this message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isChannelMentioned in forgescript?", "Assistant": "Yes, You use `$isChannelMentioned` like this:\n```js\n$isChannelMentioned[data;data;data]\n```\n\nThis function returns whether a channel was mentioned in this message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isChannelMentioned?", "Assistant": "The arguments for `$isChannelMentioned` are as follows:\n\n- **channel ID** (Channel): Channel to pull the message from (Required)\n- **message ID** (Message): The message to get mentions from (Required)\n- **channel ID** (Channel): The entity to check for mentions (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isChannelMentioned added?", "Assistant": "$isChannelMentioned was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isChannelMentioned nativly to forgescipt?", "Assistant": "Yes, $isChannelMentioned is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isRoleMentioned?", "Assistant": "Returns whether a role was mentioned in this message\n\nExample usage:\n```js\n$isRoleMentioned[data;data;role_ID_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isRoleMentioned?", "Assistant": "Use `$isRoleMentioned` like this:\n```js\n$isRoleMentioned[data;data;role_ID_example]\n```\n\nThis function returns whether a role was mentioned in this message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isRoleMentioned in forgescript?", "Assistant": "Yes, You use `$isRoleMentioned` like this:\n```js\n$isRoleMentioned[data;data;role_ID_example]\n```\n\nThis function returns whether a role was mentioned in this message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isRoleMentioned?", "Assistant": "The arguments for `$isRoleMentioned` are as follows:\n\n- **channel ID** (Channel): Channel to pull the message from (Required)\n- **message ID** (Message): The message to get mentions from (Required)\n- **role ID** (String): The entity to check for mentions (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isRoleMentioned added?", "Assistant": "$isRoleMentioned was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isRoleMentioned nativly to forgescipt?", "Assistant": "Yes, $isRoleMentioned is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isUserMentioned?", "Assistant": "Returns whether a user was mentioned in this message\n\nExample usage:\n```js\n$isUserMentioned[data;data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isUserMentioned?", "Assistant": "Use `$isUserMentioned` like this:\n```js\n$isUserMentioned[data;data;data]\n```\n\nThis function returns whether a user was mentioned in this message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isUserMentioned in forgescript?", "Assistant": "Yes, You use `$isUserMentioned` like this:\n```js\n$isUserMentioned[data;data;data]\n```\n\nThis function returns whether a user was mentioned in this message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isUserMentioned?", "Assistant": "The arguments for `$isUserMentioned` are as follows:\n\n- **channel ID** (Channel): Channel to pull the message from (Required)\n- **message ID** (Message): The message to get mentions from (Required)\n- **user ID** (User): The entity to check for mentions (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isUserMentioned added?", "Assistant": "$isUserMentioned was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isUserMentioned nativly to forgescipt?", "Assistant": "Yes, $isUserMentioned is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $mentioned?", "Assistant": "Returns the mentioned users\n\nExample usage:\n```js\n$mentioned[30;true]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $mentioned?", "Assistant": "Use `$mentioned` like this:\n```js\n$mentioned[30;true]\n```\n\nThis function returns the mentioned users."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $mentioned in forgescript?", "Assistant": "Yes, You use `$mentioned` like this:\n```js\n$mentioned[30;true]\n```\n\nThis function returns the mentioned users."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $mentioned?", "Assistant": "The arguments for `$mentioned` are as follows:\n\n- **index** (Number): The index of the user (Required)\n- **return author** (Boolean): Return author ID if not found (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $mentioned added?", "Assistant": "$mentioned was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $mentioned nativly to forgescipt?", "Assistant": "Yes, $mentioned is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $mentionedChannelCount?", "Assistant": "Returns the mentioned channel count\n\nExample usage:\n```js\n$mentionedChannelCount[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $mentionedChannelCount?", "Assistant": "Use `$mentionedChannelCount` like this:\n```js\n$mentionedChannelCount[]\n```\n\nThis function returns the mentioned channel count."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $mentionedChannelCount in forgescript?", "Assistant": "Yes, You use `$mentionedChannelCount` like this:\n```js\n$mentionedChannelCount[]\n```\n\nThis function returns the mentioned channel count."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $mentionedChannelCount?", "Assistant": "The arguments for `$mentionedChannelCount` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $mentionedChannelCount added?", "Assistant": "$mentionedChannelCount was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $mentionedChannelCount nativly to forgescipt?", "Assistant": "Yes, $mentionedChannelCount is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $mentionedChannels?", "Assistant": "Returns the mentioned channels\n\nExample usage:\n```js\n$mentionedChannels[43;false]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $mentionedChannels?", "Assistant": "Use `$mentionedChannels` like this:\n```js\n$mentionedChannels[43;false]\n```\n\nThis function returns the mentioned channels."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $mentionedChannels in forgescript?", "Assistant": "Yes, You use `$mentionedChannels` like this:\n```js\n$mentionedChannels[43;false]\n```\n\nThis function returns the mentioned channels."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $mentionedChannels?", "Assistant": "The arguments for `$mentionedChannels` are as follows:\n\n- **index** (Number): The index of the channel (Required)\n- **return channel** (Boolean): Whether to return current channel if not found (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $mentionedChannels added?", "Assistant": "$mentionedChannels was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $mentionedChannels nativly to forgescipt?", "Assistant": "Yes, $mentionedChannels is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $mentionedRoleCount?", "Assistant": "Returns the mentioned role count\n\nExample usage:\n```js\n$mentionedRoleCount[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $mentionedRoleCount?", "Assistant": "Use `$mentionedRoleCount` like this:\n```js\n$mentionedRoleCount[]\n```\n\nThis function returns the mentioned role count."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $mentionedRoleCount in forgescript?", "Assistant": "Yes, You use `$mentionedRoleCount` like this:\n```js\n$mentionedRoleCount[]\n```\n\nThis function returns the mentioned role count."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $mentionedRoleCount?", "Assistant": "The arguments for `$mentionedRoleCount` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $mentionedRoleCount added?", "Assistant": "$mentionedRoleCount was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $mentionedRoleCount nativly to forgescipt?", "Assistant": "Yes, $mentionedRoleCount is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $mentionedRoles?", "Assistant": "Returns the mentioned roles\n\nExample usage:\n```js\n$mentionedRoles[85]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $mentionedRoles?", "Assistant": "Use `$mentionedRoles` like this:\n```js\n$mentionedRoles[85]\n```\n\nThis function returns the mentioned roles."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $mentionedRoles in forgescript?", "Assistant": "Yes, You use `$mentionedRoles` like this:\n```js\n$mentionedRoles[85]\n```\n\nThis function returns the mentioned roles."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $mentionedRoles?", "Assistant": "The arguments for `$mentionedRoles` are as follows:\n\n- **index** (Number): The index of the role (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $mentionedRoles added?", "Assistant": "$mentionedRoles was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $mentionedRoles nativly to forgescipt?", "Assistant": "Yes, $mentionedRoles is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $mentionedUserCount?", "Assistant": "Returns the mentioned user count\n\nExample usage:\n```js\n$mentionedUserCount[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $mentionedUserCount?", "Assistant": "Use `$mentionedUserCount` like this:\n```js\n$mentionedUserCount[]\n```\n\nThis function returns the mentioned user count."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $mentionedUserCount in forgescript?", "Assistant": "Yes, You use `$mentionedUserCount` like this:\n```js\n$mentionedUserCount[]\n```\n\nThis function returns the mentioned user count."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $mentionedUserCount?", "Assistant": "The arguments for `$mentionedUserCount` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $mentionedUserCount added?", "Assistant": "$mentionedUserCount was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $mentionedUserCount nativly to forgescipt?", "Assistant": "Yes, $mentionedUserCount is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $nomention?", "Assistant": "Disables reply ping\n\nExample usage:\n```js\n$nomention[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $nomention?", "Assistant": "Use `$nomention` like this:\n```js\n$nomention[]\n```\n\nThis function disables reply ping."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $nomention in forgescript?", "Assistant": "Yes, You use `$nomention` like this:\n```js\n$nomention[]\n```\n\nThis function disables reply ping."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $nomention?", "Assistant": "The arguments for `$nomention` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $nomention added?", "Assistant": "$nomention was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $nomention nativly to forgescipt?", "Assistant": "Yes, $nomention is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $addMessageReactions?", "Assistant": "Adds reactions to a message, returns amount of emojis successfully reacted\n\nExample usage:\n```js\n$addMessageReactions[data;data;emojis_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $addMessageReactions?", "Assistant": "Use `$addMessageReactions` like this:\n```js\n$addMessageReactions[data;data;emojis_example]\n```\n\nThis function adds reactions to a message, returns amount of emojis successfully reacted."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addMessageReactions in forgescript?", "Assistant": "Yes, You use `$addMessageReactions` like this:\n```js\n$addMessageReactions[data;data;emojis_example]\n```\n\nThis function adds reactions to a message, returns amount of emojis successfully reacted."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $addMessageReactions?", "Assistant": "The arguments for `$addMessageReactions` are as follows:\n\n- **channel ID** (Channel): The channel the message is located (Required)\n- **message ID** (Message): The message to add reactions to (Required)\n- **emojis** (String): The emojis to react with (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $addMessageReactions added?", "Assistant": "$addMessageReactions was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addMessageReactions nativly to forgescipt?", "Assistant": "Yes, $addMessageReactions is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $attachment?", "Assistant": "Adds an attachment to the response\n\nExample usage:\n```js\n$attachment[path_example;name_example;false;encoding_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $attachment?", "Assistant": "Use `$attachment` like this:\n```js\n$attachment[path_example;name_example;false;encoding_example]\n```\n\nThis function adds an attachment to the response."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $attachment in forgescript?", "Assistant": "Yes, You use `$attachment` like this:\n```js\n$attachment[path_example;name_example;false;encoding_example]\n```\n\nThis function adds an attachment to the response."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $attachment?", "Assistant": "The arguments for `$attachment` are as follows:\n\n- **path** (String): The attachment url or path to file (Required)\n- **name** (String): the name for this attachment, with the extension (Required)\n- **as text** (Boolean): Whether to use url param as text (Optional)\n- **encoding** (String): Encoding to use for text, utf-8 default (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $attachment added?", "Assistant": "$attachment was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $attachment nativly to forgescipt?", "Assistant": "Yes, $attachment is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $deleteAllMessageReactions?", "Assistant": "Deletes all reactions from a message, returns bool\n\nExample usage:\n```js\n$deleteAllMessageReactions[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $deleteAllMessageReactions?", "Assistant": "Use `$deleteAllMessageReactions` like this:\n```js\n$deleteAllMessageReactions[data;data]\n```\n\nThis function deletes all reactions from a message, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteAllMessageReactions in forgescript?", "Assistant": "Yes, You use `$deleteAllMessageReactions` like this:\n```js\n$deleteAllMessageReactions[data;data]\n```\n\nThis function deletes all reactions from a message, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $deleteAllMessageReactions?", "Assistant": "The arguments for `$deleteAllMessageReactions` are as follows:\n\n- **channel ID** (Channel): The channel the message is located (Required)\n- **message ID** (Message): The message to remove reactions from (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $deleteAllMessageReactions added?", "Assistant": "$deleteAllMessageReactions was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteAllMessageReactions nativly to forgescipt?", "Assistant": "Yes, $deleteAllMessageReactions is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $deleteIn?", "Assistant": "Deletes the response after the given time\n\nExample usage:\n```js\n$deleteIn[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $deleteIn?", "Assistant": "Use `$deleteIn` like this:\n```js\n$deleteIn[data]\n```\n\nThis function deletes the response after the given time."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteIn in forgescript?", "Assistant": "Yes, You use `$deleteIn` like this:\n```js\n$deleteIn[data]\n```\n\nThis function deletes the response after the given time."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $deleteIn?", "Assistant": "The arguments for `$deleteIn` are as follows:\n\n- **duration** (Time): The duration to wait for until deletion (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $deleteIn added?", "Assistant": "$deleteIn was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteIn nativly to forgescipt?", "Assistant": "Yes, $deleteIn is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $deleteMessage?", "Assistant": "Delete given message ids, returns the count of messages deleted\n\nExample usage:\n```js\n$deleteMessage[data;messages_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $deleteMessage?", "Assistant": "Use `$deleteMessage` like this:\n```js\n$deleteMessage[data;messages_example]\n```\n\nThis function delete given message ids, returns the count of messages deleted."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteMessage in forgescript?", "Assistant": "Yes, You use `$deleteMessage` like this:\n```js\n$deleteMessage[data;messages_example]\n```\n\nThis function delete given message ids, returns the count of messages deleted."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $deleteMessage?", "Assistant": "The arguments for `$deleteMessage` are as follows:\n\n- **channel ID** (Channel): The channel to delete this message from (Required)\n- **messages** (String): The message ids to delete (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $deleteMessage added?", "Assistant": "$deleteMessage was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteMessage nativly to forgescipt?", "Assistant": "Yes, $deleteMessage is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $deleteUserMessageReaction?", "Assistant": "Deletes user emoji reaction from a message, returns bool\n\nExample usage:\n```js\n$deleteUserMessageReaction[data;data;data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $deleteUserMessageReaction?", "Assistant": "Use `$deleteUserMessageReaction` like this:\n```js\n$deleteUserMessageReaction[data;data;data;data]\n```\n\nThis function deletes user emoji reaction from a message, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteUserMessageReaction in forgescript?", "Assistant": "Yes, You use `$deleteUserMessageReaction` like this:\n```js\n$deleteUserMessageReaction[data;data;data;data]\n```\n\nThis function deletes user emoji reaction from a message, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $deleteUserMessageReaction?", "Assistant": "The arguments for `$deleteUserMessageReaction` are as follows:\n\n- **channel ID** (Channel): The channel the message is located (Required)\n- **message ID** (Message): The message to remove user emoji reaction (Required)\n- **emoji** (Reaction): The message reaction to remove user from (Required)\n- **user ID** (User): The user to delete its reaction (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $deleteUserMessageReaction added?", "Assistant": "$deleteUserMessageReaction was added in ForgeScript version 1.0.6."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteUserMessageReaction nativly to forgescipt?", "Assistant": "Yes, $deleteUserMessageReaction is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $editMessage?", "Assistant": "Edits a message in a channel, returns bool\n\nExample usage:\n```js\n$editMessage[data;data;content_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $editMessage?", "Assistant": "Use `$editMessage` like this:\n```js\n$editMessage[data;data;content_example]\n```\n\nThis function edits a message in a channel, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editMessage in forgescript?", "Assistant": "Yes, You use `$editMessage` like this:\n```js\n$editMessage[data;data;content_example]\n```\n\nThis function edits a message in a channel, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $editMessage?", "Assistant": "The arguments for `$editMessage` are as follows:\n\n- **channel ID** (Channel): The channel to edit this message (Required)\n- **message ID** (Message): The message to edit (Required)\n- **content** (String): The content for the message (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $editMessage added?", "Assistant": "$editMessage was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editMessage nativly to forgescipt?", "Assistant": "Yes, $editMessage is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $fetchEmbeds?", "Assistant": "Fetches an embed or all embeds from a message to the next response\n\nExample usage:\n```js\n$fetchEmbeds[data;data;2]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $fetchEmbeds?", "Assistant": "Use `$fetchEmbeds` like this:\n```js\n$fetchEmbeds[data;data;2]\n```\n\nThis function fetches an embed or all embeds from a message to the next response."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $fetchEmbeds in forgescript?", "Assistant": "Yes, You use `$fetchEmbeds` like this:\n```js\n$fetchEmbeds[data;data;2]\n```\n\nThis function fetches an embed or all embeds from a message to the next response."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $fetchEmbeds?", "Assistant": "The arguments for `$fetchEmbeds` are as follows:\n\n- **channel ID** (TextChannel): The channel to pull message from (Required)\n- **message ID** (Message): The message to get embeds from (Required)\n- **index** (Number): The embed index to load (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $fetchEmbeds added?", "Assistant": "$fetchEmbeds was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $fetchEmbeds nativly to forgescipt?", "Assistant": "Yes, $fetchEmbeds is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $fetchResponse?", "Assistant": "Fetches all data from the message and loads it to response, this includes: embeds, components, attachments, stickers\n\nExample usage:\n```js\n$fetchResponse[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $fetchResponse?", "Assistant": "Use `$fetchResponse` like this:\n```js\n$fetchResponse[data;data]\n```\n\nThis function fetches all data from the message and loads it to response, this includes: embeds, components, attachments, stickers."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $fetchResponse in forgescript?", "Assistant": "Yes, You use `$fetchResponse` like this:\n```js\n$fetchResponse[data;data]\n```\n\nThis function fetches all data from the message and loads it to response, this includes: embeds, components, attachments, stickers."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $fetchResponse?", "Assistant": "The arguments for `$fetchResponse` are as follows:\n\n- **channel ID** (TextChannel): The channel to delete this message from (Required)\n- **message ID** (Message): The message to fetch its data (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $fetchResponse added?", "Assistant": "$fetchResponse was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $fetchResponse nativly to forgescipt?", "Assistant": "Yes, $fetchResponse is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $fetchRows?", "Assistant": "Fetch a message's components, this will override any other component added to the response\n\nExample usage:\n```js\n$fetchRows[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $fetchRows?", "Assistant": "Use `$fetchRows` like this:\n```js\n$fetchRows[data;data]\n```\n\nThis function fetch a message's components, this will override any other component added to the response."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $fetchRows in forgescript?", "Assistant": "Yes, You use `$fetchRows` like this:\n```js\n$fetchRows[data;data]\n```\n\nThis function fetch a message's components, this will override any other component added to the response."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $fetchRows?", "Assistant": "The arguments for `$fetchRows` are as follows:\n\n- **channel ID** (Channel): The channel id to get the message from (Required)\n- **message ID** (Message): The message id to get the components from (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $fetchRows added?", "Assistant": "$fetchRows was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $fetchRows nativly to forgescipt?", "Assistant": "Yes, $fetchRows is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $getComponents?", "Assistant": "Retrieves data of a component, not providing any property returns component json\n\nExample usage:\n```js\n$getComponents[data;data;47;17;options;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $getComponents?", "Assistant": "Use `$getComponents` like this:\n```js\n$getComponents[data;data;47;17;options;separator_example]\n```\n\nThis function retrieves data of a component, not providing any property returns component json."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $getComponents in forgescript?", "Assistant": "Yes, You use `$getComponents` like this:\n```js\n$getComponents[data;data;47;17;options;separator_example]\n```\n\nThis function retrieves data of a component, not providing any property returns component json."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $getComponents?", "Assistant": "The arguments for `$getComponents` are as follows:\n\n- **channel ID** (Channel): The channel to pull message from (Required)\n- **message ID** (Message): The message to retrieve data from (Required)\n- **row index** (Number): The row index to get data from (Optional)\n- **component index** (Number): The component index to get data from (Optional)\n- **property** (Enum): The property to pull (Optional)\n- **separator** (String): The separator to use for each value in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $getComponents added?", "Assistant": "$getComponents was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $getComponents nativly to forgescipt?", "Assistant": "Yes, $getComponents is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $getEmbeds?", "Assistant": "Retrieves data of an embed, not providing any property returns embed json\n\nExample usage:\n```js\n$getEmbeds[data;data;12;fieldValue;26]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $getEmbeds?", "Assistant": "Use `$getEmbeds` like this:\n```js\n$getEmbeds[data;data;12;fieldValue;26]\n```\n\nThis function retrieves data of an embed, not providing any property returns embed json."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $getEmbeds in forgescript?", "Assistant": "Yes, You use `$getEmbeds` like this:\n```js\n$getEmbeds[data;data;12;fieldValue;26]\n```\n\nThis function retrieves data of an embed, not providing any property returns embed json."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $getEmbeds?", "Assistant": "The arguments for `$getEmbeds` are as follows:\n\n- **channel ID** (Channel): The channel to pull message from (Required)\n- **message ID** (Message): The message to retrieve data from (Required)\n- **embed index** (Number): The embed index to get data from (Optional)\n- **property** (Enum): The property to pull (Optional)\n- **field index** (Number): Index of field to get (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $getEmbeds added?", "Assistant": "$getEmbeds was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $getEmbeds nativly to forgescipt?", "Assistant": "Yes, $getEmbeds is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $getMessage?", "Assistant": "Retrieves data of a message\n\nExample usage:\n```js\n$getMessage[data;data;hasPoll;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $getMessage?", "Assistant": "Use `$getMessage` like this:\n```js\n$getMessage[data;data;hasPoll;separator_example]\n```\n\nThis function retrieves data of a message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $getMessage in forgescript?", "Assistant": "Yes, You use `$getMessage` like this:\n```js\n$getMessage[data;data;hasPoll;separator_example]\n```\n\nThis function retrieves data of a message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $getMessage?", "Assistant": "The arguments for `$getMessage` are as follows:\n\n- **channel ID** (Channel): The channel to pull message from (Required)\n- **message ID** (Message): The message to retrieve data from (Required)\n- **property** (Enum): The property to pull (Required)\n- **separator** (String): Separator to use in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $getMessage added?", "Assistant": "$getMessage was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $getMessage nativly to forgescipt?", "Assistant": "Yes, $getMessage is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $getMessageReactionCount?", "Assistant": "Gets the amount of users that have reacted to a specific emoji\n\nExample usage:\n```js\n$getMessageReactionCount[data;data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $getMessageReactionCount?", "Assistant": "Use `$getMessageReactionCount` like this:\n```js\n$getMessageReactionCount[data;data;data]\n```\n\nThis function gets the amount of users that have reacted to a specific emoji."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $getMessageReactionCount in forgescript?", "Assistant": "Yes, You use `$getMessageReactionCount` like this:\n```js\n$getMessageReactionCount[data;data;data]\n```\n\nThis function gets the amount of users that have reacted to a specific emoji."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $getMessageReactionCount?", "Assistant": "The arguments for `$getMessageReactionCount` are as follows:\n\n- **channel ID** (Channel): The channel the message is located (Required)\n- **message ID** (Message): The message to get emoji count from (Required)\n- **emoji** (Reaction): The emoji to get its user count (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $getMessageReactionCount added?", "Assistant": "$getMessageReactionCount was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $getMessageReactionCount nativly to forgescipt?", "Assistant": "Yes, $getMessageReactionCount is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $getMessageReactionUsers?", "Assistant": "Gets the user ids that have reacted to a specific emoji\n\nExample usage:\n```js\n$getMessageReactionUsers[data;data;data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $getMessageReactionUsers?", "Assistant": "Use `$getMessageReactionUsers` like this:\n```js\n$getMessageReactionUsers[data;data;data;separator_example]\n```\n\nThis function gets the user ids that have reacted to a specific emoji."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $getMessageReactionUsers in forgescript?", "Assistant": "Yes, You use `$getMessageReactionUsers` like this:\n```js\n$getMessageReactionUsers[data;data;data;separator_example]\n```\n\nThis function gets the user ids that have reacted to a specific emoji."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $getMessageReactionUsers?", "Assistant": "The arguments for `$getMessageReactionUsers` are as follows:\n\n- **channel ID** (Channel): The channel the message is located (Required)\n- **message ID** (Message): The message to get emoji users from (Required)\n- **emoji** (Reaction): The emoji to get its users (Required)\n- **separator** (String): The separator to use for every user (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $getMessageReactionUsers added?", "Assistant": "$getMessageReactionUsers was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $getMessageReactionUsers nativly to forgescipt?", "Assistant": "Yes, $getMessageReactionUsers is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $hasEmbeds?", "Assistant": "Checks whether given message has embeds\n\nExample usage:\n```js\n$hasEmbeds[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $hasEmbeds?", "Assistant": "Use `$hasEmbeds` like this:\n```js\n$hasEmbeds[data;data]\n```\n\nThis function checks whether given message has embeds."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $hasEmbeds in forgescript?", "Assistant": "Yes, You use `$hasEmbeds` like this:\n```js\n$hasEmbeds[data;data]\n```\n\nThis function checks whether given message has embeds."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $hasEmbeds?", "Assistant": "The arguments for `$hasEmbeds` are as follows:\n\n- **channel ID** (Channel): The channel to get message from (Required)\n- **message ID** (Message): The message to check for embeds (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $hasEmbeds added?", "Assistant": "$hasEmbeds was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $hasEmbeds nativly to forgescipt?", "Assistant": "Yes, $hasEmbeds is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isPinned?", "Assistant": "Returns whether the message is pinned\n\nExample usage:\n```js\n$isPinned[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isPinned?", "Assistant": "Use `$isPinned` like this:\n```js\n$isPinned[data;data]\n```\n\nThis function returns whether the message is pinned."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isPinned in forgescript?", "Assistant": "Yes, You use `$isPinned` like this:\n```js\n$isPinned[data;data]\n```\n\nThis function returns whether the message is pinned."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isPinned?", "Assistant": "The arguments for `$isPinned` are as follows:\n\n- **channel ID** (Channel): The channel to pull message from (Required)\n- **message ID** (Message): The message to check if its pinned (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isPinned added?", "Assistant": "$isPinned was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isPinned nativly to forgescipt?", "Assistant": "Yes, $isPinned is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $loadComponents?", "Assistant": "Loads components json (or array) to the response\n\nExample usage:\n```js\n$loadComponents[{key: component_data_value}]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $loadComponents?", "Assistant": "Use `$loadComponents` like this:\n```js\n$loadComponents[{key: component_data_value}]\n```\n\nThis function loads components json (or array) to the response."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $loadComponents in forgescript?", "Assistant": "Yes, You use `$loadComponents` like this:\n```js\n$loadComponents[{key: component_data_value}]\n```\n\nThis function loads components json (or array) to the response."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $loadComponents?", "Assistant": "The arguments for `$loadComponents` are as follows:\n\n- **component data** (Json): The components object or array of objects to load (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $loadComponents added?", "Assistant": "$loadComponents was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $loadComponents nativly to forgescipt?", "Assistant": "Yes, $loadComponents is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $loadEmbeds?", "Assistant": "Loads embed json (or array) to the response\n\nExample usage:\n```js\n$loadEmbeds[{key: embed_data_value}]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $loadEmbeds?", "Assistant": "Use `$loadEmbeds` like this:\n```js\n$loadEmbeds[{key: embed_data_value}]\n```\n\nThis function loads embed json (or array) to the response."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $loadEmbeds in forgescript?", "Assistant": "Yes, You use `$loadEmbeds` like this:\n```js\n$loadEmbeds[{key: embed_data_value}]\n```\n\nThis function loads embed json (or array) to the response."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $loadEmbeds?", "Assistant": "The arguments for `$loadEmbeds` are as follows:\n\n- **embed data** (Json): The embed object or array of objects to load (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $loadEmbeds added?", "Assistant": "$loadEmbeds was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $loadEmbeds nativly to forgescipt?", "Assistant": "Yes, $loadEmbeds is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $message?", "Assistant": "Retrieves arguments from a message command\n\nExample usage:\n```js\n$message[68;21]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $message?", "Assistant": "Use `$message` like this:\n```js\n$message[68;21]\n```\n\nThis function retrieves arguments from a message command."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $message in forgescript?", "Assistant": "Yes, You use `$message` like this:\n```js\n$message[68;21]\n```\n\nThis function retrieves arguments from a message command."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $message?", "Assistant": "The arguments for `$message` are as follows:\n\n- **index** (Number): Index to get arg (Required)\n- **end index** (Number): The end index (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $message added?", "Assistant": "$message was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $message nativly to forgescipt?", "Assistant": "Yes, $message is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $messageAttachment?", "Assistant": "Retrieves an attachment from this message\n\nExample usage:\n```js\n$messageAttachment[data;data;65]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $messageAttachment?", "Assistant": "Use `$messageAttachment` like this:\n```js\n$messageAttachment[data;data;65]\n```\n\nThis function retrieves an attachment from this message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageAttachment in forgescript?", "Assistant": "Yes, You use `$messageAttachment` like this:\n```js\n$messageAttachment[data;data;65]\n```\n\nThis function retrieves an attachment from this message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $messageAttachment?", "Assistant": "The arguments for `$messageAttachment` are as follows:\n\n- **channel ID** (Channel): The channel to pull message from (Required)\n- **message ID** (Message): The message to get its attachments (Required)\n- **index** (Number): The index of the attachment (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $messageAttachment added?", "Assistant": "$messageAttachment was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageAttachment nativly to forgescipt?", "Assistant": "Yes, $messageAttachment is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $messageAttachmentCount?", "Assistant": "Retrieve the amount of attachments in this message\n\nExample usage:\n```js\n$messageAttachmentCount[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $messageAttachmentCount?", "Assistant": "Use `$messageAttachmentCount` like this:\n```js\n$messageAttachmentCount[data;data]\n```\n\nThis function retrieve the amount of attachments in this message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageAttachmentCount in forgescript?", "Assistant": "Yes, You use `$messageAttachmentCount` like this:\n```js\n$messageAttachmentCount[data;data]\n```\n\nThis function retrieve the amount of attachments in this message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $messageAttachmentCount?", "Assistant": "The arguments for `$messageAttachmentCount` are as follows:\n\n- **channel ID** (Channel): The channel to pull message from (Required)\n- **message ID** (Message): The message to get its attachment count (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $messageAttachmentCount added?", "Assistant": "$messageAttachmentCount was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageAttachmentCount nativly to forgescipt?", "Assistant": "Yes, $messageAttachmentCount is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $messageAttachmentFlags?", "Assistant": "Returns the flags of an attachment from this message\n\nExample usage:\n```js\n$messageAttachmentFlags[data;data;98;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $messageAttachmentFlags?", "Assistant": "Use `$messageAttachmentFlags` like this:\n```js\n$messageAttachmentFlags[data;data;98;separator_example]\n```\n\nThis function returns the flags of an attachment from this message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageAttachmentFlags in forgescript?", "Assistant": "Yes, You use `$messageAttachmentFlags` like this:\n```js\n$messageAttachmentFlags[data;data;98;separator_example]\n```\n\nThis function returns the flags of an attachment from this message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $messageAttachmentFlags?", "Assistant": "The arguments for `$messageAttachmentFlags` are as follows:\n\n- **channel ID** (Channel): The channel to pull message from (Required)\n- **message ID** (Message): The message to get its attachment flags (Required)\n- **index** (Number): The index of the attachment (Required)\n- **separator** (String): The separator to use for every flag (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $messageAttachmentFlags added?", "Assistant": "$messageAttachmentFlags was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageAttachmentFlags nativly to forgescipt?", "Assistant": "Yes, $messageAttachmentFlags is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $messageAttachments?", "Assistant": "Retrieves all attachments of this message\n\nExample usage:\n```js\n$messageAttachments[data;data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $messageAttachments?", "Assistant": "Use `$messageAttachments` like this:\n```js\n$messageAttachments[data;data;separator_example]\n```\n\nThis function retrieves all attachments of this message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageAttachments in forgescript?", "Assistant": "Yes, You use `$messageAttachments` like this:\n```js\n$messageAttachments[data;data;separator_example]\n```\n\nThis function retrieves all attachments of this message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $messageAttachments?", "Assistant": "The arguments for `$messageAttachments` are as follows:\n\n- **channel ID** (Channel): The channel to pull message from (Required)\n- **message ID** (Message): The message to get its attachments (Required)\n- **separator** (String): The separator to use for every attachment (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $messageAttachments added?", "Assistant": "$messageAttachments was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageAttachments nativly to forgescipt?", "Assistant": "Yes, $messageAttachments is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $messageContent?", "Assistant": "Retrieves the content of the message\n\nExample usage:\n```js\n$messageContent[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $messageContent?", "Assistant": "Use `$messageContent` like this:\n```js\n$messageContent[]\n```\n\nThis function retrieves the content of the message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageContent in forgescript?", "Assistant": "Yes, You use `$messageContent` like this:\n```js\n$messageContent[]\n```\n\nThis function retrieves the content of the message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $messageContent?", "Assistant": "The arguments for `$messageContent` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $messageContent added?", "Assistant": "$messageContent was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageContent nativly to forgescipt?", "Assistant": "Yes, $messageContent is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $messageCreatedAt?", "Assistant": "Returns the timestamp of the message\n\nExample usage:\n```js\n$messageCreatedAt[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $messageCreatedAt?", "Assistant": "Use `$messageCreatedAt` like this:\n```js\n$messageCreatedAt[data;data]\n```\n\nThis function returns the timestamp of the message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageCreatedAt in forgescript?", "Assistant": "Yes, You use `$messageCreatedAt` like this:\n```js\n$messageCreatedAt[data;data]\n```\n\nThis function returns the timestamp of the message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $messageCreatedAt?", "Assistant": "The arguments for `$messageCreatedAt` are as follows:\n\n- **channel ID** (Channel): The channel to get the message from (Required)\n- **message ID** (Message): The message to get its timestamp (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $messageCreatedAt added?", "Assistant": "$messageCreatedAt was added in ForgeScript version 1.0.2."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageCreatedAt nativly to forgescipt?", "Assistant": "Yes, $messageCreatedAt is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $messageEditedAt?", "Assistant": "Returns the edited timestamp of the message\n\nExample usage:\n```js\n$messageEditedAt[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $messageEditedAt?", "Assistant": "Use `$messageEditedAt` like this:\n```js\n$messageEditedAt[data;data]\n```\n\nThis function returns the edited timestamp of the message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageEditedAt in forgescript?", "Assistant": "Yes, You use `$messageEditedAt` like this:\n```js\n$messageEditedAt[data;data]\n```\n\nThis function returns the edited timestamp of the message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $messageEditedAt?", "Assistant": "The arguments for `$messageEditedAt` are as follows:\n\n- **channel ID** (Channel): The channel to get the message from (Required)\n- **message ID** (Message): The message to get its edited timestamp (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $messageEditedAt added?", "Assistant": "$messageEditedAt was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageEditedAt nativly to forgescipt?", "Assistant": "Yes, $messageEditedAt is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $messageExists?", "Assistant": "Returns whether given message id exists\n\nExample usage:\n```js\n$messageExists[data;message_ID_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $messageExists?", "Assistant": "Use `$messageExists` like this:\n```js\n$messageExists[data;message_ID_example]\n```\n\nThis function returns whether given message id exists."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageExists in forgescript?", "Assistant": "Yes, You use `$messageExists` like this:\n```js\n$messageExists[data;message_ID_example]\n```\n\nThis function returns whether given message id exists."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $messageExists?", "Assistant": "The arguments for `$messageExists` are as follows:\n\n- **channel ID** (Channel): The channel to get the message from (Required)\n- **message ID** (String): The message to check for (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $messageExists added?", "Assistant": "$messageExists was added in ForgeScript version 1.0.5."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageExists nativly to forgescipt?", "Assistant": "Yes, $messageExists is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $messageFlags?", "Assistant": "Returns the flags of a message\n\nExample usage:\n```js\n$messageFlags[data;data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $messageFlags?", "Assistant": "Use `$messageFlags` like this:\n```js\n$messageFlags[data;data;separator_example]\n```\n\nThis function returns the flags of a message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageFlags in forgescript?", "Assistant": "Yes, You use `$messageFlags` like this:\n```js\n$messageFlags[data;data;separator_example]\n```\n\nThis function returns the flags of a message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $messageFlags?", "Assistant": "The arguments for `$messageFlags` are as follows:\n\n- **channel ID** (Channel): The channel to get the message from (Required)\n- **message ID** (Message): The message to return its flags (Required)\n- **separator** (String): The separator to use for every flag (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $messageFlags added?", "Assistant": "$messageFlags was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageFlags nativly to forgescipt?", "Assistant": "Yes, $messageFlags is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $messageID?", "Assistant": "Returns the message id\n\nExample usage:\n```js\n$messageID[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $messageID?", "Assistant": "Use `$messageID` like this:\n```js\n$messageID[]\n```\n\nThis function returns the message id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageID in forgescript?", "Assistant": "Yes, You use `$messageID` like this:\n```js\n$messageID[]\n```\n\nThis function returns the message id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $messageID?", "Assistant": "The arguments for `$messageID` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $messageID added?", "Assistant": "$messageID was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageID nativly to forgescipt?", "Assistant": "Yes, $messageID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $messageLink?", "Assistant": "Retrieves a message url\n\nExample usage:\n```js\n$messageLink[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $messageLink?", "Assistant": "Use `$messageLink` like this:\n```js\n$messageLink[data;data]\n```\n\nThis function retrieves a message url."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageLink in forgescript?", "Assistant": "Yes, You use `$messageLink` like this:\n```js\n$messageLink[data;data]\n```\n\nThis function retrieves a message url."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $messageLink?", "Assistant": "The arguments for `$messageLink` are as follows:\n\n- **channel ID** (Channel): The channel to get the message from (Required)\n- **message ID** (Message): The message to get its url (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $messageLink added?", "Assistant": "$messageLink was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageLink nativly to forgescipt?", "Assistant": "Yes, $messageLink is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $messageRawData?", "Assistant": "Returns the raw data of a message\n\nExample usage:\n```js\n$messageRawData[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $messageRawData?", "Assistant": "Use `$messageRawData` like this:\n```js\n$messageRawData[data;data]\n```\n\nThis function returns the raw data of a message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageRawData in forgescript?", "Assistant": "Yes, You use `$messageRawData` like this:\n```js\n$messageRawData[data;data]\n```\n\nThis function returns the raw data of a message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $messageRawData?", "Assistant": "The arguments for `$messageRawData` are as follows:\n\n- **channel ID** (Channel): The channel to get message from (Required)\n- **message ID** (Message): The message to get raw data from (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $messageRawData added?", "Assistant": "$messageRawData was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageRawData nativly to forgescipt?", "Assistant": "Yes, $messageRawData is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $messageReferenceID?", "Assistant": "Returns the message id that this message replies to\n\nExample usage:\n```js\n$messageReferenceID[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $messageReferenceID?", "Assistant": "Use `$messageReferenceID` like this:\n```js\n$messageReferenceID[data;data]\n```\n\nThis function returns the message id that this message replies to."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageReferenceID in forgescript?", "Assistant": "Yes, You use `$messageReferenceID` like this:\n```js\n$messageReferenceID[data;data]\n```\n\nThis function returns the message id that this message replies to."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $messageReferenceID?", "Assistant": "The arguments for `$messageReferenceID` are as follows:\n\n- **channel ID** (Channel): The channel to get the message from (Required)\n- **message ID** (Message): The message to get its reference (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $messageReferenceID added?", "Assistant": "$messageReferenceID was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageReferenceID nativly to forgescipt?", "Assistant": "Yes, $messageReferenceID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $messageSlice?", "Assistant": "Slices this message's args\n\nExample usage:\n```js\n$messageSlice[81;3]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $messageSlice?", "Assistant": "Use `$messageSlice` like this:\n```js\n$messageSlice[81;3]\n```\n\nThis function slices this message's args."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageSlice in forgescript?", "Assistant": "Yes, You use `$messageSlice` like this:\n```js\n$messageSlice[81;3]\n```\n\nThis function slices this message's args."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $messageSlice?", "Assistant": "The arguments for `$messageSlice` are as follows:\n\n- **start** (Number): The start index (Optional)\n- **end** (Number): The end index (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $messageSlice added?", "Assistant": "$messageSlice was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageSlice nativly to forgescipt?", "Assistant": "Yes, $messageSlice is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $messageSticker?", "Assistant": "Retrieves a sticker url of this message\n\nExample usage:\n```js\n$messageSticker[data;data;49]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $messageSticker?", "Assistant": "Use `$messageSticker` like this:\n```js\n$messageSticker[data;data;49]\n```\n\nThis function retrieves a sticker url of this message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageSticker in forgescript?", "Assistant": "Yes, You use `$messageSticker` like this:\n```js\n$messageSticker[data;data;49]\n```\n\nThis function retrieves a sticker url of this message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $messageSticker?", "Assistant": "The arguments for `$messageSticker` are as follows:\n\n- **channel ID** (Channel): The channel to pull message from (Required)\n- **message ID** (Message): The message to get its stickers (Required)\n- **index** (Number): The index to get sticker (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $messageSticker added?", "Assistant": "$messageSticker was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageSticker nativly to forgescipt?", "Assistant": "Yes, $messageSticker is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $messageStickerCount?", "Assistant": "Retrieves sticker count of this message\n\nExample usage:\n```js\n$messageStickerCount[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $messageStickerCount?", "Assistant": "Use `$messageStickerCount` like this:\n```js\n$messageStickerCount[data;data]\n```\n\nThis function retrieves sticker count of this message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageStickerCount in forgescript?", "Assistant": "Yes, You use `$messageStickerCount` like this:\n```js\n$messageStickerCount[data;data]\n```\n\nThis function retrieves sticker count of this message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $messageStickerCount?", "Assistant": "The arguments for `$messageStickerCount` are as follows:\n\n- **channel ID** (Channel): The channel to pull message from (Required)\n- **message ID** (Message): The message to get its sticker count (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $messageStickerCount added?", "Assistant": "$messageStickerCount was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageStickerCount nativly to forgescipt?", "Assistant": "Yes, $messageStickerCount is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $messageStickers?", "Assistant": "Retrieves all stickers of this message\n\nExample usage:\n```js\n$messageStickers[data;data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $messageStickers?", "Assistant": "Use `$messageStickers` like this:\n```js\n$messageStickers[data;data;separator_example]\n```\n\nThis function retrieves all stickers of this message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageStickers in forgescript?", "Assistant": "Yes, You use `$messageStickers` like this:\n```js\n$messageStickers[data;data;separator_example]\n```\n\nThis function retrieves all stickers of this message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $messageStickers?", "Assistant": "The arguments for `$messageStickers` are as follows:\n\n- **channel ID** (Channel): The channel to pull message from (Required)\n- **message ID** (Message): The message to get its stickers (Required)\n- **separator** (String): The separator to use for every sticker (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $messageStickers added?", "Assistant": "$messageStickers was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageStickers nativly to forgescipt?", "Assistant": "Yes, $messageStickers is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $messageType?", "Assistant": "Returns the message type\n\nExample usage:\n```js\n$messageType[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $messageType?", "Assistant": "Use `$messageType` like this:\n```js\n$messageType[data;data]\n```\n\nThis function returns the message type."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageType in forgescript?", "Assistant": "Yes, You use `$messageType` like this:\n```js\n$messageType[data;data]\n```\n\nThis function returns the message type."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $messageType?", "Assistant": "The arguments for `$messageType` are as follows:\n\n- **channel ID** (Channel): The channel to pull message from (Required)\n- **message ID** (Message): The message to get its type (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $messageType added?", "Assistant": "$messageType was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageType nativly to forgescipt?", "Assistant": "Yes, $messageType is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $messageWebhookID?", "Assistant": "Returns the message's webhook id\n\nExample usage:\n```js\n$messageWebhookID[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $messageWebhookID?", "Assistant": "Use `$messageWebhookID` like this:\n```js\n$messageWebhookID[data;data]\n```\n\nThis function returns the message's webhook id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageWebhookID in forgescript?", "Assistant": "Yes, You use `$messageWebhookID` like this:\n```js\n$messageWebhookID[data;data]\n```\n\nThis function returns the message's webhook id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $messageWebhookID?", "Assistant": "The arguments for `$messageWebhookID` are as follows:\n\n- **channel ID** (Channel): The channel to pull message from (Required)\n- **message ID** (Message): The message to get its webhook id (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $messageWebhookID added?", "Assistant": "$messageWebhookID was added in ForgeScript version 1.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $messageWebhookID nativly to forgescipt?", "Assistant": "Yes, $messageWebhookID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $noMentionMessage?", "Assistant": "Retrieves arguments from a message without mentions\n\nExample usage:\n```js\n$noMentionMessage[48;87]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $noMentionMessage?", "Assistant": "Use `$noMentionMessage` like this:\n```js\n$noMentionMessage[48;87]\n```\n\nThis function retrieves arguments from a message without mentions."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $noMentionMessage in forgescript?", "Assistant": "Yes, You use `$noMentionMessage` like this:\n```js\n$noMentionMessage[48;87]\n```\n\nThis function retrieves arguments from a message without mentions."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $noMentionMessage?", "Assistant": "The arguments for `$noMentionMessage` are as follows:\n\n- **index** (Number): Index to get arg (Required)\n- **end index** (Number): The end index (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $noMentionMessage added?", "Assistant": "$noMentionMessage was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $noMentionMessage nativly to forgescipt?", "Assistant": "Yes, $noMentionMessage is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $pinMessage?", "Assistant": "Pins a message in a channel, returns bool\n\nExample usage:\n```js\n$pinMessage[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $pinMessage?", "Assistant": "Use `$pinMessage` like this:\n```js\n$pinMessage[data;data]\n```\n\nThis function pins a message in a channel, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $pinMessage in forgescript?", "Assistant": "Yes, You use `$pinMessage` like this:\n```js\n$pinMessage[data;data]\n```\n\nThis function pins a message in a channel, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $pinMessage?", "Assistant": "The arguments for `$pinMessage` are as follows:\n\n- **channel ID** (Channel): The channel to pull message from (Required)\n- **message ID** (Message): The message to pin (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $pinMessage added?", "Assistant": "$pinMessage was added in ForgeScript version 1.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $pinMessage nativly to forgescipt?", "Assistant": "Yes, $pinMessage is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $publishMessage?", "Assistant": "Crossposts a message in an announcement channel, returns bool\n\nExample usage:\n```js\n$publishMessage[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $publishMessage?", "Assistant": "Use `$publishMessage` like this:\n```js\n$publishMessage[data;data]\n```\n\nThis function crossposts a message in an announcement channel, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $publishMessage in forgescript?", "Assistant": "Yes, You use `$publishMessage` like this:\n```js\n$publishMessage[data;data]\n```\n\nThis function crossposts a message in an announcement channel, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $publishMessage?", "Assistant": "The arguments for `$publishMessage` are as follows:\n\n- **channel ID** (Channel): The channel to pull message from (Required)\n- **message ID** (Message): The message to announce (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $publishMessage added?", "Assistant": "$publishMessage was added in ForgeScript version 1.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $publishMessage nativly to forgescipt?", "Assistant": "Yes, $publishMessage is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $reply?", "Assistant": "Marks the response as a reply\n\nExample usage:\n```js\n$reply[data;data;true]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $reply?", "Assistant": "Use `$reply` like this:\n```js\n$reply[data;data;true]\n```\n\nThis function marks the response as a reply."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $reply in forgescript?", "Assistant": "Yes, You use `$reply` like this:\n```js\n$reply[data;data;true]\n```\n\nThis function marks the response as a reply."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $reply?", "Assistant": "The arguments for `$reply` are as follows:\n\n- **channel ID** (Channel): The channel the message is at (Required)\n- **message ID** (Message): The message to reply to (Required)\n- **disable ping** (Boolean): Whether to disable ping of reply (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $reply added?", "Assistant": "$reply was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $reply nativly to forgescipt?", "Assistant": "Yes, $reply is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $sticker?", "Assistant": "Attach a sticker to the response\n\nExample usage:\n```js\n$sticker[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $sticker?", "Assistant": "Use `$sticker` like this:\n```js\n$sticker[data]\n```\n\nThis function attach a sticker to the response."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $sticker in forgescript?", "Assistant": "Yes, You use `$sticker` like this:\n```js\n$sticker[data]\n```\n\nThis function attach a sticker to the response."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $sticker?", "Assistant": "The arguments for `$sticker` are as follows:\n\n- **sticker ID** (Sticker): The sticker to use (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $sticker added?", "Assistant": "$sticker was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $sticker nativly to forgescipt?", "Assistant": "Yes, $sticker is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $suppressEmbeds?", "Assistant": "Suppresses embeds on a message, returns bool\n\nExample usage:\n```js\n$suppressEmbeds[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $suppressEmbeds?", "Assistant": "Use `$suppressEmbeds` like this:\n```js\n$suppressEmbeds[data;data]\n```\n\nThis function suppresses embeds on a message, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $suppressEmbeds in forgescript?", "Assistant": "Yes, You use `$suppressEmbeds` like this:\n```js\n$suppressEmbeds[data;data]\n```\n\nThis function suppresses embeds on a message, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $suppressEmbeds?", "Assistant": "The arguments for `$suppressEmbeds` are as follows:\n\n- **channel ID** (Channel): The channel to pull message from (Required)\n- **message ID** (Message): The message to suppress embeds on (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $suppressEmbeds added?", "Assistant": "$suppressEmbeds was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $suppressEmbeds nativly to forgescipt?", "Assistant": "Yes, $suppressEmbeds is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $tts?", "Assistant": "Marks the response as Text-To-Speech\n\nExample usage:\n```js\n$tts[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $tts?", "Assistant": "Use `$tts` like this:\n```js\n$tts[]\n```\n\nThis function marks the response as text-to-speech."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $tts in forgescript?", "Assistant": "Yes, You use `$tts` like this:\n```js\n$tts[]\n```\n\nThis function marks the response as text-to-speech."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $tts?", "Assistant": "The arguments for `$tts` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $tts added?", "Assistant": "$tts was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $tts nativly to forgescipt?", "Assistant": "Yes, $tts is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $unpinMessage?", "Assistant": "Unpins a message from a channel, returns bool\n\nExample usage:\n```js\n$unpinMessage[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $unpinMessage?", "Assistant": "Use `$unpinMessage` like this:\n```js\n$unpinMessage[data;data]\n```\n\nThis function unpins a message from a channel, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $unpinMessage in forgescript?", "Assistant": "Yes, You use `$unpinMessage` like this:\n```js\n$unpinMessage[data;data]\n```\n\nThis function unpins a message from a channel, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $unpinMessage?", "Assistant": "The arguments for `$unpinMessage` are as follows:\n\n- **channel ID** (Channel): The channel to pull message from (Required)\n- **message ID** (Message): The message to unpin (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $unpinMessage added?", "Assistant": "$unpinMessage was added in ForgeScript version 1.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $unpinMessage nativly to forgescipt?", "Assistant": "Yes, $unpinMessage is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $unsuppressEmbeds?", "Assistant": "Unsuppresses embeds on a message, returns bool\n\nExample usage:\n```js\n$unsuppressEmbeds[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $unsuppressEmbeds?", "Assistant": "Use `$unsuppressEmbeds` like this:\n```js\n$unsuppressEmbeds[data;data]\n```\n\nThis function unsuppresses embeds on a message, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $unsuppressEmbeds in forgescript?", "Assistant": "Yes, You use `$unsuppressEmbeds` like this:\n```js\n$unsuppressEmbeds[data;data]\n```\n\nThis function unsuppresses embeds on a message, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $unsuppressEmbeds?", "Assistant": "The arguments for `$unsuppressEmbeds` are as follows:\n\n- **channel ID** (Channel): The channel to pull message from (Required)\n- **message ID** (Message): The message to unsuppress embeds on (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $unsuppressEmbeds added?", "Assistant": "$unsuppressEmbeds was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $unsuppressEmbeds nativly to forgescipt?", "Assistant": "Yes, $unsuppressEmbeds is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $abbreviateNumber?", "Assistant": "Abbreviates given number\n\nExample usage:\n```js\n$abbreviateNumber[61]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $abbreviateNumber?", "Assistant": "Use `$abbreviateNumber` like this:\n```js\n$abbreviateNumber[61]\n```\n\nThis function abbreviates given number."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $abbreviateNumber in forgescript?", "Assistant": "Yes, You use `$abbreviateNumber` like this:\n```js\n$abbreviateNumber[61]\n```\n\nThis function abbreviates given number."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $abbreviateNumber?", "Assistant": "The arguments for `$abbreviateNumber` are as follows:\n\n- **number** (Number): The number to abbreviate (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $abbreviateNumber added?", "Assistant": "$abbreviateNumber was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $abbreviateNumber nativly to forgescipt?", "Assistant": "Yes, $abbreviateNumber is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $average?", "Assistant": "Calculates the average of given numbers\n\nExample usage:\n```js\n$average[separator_example;values_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $average?", "Assistant": "Use `$average` like this:\n```js\n$average[separator_example;values_example]\n```\n\nThis function calculates the average of given numbers."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $average in forgescript?", "Assistant": "Yes, You use `$average` like this:\n```js\n$average[separator_example;values_example]\n```\n\nThis function calculates the average of given numbers."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $average?", "Assistant": "The arguments for `$average` are as follows:\n\n- **separator** (String): The delimiter of each value (Required)\n- **values** (String): Values separated by `separator` (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $average added?", "Assistant": "$average was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $average nativly to forgescipt?", "Assistant": "Yes, $average is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $hexToInt?", "Assistant": "Turns hex string to number\n\nExample usage:\n```js\n$hexToInt[hex_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $hexToInt?", "Assistant": "Use `$hexToInt` like this:\n```js\n$hexToInt[hex_example]\n```\n\nThis function turns hex string to number."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $hexToInt in forgescript?", "Assistant": "Yes, You use `$hexToInt` like this:\n```js\n$hexToInt[hex_example]\n```\n\nThis function turns hex string to number."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $hexToInt?", "Assistant": "The arguments for `$hexToInt` are as follows:\n\n- **hex** (String): The hex to convert (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $hexToInt added?", "Assistant": "$hexToInt was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $hexToInt nativly to forgescipt?", "Assistant": "Yes, $hexToInt is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $inRange?", "Assistant": "Returns whether a number is in range\n\nExample usage:\n```js\n$inRange[58;59;51]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $inRange?", "Assistant": "Use `$inRange` like this:\n```js\n$inRange[58;59;51]\n```\n\nThis function returns whether a number is in range."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $inRange in forgescript?", "Assistant": "Yes, You use `$inRange` like this:\n```js\n$inRange[58;59;51]\n```\n\nThis function returns whether a number is in range."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $inRange?", "Assistant": "The arguments for `$inRange` are as follows:\n\n- **number** (Number): The number to validate (Required)\n- **min** (Number): The min value (Optional)\n- **max** (Number): The max value (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $inRange added?", "Assistant": "$inRange was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $inRange nativly to forgescipt?", "Assistant": "Yes, $inRange is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $intToHex?", "Assistant": "Turns integer to hex\n\nExample usage:\n```js\n$intToHex[72]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $intToHex?", "Assistant": "Use `$intToHex` like this:\n```js\n$intToHex[72]\n```\n\nThis function turns integer to hex."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $intToHex in forgescript?", "Assistant": "Yes, You use `$intToHex` like this:\n```js\n$intToHex[72]\n```\n\nThis function turns integer to hex."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $intToHex?", "Assistant": "The arguments for `$intToHex` are as follows:\n\n- **int** (Number): The integer to convert (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $intToHex added?", "Assistant": "$intToHex was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $intToHex nativly to forgescipt?", "Assistant": "Yes, $intToHex is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isFloat?", "Assistant": "Returns whether the number is a float\n\nExample usage:\n```js\n$isFloat[number_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isFloat?", "Assistant": "Use `$isFloat` like this:\n```js\n$isFloat[number_example]\n```\n\nThis function returns whether the number is a float."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isFloat in forgescript?", "Assistant": "Yes, You use `$isFloat` like this:\n```js\n$isFloat[number_example]\n```\n\nThis function returns whether the number is a float."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isFloat?", "Assistant": "The arguments for `$isFloat` are as follows:\n\n- **number** (String): The number to check (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isFloat added?", "Assistant": "$isFloat was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isFloat nativly to forgescipt?", "Assistant": "Yes, $isFloat is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isInteger?", "Assistant": "Returns whether the number is an integer\n\nExample usage:\n```js\n$isInteger[number_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isInteger?", "Assistant": "Use `$isInteger` like this:\n```js\n$isInteger[number_example]\n```\n\nThis function returns whether the number is an integer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isInteger in forgescript?", "Assistant": "Yes, You use `$isInteger` like this:\n```js\n$isInteger[number_example]\n```\n\nThis function returns whether the number is an integer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isInteger?", "Assistant": "The arguments for `$isInteger` are as follows:\n\n- **number** (String): The number to check (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isInteger added?", "Assistant": "$isInteger was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isInteger nativly to forgescipt?", "Assistant": "Yes, $isInteger is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isNumber?", "Assistant": "Returns whether the number is valid\n\nExample usage:\n```js\n$isNumber[number_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isNumber?", "Assistant": "Use `$isNumber` like this:\n```js\n$isNumber[number_example]\n```\n\nThis function returns whether the number is valid."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isNumber in forgescript?", "Assistant": "Yes, You use `$isNumber` like this:\n```js\n$isNumber[number_example]\n```\n\nThis function returns whether the number is valid."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isNumber?", "Assistant": "The arguments for `$isNumber` are as follows:\n\n- **number** (String): The number to check (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isNumber added?", "Assistant": "$isNumber was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isNumber nativly to forgescipt?", "Assistant": "Yes, $isNumber is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $maxSafeInteger?", "Assistant": "Returns the highest safe integer\n\nExample usage:\n```js\n$maxSafeInteger[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $maxSafeInteger?", "Assistant": "Use `$maxSafeInteger` like this:\n```js\n$maxSafeInteger[]\n```\n\nThis function returns the highest safe integer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $maxSafeInteger in forgescript?", "Assistant": "Yes, You use `$maxSafeInteger` like this:\n```js\n$maxSafeInteger[]\n```\n\nThis function returns the highest safe integer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $maxSafeInteger?", "Assistant": "The arguments for `$maxSafeInteger` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $maxSafeInteger added?", "Assistant": "$maxSafeInteger was added in ForgeScript version 1.0.6."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $maxSafeInteger nativly to forgescipt?", "Assistant": "Yes, $maxSafeInteger is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $minSafeInteger?", "Assistant": "Returns the lowest safe integer\n\nExample usage:\n```js\n$minSafeInteger[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $minSafeInteger?", "Assistant": "Use `$minSafeInteger` like this:\n```js\n$minSafeInteger[]\n```\n\nThis function returns the lowest safe integer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $minSafeInteger in forgescript?", "Assistant": "Yes, You use `$minSafeInteger` like this:\n```js\n$minSafeInteger[]\n```\n\nThis function returns the lowest safe integer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $minSafeInteger?", "Assistant": "The arguments for `$minSafeInteger` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $minSafeInteger added?", "Assistant": "$minSafeInteger was added in ForgeScript version 1.0.6."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $minSafeInteger nativly to forgescipt?", "Assistant": "Yes, $minSafeInteger is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $ordinal?", "Assistant": "Appends a suffix to the number\n\nExample usage:\n```js\n$ordinal[31]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $ordinal?", "Assistant": "Use `$ordinal` like this:\n```js\n$ordinal[31]\n```\n\nThis function appends a suffix to the number."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $ordinal in forgescript?", "Assistant": "Yes, You use `$ordinal` like this:\n```js\n$ordinal[31]\n```\n\nThis function appends a suffix to the number."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $ordinal?", "Assistant": "The arguments for `$ordinal` are as follows:\n\n- **number** (Number): The number to append suffix to (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $ordinal added?", "Assistant": "$ordinal was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $ordinal nativly to forgescipt?", "Assistant": "Yes, $ordinal is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $parseInt?", "Assistant": "Implements native parseInt's function into ForgeScript\n\nExample usage:\n```js\n$parseInt[value_example;93]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $parseInt?", "Assistant": "Use `$parseInt` like this:\n```js\n$parseInt[value_example;93]\n```\n\nThis function implements native parseint's function into forgescript."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $parseInt in forgescript?", "Assistant": "Yes, You use `$parseInt` like this:\n```js\n$parseInt[value_example;93]\n```\n\nThis function implements native parseint's function into forgescript."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $parseInt?", "Assistant": "The arguments for `$parseInt` are as follows:\n\n- **value** (String): The number to parse (Required)\n- **radix** (Number): Radix to use for the parser (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $parseInt added?", "Assistant": "$parseInt was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $parseInt nativly to forgescipt?", "Assistant": "Yes, $parseInt is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $randomNumber?", "Assistant": "Returns a random number (no cache)\n\nExample usage:\n```js\n$randomNumber[32;37;false]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $randomNumber?", "Assistant": "Use `$randomNumber` like this:\n```js\n$randomNumber[32;37;false]\n```\n\nThis function returns a random number (no cache)."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $randomNumber in forgescript?", "Assistant": "Yes, You use `$randomNumber` like this:\n```js\n$randomNumber[32;37;false]\n```\n\nThis function returns a random number (no cache)."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $randomNumber?", "Assistant": "The arguments for `$randomNumber` are as follows:\n\n- **min** (Number): The minimum possible number (Required)\n- **max** (Number): The max possible number (Optional)\n- **decimals** (Boolean): Whether to use decimals (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $randomNumber added?", "Assistant": "$randomNumber was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $randomNumber nativly to forgescipt?", "Assistant": "Yes, $randomNumber is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $separateBigint?", "Assistant": "Separates thousands in the number\n\nExample usage:\n```js\n$separateBigint[data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $separateBigint?", "Assistant": "Use `$separateBigint` like this:\n```js\n$separateBigint[data;separator_example]\n```\n\nThis function separates thousands in the number."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $separateBigint in forgescript?", "Assistant": "Yes, You use `$separateBigint` like this:\n```js\n$separateBigint[data;separator_example]\n```\n\nThis function separates thousands in the number."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $separateBigint?", "Assistant": "The arguments for `$separateBigint` are as follows:\n\n- **number** (BigInt): The number to separate (Required)\n- **separator** (String): The separator to use (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $separateBigint added?", "Assistant": "$separateBigint was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $separateBigint nativly to forgescipt?", "Assistant": "Yes, $separateBigint is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $separateNumber?", "Assistant": "Separates thousands in the number\n\nExample usage:\n```js\n$separateNumber[70;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $separateNumber?", "Assistant": "Use `$separateNumber` like this:\n```js\n$separateNumber[70;separator_example]\n```\n\nThis function separates thousands in the number."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $separateNumber in forgescript?", "Assistant": "Yes, You use `$separateNumber` like this:\n```js\n$separateNumber[70;separator_example]\n```\n\nThis function separates thousands in the number."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $separateNumber?", "Assistant": "The arguments for `$separateNumber` are as follows:\n\n- **number** (Number): The number to separate (Required)\n- **separator** (String): The separator to use (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $separateNumber added?", "Assistant": "$separateNumber was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $separateNumber nativly to forgescipt?", "Assistant": "Yes, $separateNumber is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $advancedBar?", "Assistant": "Generates an advanced progress bar\n\nExample usage:\n```js\n$advancedBar[69;84;64;values_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $advancedBar?", "Assistant": "Use `$advancedBar` like this:\n```js\n$advancedBar[69;84;64;values_example]\n```\n\nThis function generates an advanced progress bar."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $advancedBar in forgescript?", "Assistant": "Yes, You use `$advancedBar` like this:\n```js\n$advancedBar[69;84;64;values_example]\n```\n\nThis function generates an advanced progress bar."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $advancedBar?", "Assistant": "The arguments for `$advancedBar` are as follows:\n\n- **current** (Number): The current value (Required)\n- **max** (Number): The max value of current (Required)\n- **length** (Number): The length of the bar (Optional)\n- **values** (String): The values to make the bar with, for example `=;~;#` means `0%;33%;66%` (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $advancedBar added?", "Assistant": "$advancedBar was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $advancedBar nativly to forgescipt?", "Assistant": "Yes, $advancedBar is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $awaitComponent?", "Assistant": "Awaits a component, executing the code as the interaction context, returns bool depending on whether the interaction was received\n\nExample usage:\n```js\n$awaitComponent[data;data;filter_example;success_code_example;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $awaitComponent?", "Assistant": "Use `$awaitComponent` like this:\n```js\n$awaitComponent[data;data;filter_example;success_code_example;data]\n```\n\nThis function awaits a component, executing the code as the interaction context, returns bool depending on whether the interaction was received."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $awaitComponent in forgescript?", "Assistant": "Yes, You use `$awaitComponent` like this:\n```js\n$awaitComponent[data;data;filter_example;success_code_example;data]\n```\n\nThis function awaits a component, executing the code as the interaction context, returns bool depending on whether the interaction was received."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $awaitComponent?", "Assistant": "The arguments for `$awaitComponent` are as follows:\n\n- **channel ID** (Channel): The channel to pull message from (Required)\n- **message ID** (Message): The message to await component on (Required)\n- **filter** (String): The filter to run for every interaction received after this, this is called with interaction context (Required)\n- **success code** (String): The code to execute on success, this is called with interaction context (Required)\n- **time** (Time): The max time to wait for a component (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $awaitComponent added?", "Assistant": "$awaitComponent was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $awaitComponent nativly to forgescipt?", "Assistant": "Yes, $awaitComponent is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $awaitMessage?", "Assistant": "Awaits a message, returns message ID or nothing if no valid response\n\nExample usage:\n```js\n$awaitMessage[data;variable_name_example;filter_example;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $awaitMessage?", "Assistant": "Use `$awaitMessage` like this:\n```js\n$awaitMessage[data;variable_name_example;filter_example;data]\n```\n\nThis function awaits a message, returns message id or nothing if no valid response."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $awaitMessage in forgescript?", "Assistant": "Yes, You use `$awaitMessage` like this:\n```js\n$awaitMessage[data;variable_name_example;filter_example;data]\n```\n\nThis function awaits a message, returns message id or nothing if no valid response."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $awaitMessage?", "Assistant": "The arguments for `$awaitMessage` are as follows:\n\n- **channel ID** (Channel): The channel to await message on (Required)\n- **variable name** (String): The variable to load the message id that was sent as response by an user, get it with $env[<variable>] (Required)\n- **filter** (String): The filter to run for every message sent after this (Required)\n- **time** (Time): The max time to wait for a message (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $awaitMessage added?", "Assistant": "$awaitMessage was added in ForgeScript version 1.0.7."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $awaitMessage nativly to forgescipt?", "Assistant": "Yes, $awaitMessage is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $awaitModalSubmit?", "Assistant": "Awaits a modal submit, executing the code as the interaction context, returns bool depending on whether the interaction was received\n\nExample usage:\n```js\n$awaitModalSubmit[custom_ID_example;success_code_example;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $awaitModalSubmit?", "Assistant": "Use `$awaitModalSubmit` like this:\n```js\n$awaitModalSubmit[custom_ID_example;success_code_example;data]\n```\n\nThis function awaits a modal submit, executing the code as the interaction context, returns bool depending on whether the interaction was received."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $awaitModalSubmit in forgescript?", "Assistant": "Yes, You use `$awaitModalSubmit` like this:\n```js\n$awaitModalSubmit[custom_ID_example;success_code_example;data]\n```\n\nThis function awaits a modal submit, executing the code as the interaction context, returns bool depending on whether the interaction was received."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $awaitModalSubmit?", "Assistant": "The arguments for `$awaitModalSubmit` are as follows:\n\n- **custom ID** (String): The modal's custom id to wait for (Required)\n- **success code** (String): The code to execute on success, this is called with interaction context (Required)\n- **time** (Time): The max time to wait for a component (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $awaitModalSubmit added?", "Assistant": "$awaitModalSubmit was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $awaitModalSubmit nativly to forgescipt?", "Assistant": "Yes, $awaitModalSubmit is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $bar?", "Assistant": "Generates a progress bar\n\nExample usage:\n```js\n$bar[86;16;54;fill_example;empty_example;false;fillStart_example;fillEnd_example;emptyStart_example;emptyEnd_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $bar?", "Assistant": "Use `$bar` like this:\n```js\n$bar[86;16;54;fill_example;empty_example;false;fillStart_example;fillEnd_example;emptyStart_example;emptyEnd_example]\n```\n\nThis function generates a progress bar."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $bar in forgescript?", "Assistant": "Yes, You use `$bar` like this:\n```js\n$bar[86;16;54;fill_example;empty_example;false;fillStart_example;fillEnd_example;emptyStart_example;emptyEnd_example]\n```\n\nThis function generates a progress bar."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $bar?", "Assistant": "The arguments for `$bar` are as follows:\n\n- **current** (Number): The current value (Required)\n- **max** (Number): The max value of current (Required)\n- **length** (Number): The length of the bar (Optional)\n- **fill** (String): The string to use as filled points of the bar (Optional)\n- **empty** (String): The string to use as empty points of the bar (Optional)\n- **trunc** (Boolean): Whether to truncate instead of round (Optional)\n- **fillStart** (String): The string to use as filled start of the bar (Optional)\n- **fillEnd** (String): The string to use as filled end of the bar (Optional)\n- **emptyStart** (String): The string to use as empty start of the bar (Optional)\n- **emptyEnd** (String): The string to use as empty end of the bar (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $bar added?", "Assistant": "$bar was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $bar nativly to forgescipt?", "Assistant": "Yes, $bar is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $c?", "Assistant": "Marks any code inside as a comment\n\nExample usage:\n```js\n$c[comment_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $c?", "Assistant": "Use `$c` like this:\n```js\n$c[comment_example]\n```\n\nThis function marks any code inside as a comment."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $c in forgescript?", "Assistant": "Yes, You use `$c` like this:\n```js\n$c[comment_example]\n```\n\nThis function marks any code inside as a comment."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $c?", "Assistant": "The arguments for `$c` are as follows:\n\n- **comment** (String): The comments (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $c added?", "Assistant": "$c was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $c nativly to forgescipt?", "Assistant": "Yes, $c is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $callFunction?", "Assistant": "Calls a forge function made by the user\n\nExample usage:\n```js\n$callFunction[name_example;args_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $callFunction?", "Assistant": "Use `$callFunction` like this:\n```js\n$callFunction[name_example;args_example]\n```\n\nThis function calls a forge function made by the user."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $callFunction in forgescript?", "Assistant": "Yes, You use `$callFunction` like this:\n```js\n$callFunction[name_example;args_example]\n```\n\nThis function calls a forge function made by the user."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $callFunction?", "Assistant": "The arguments for `$callFunction` are as follows:\n\n- **name** (String): The function name (Required)\n- **args** (String): The args to call this function with (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $callFunction added?", "Assistant": "$callFunction was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $callFunction nativly to forgescipt?", "Assistant": "Yes, $callFunction is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $debug?", "Assistant": "Returns the debug message\n\nExample usage:\n```js\n$debug[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $debug?", "Assistant": "Use `$debug` like this:\n```js\n$debug[]\n```\n\nThis function returns the debug message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $debug in forgescript?", "Assistant": "Yes, You use `$debug` like this:\n```js\n$debug[]\n```\n\nThis function returns the debug message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $debug?", "Assistant": "The arguments for `$debug` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $debug added?", "Assistant": "$debug was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $debug nativly to forgescipt?", "Assistant": "Yes, $debug is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $disableConsoleErrors?", "Assistant": "Disables possible outcoming errors that are output to console\n\nExample usage:\n```js\n$disableConsoleErrors[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $disableConsoleErrors?", "Assistant": "Use `$disableConsoleErrors` like this:\n```js\n$disableConsoleErrors[]\n```\n\nThis function disables possible outcoming errors that are output to console."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $disableConsoleErrors in forgescript?", "Assistant": "Yes, You use `$disableConsoleErrors` like this:\n```js\n$disableConsoleErrors[]\n```\n\nThis function disables possible outcoming errors that are output to console."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $disableConsoleErrors?", "Assistant": "The arguments for `$disableConsoleErrors` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $disableConsoleErrors added?", "Assistant": "$disableConsoleErrors was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $disableConsoleErrors nativly to forgescipt?", "Assistant": "Yes, $disableConsoleErrors is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $enableConsoleErrors?", "Assistant": "Enables possible outcoming errors that are output to console\n\nExample usage:\n```js\n$enableConsoleErrors[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $enableConsoleErrors?", "Assistant": "Use `$enableConsoleErrors` like this:\n```js\n$enableConsoleErrors[]\n```\n\nThis function enables possible outcoming errors that are output to console."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $enableConsoleErrors in forgescript?", "Assistant": "Yes, You use `$enableConsoleErrors` like this:\n```js\n$enableConsoleErrors[]\n```\n\nThis function enables possible outcoming errors that are output to console."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $enableConsoleErrors?", "Assistant": "The arguments for `$enableConsoleErrors` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $enableConsoleErrors added?", "Assistant": "$enableConsoleErrors was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $enableConsoleErrors nativly to forgescipt?", "Assistant": "Yes, $enableConsoleErrors is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $error?", "Assistant": "Returns the error message\n\nExample usage:\n```js\n$error[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $error?", "Assistant": "Use `$error` like this:\n```js\n$error[]\n```\n\nThis function returns the error message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $error in forgescript?", "Assistant": "Yes, You use `$error` like this:\n```js\n$error[]\n```\n\nThis function returns the error message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $error?", "Assistant": "The arguments for `$error` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $error added?", "Assistant": "$error was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $error nativly to forgescipt?", "Assistant": "Yes, $error is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $escapeCode?", "Assistant": "Code inside this function will not be executed\n\nExample usage:\n```js\n$escapeCode[code_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $escapeCode?", "Assistant": "Use `$escapeCode` like this:\n```js\n$escapeCode[code_example]\n```\n\nThis function code inside this function will not be executed."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $escapeCode in forgescript?", "Assistant": "Yes, You use `$escapeCode` like this:\n```js\n$escapeCode[code_example]\n```\n\nThis function code inside this function will not be executed."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $escapeCode?", "Assistant": "The arguments for `$escapeCode` are as follows:\n\n- **code** (String): The code to ignore (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $escapeCode added?", "Assistant": "$escapeCode was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $escapeCode nativly to forgescipt?", "Assistant": "Yes, $escapeCode is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $poll?", "Assistant": "Creates a poll\n\nExample usage:\n```js\n$poll[question_example;data;true;Default]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $poll?", "Assistant": "Use `$poll` like this:\n```js\n$poll[question_example;data;true;Default]\n```\n\nThis function creates a poll."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $poll in forgescript?", "Assistant": "Yes, You use `$poll` like this:\n```js\n$poll[question_example;data;true;Default]\n```\n\nThis function creates a poll."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $poll?", "Assistant": "The arguments for `$poll` are as follows:\n\n- **question** (String): The poll question (Required)\n- **duration** (Time): The poll's duration (Required)\n- **multiselect** (Boolean): Whether to allow multi select (Optional)\n- **layout** (Enum): The layout for this poll (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $poll added?", "Assistant": "$poll was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $poll nativly to forgescipt?", "Assistant": "Yes, $poll is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $pollAnswer?", "Assistant": "Add a poll answer\n\nExample usage:\n```js\n$pollAnswer[text_example;emoji_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $pollAnswer?", "Assistant": "Use `$pollAnswer` like this:\n```js\n$pollAnswer[text_example;emoji_example]\n```\n\nThis function add a poll answer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $pollAnswer in forgescript?", "Assistant": "Yes, You use `$pollAnswer` like this:\n```js\n$pollAnswer[text_example;emoji_example]\n```\n\nThis function add a poll answer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $pollAnswer?", "Assistant": "The arguments for `$pollAnswer` are as follows:\n\n- **text** (String): The answer's text (Required)\n- **emoji** (String): The emoji to use (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $pollAnswer added?", "Assistant": "$pollAnswer was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $pollAnswer nativly to forgescipt?", "Assistant": "Yes, $pollAnswer is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $pollAnswerEmoji?", "Assistant": "Can only be used in poll events, returns the emoji of the poll answer\n\nExample usage:\n```js\n$pollAnswerEmoji[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $pollAnswerEmoji?", "Assistant": "Use `$pollAnswerEmoji` like this:\n```js\n$pollAnswerEmoji[]\n```\n\nThis function can only be used in poll events, returns the emoji of the poll answer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $pollAnswerEmoji in forgescript?", "Assistant": "Yes, You use `$pollAnswerEmoji` like this:\n```js\n$pollAnswerEmoji[]\n```\n\nThis function can only be used in poll events, returns the emoji of the poll answer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $pollAnswerEmoji?", "Assistant": "The arguments for `$pollAnswerEmoji` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $pollAnswerEmoji added?", "Assistant": "$pollAnswerEmoji was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $pollAnswerEmoji nativly to forgescipt?", "Assistant": "Yes, $pollAnswerEmoji is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $pollAnswerID?", "Assistant": "Can only be used in poll events, returns the answer id used\n\nExample usage:\n```js\n$pollAnswerID[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $pollAnswerID?", "Assistant": "Use `$pollAnswerID` like this:\n```js\n$pollAnswerID[]\n```\n\nThis function can only be used in poll events, returns the answer id used."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $pollAnswerID in forgescript?", "Assistant": "Yes, You use `$pollAnswerID` like this:\n```js\n$pollAnswerID[]\n```\n\nThis function can only be used in poll events, returns the answer id used."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $pollAnswerID?", "Assistant": "The arguments for `$pollAnswerID` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $pollAnswerID added?", "Assistant": "$pollAnswerID was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $pollAnswerID nativly to forgescipt?", "Assistant": "Yes, $pollAnswerID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $pollAnswerMessageID?", "Assistant": "Can only be used in poll events, returns the message id of the poll answer\n\nExample usage:\n```js\n$pollAnswerMessageID[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $pollAnswerMessageID?", "Assistant": "Use `$pollAnswerMessageID` like this:\n```js\n$pollAnswerMessageID[]\n```\n\nThis function can only be used in poll events, returns the message id of the poll answer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $pollAnswerMessageID in forgescript?", "Assistant": "Yes, You use `$pollAnswerMessageID` like this:\n```js\n$pollAnswerMessageID[]\n```\n\nThis function can only be used in poll events, returns the message id of the poll answer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $pollAnswerMessageID?", "Assistant": "The arguments for `$pollAnswerMessageID` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $pollAnswerMessageID added?", "Assistant": "$pollAnswerMessageID was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $pollAnswerMessageID nativly to forgescipt?", "Assistant": "Yes, $pollAnswerMessageID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $pollAnswers?", "Assistant": "Adds multiple poll answers\n\nExample usage:\n```js\n$pollAnswers[text;emoji_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $pollAnswers?", "Assistant": "Use `$pollAnswers` like this:\n```js\n$pollAnswers[text;emoji_example]\n```\n\nThis function adds multiple poll answers."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $pollAnswers in forgescript?", "Assistant": "Yes, You use `$pollAnswers` like this:\n```js\n$pollAnswers[text;emoji_example]\n```\n\nThis function adds multiple poll answers."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $pollAnswers?", "Assistant": "The arguments for `$pollAnswers` are as follows:\n\n- **text;emoji** (String): The answer's text followed by emoji (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $pollAnswers added?", "Assistant": "$pollAnswers was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $pollAnswers nativly to forgescipt?", "Assistant": "Yes, $pollAnswers is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $pollAnswerText?", "Assistant": "Can only be used in poll events, returns the text of the poll answer\n\nExample usage:\n```js\n$pollAnswerText[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $pollAnswerText?", "Assistant": "Use `$pollAnswerText` like this:\n```js\n$pollAnswerText[]\n```\n\nThis function can only be used in poll events, returns the text of the poll answer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $pollAnswerText in forgescript?", "Assistant": "Yes, You use `$pollAnswerText` like this:\n```js\n$pollAnswerText[]\n```\n\nThis function can only be used in poll events, returns the text of the poll answer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $pollAnswerText?", "Assistant": "The arguments for `$pollAnswerText` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $pollAnswerText added?", "Assistant": "$pollAnswerText was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $pollAnswerText nativly to forgescipt?", "Assistant": "Yes, $pollAnswerText is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $pollAnswerVoteCount?", "Assistant": "Can only be used in poll events, returns the vote count of this poll answer\n\nExample usage:\n```js\n$pollAnswerVoteCount[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $pollAnswerVoteCount?", "Assistant": "Use `$pollAnswerVoteCount` like this:\n```js\n$pollAnswerVoteCount[]\n```\n\nThis function can only be used in poll events, returns the vote count of this poll answer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $pollAnswerVoteCount in forgescript?", "Assistant": "Yes, You use `$pollAnswerVoteCount` like this:\n```js\n$pollAnswerVoteCount[]\n```\n\nThis function can only be used in poll events, returns the vote count of this poll answer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $pollAnswerVoteCount?", "Assistant": "The arguments for `$pollAnswerVoteCount` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $pollAnswerVoteCount added?", "Assistant": "$pollAnswerVoteCount was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $pollAnswerVoteCount nativly to forgescipt?", "Assistant": "Yes, $pollAnswerVoteCount is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $pollAnswerVoterIDs?", "Assistant": "Can only be used in poll events, returns the vote user ids of this poll answer\n\nExample usage:\n```js\n$pollAnswerVoterIDs[separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $pollAnswerVoterIDs?", "Assistant": "Use `$pollAnswerVoterIDs` like this:\n```js\n$pollAnswerVoterIDs[separator_example]\n```\n\nThis function can only be used in poll events, returns the vote user ids of this poll answer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $pollAnswerVoterIDs in forgescript?", "Assistant": "Yes, You use `$pollAnswerVoterIDs` like this:\n```js\n$pollAnswerVoterIDs[separator_example]\n```\n\nThis function can only be used in poll events, returns the vote user ids of this poll answer."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $pollAnswerVoterIDs?", "Assistant": "The arguments for `$pollAnswerVoterIDs` are as follows:\n\n- **separator** (String): Optional separator to use for every id (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $pollAnswerVoterIDs added?", "Assistant": "$pollAnswerVoterIDs was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $pollAnswerVoterIDs nativly to forgescipt?", "Assistant": "Yes, $pollAnswerVoterIDs is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $pollEnd?", "Assistant": "Ends a poll\n\nExample usage:\n```js\n$pollEnd[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $pollEnd?", "Assistant": "Use `$pollEnd` like this:\n```js\n$pollEnd[data;data]\n```\n\nThis function ends a poll."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $pollEnd in forgescript?", "Assistant": "Yes, You use `$pollEnd` like this:\n```js\n$pollEnd[data;data]\n```\n\nThis function ends a poll."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $pollEnd?", "Assistant": "The arguments for `$pollEnd` are as follows:\n\n- **channel ID** (TextChannel): The channel to get the message from (Required)\n- **message ID** (Message): The message to get the poll (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $pollEnd added?", "Assistant": "$pollEnd was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $pollEnd nativly to forgescipt?", "Assistant": "Yes, $pollEnd is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $reactionAuthorID?", "Assistant": "The reaction author id that reacted\n\nExample usage:\n```js\n$reactionAuthorID[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $reactionAuthorID?", "Assistant": "Use `$reactionAuthorID` like this:\n```js\n$reactionAuthorID[]\n```\n\nThis function the reaction author id that reacted."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $reactionAuthorID in forgescript?", "Assistant": "Yes, You use `$reactionAuthorID` like this:\n```js\n$reactionAuthorID[]\n```\n\nThis function the reaction author id that reacted."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $reactionAuthorID?", "Assistant": "The arguments for `$reactionAuthorID` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $reactionAuthorID added?", "Assistant": "$reactionAuthorID was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $reactionAuthorID nativly to forgescipt?", "Assistant": "Yes, $reactionAuthorID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $reactionCount?", "Assistant": "The count of reacted users\n\nExample usage:\n```js\n$reactionCount[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $reactionCount?", "Assistant": "Use `$reactionCount` like this:\n```js\n$reactionCount[]\n```\n\nThis function the count of reacted users."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $reactionCount in forgescript?", "Assistant": "Yes, You use `$reactionCount` like this:\n```js\n$reactionCount[]\n```\n\nThis function the count of reacted users."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $reactionCount?", "Assistant": "The arguments for `$reactionCount` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $reactionCount added?", "Assistant": "$reactionCount was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $reactionCount nativly to forgescipt?", "Assistant": "Yes, $reactionCount is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $reactionEmoji?", "Assistant": "The emoji that was used\n\nExample usage:\n```js\n$reactionEmoji[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $reactionEmoji?", "Assistant": "Use `$reactionEmoji` like this:\n```js\n$reactionEmoji[]\n```\n\nThis function the emoji that was used."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $reactionEmoji in forgescript?", "Assistant": "Yes, You use `$reactionEmoji` like this:\n```js\n$reactionEmoji[]\n```\n\nThis function the emoji that was used."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $reactionEmoji?", "Assistant": "The arguments for `$reactionEmoji` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $reactionEmoji added?", "Assistant": "$reactionEmoji was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $reactionEmoji nativly to forgescipt?", "Assistant": "Yes, $reactionEmoji is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $reactionEmojiID?", "Assistant": "The reaction id that was used\n\nExample usage:\n```js\n$reactionEmojiID[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $reactionEmojiID?", "Assistant": "Use `$reactionEmojiID` like this:\n```js\n$reactionEmojiID[]\n```\n\nThis function the reaction id that was used."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $reactionEmojiID in forgescript?", "Assistant": "Yes, You use `$reactionEmojiID` like this:\n```js\n$reactionEmojiID[]\n```\n\nThis function the reaction id that was used."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $reactionEmojiID?", "Assistant": "The arguments for `$reactionEmojiID` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $reactionEmojiID added?", "Assistant": "$reactionEmojiID was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $reactionEmojiID nativly to forgescipt?", "Assistant": "Yes, $reactionEmojiID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $reactionMessageID?", "Assistant": "The message id of the reacted message\n\nExample usage:\n```js\n$reactionMessageID[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $reactionMessageID?", "Assistant": "Use `$reactionMessageID` like this:\n```js\n$reactionMessageID[]\n```\n\nThis function the message id of the reacted message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $reactionMessageID in forgescript?", "Assistant": "Yes, You use `$reactionMessageID` like this:\n```js\n$reactionMessageID[]\n```\n\nThis function the message id of the reacted message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $reactionMessageID?", "Assistant": "The arguments for `$reactionMessageID` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $reactionMessageID added?", "Assistant": "$reactionMessageID was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $reactionMessageID nativly to forgescipt?", "Assistant": "Yes, $reactionMessageID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $addRole?", "Assistant": "Adds a role to a guild, returns role id if success\n\nExample usage:\n```js\n$addRole[data;name_example;color_example;icon_example;false;false;12;perms_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $addRole?", "Assistant": "Use `$addRole` like this:\n```js\n$addRole[data;name_example;color_example;icon_example;false;false;12;perms_example]\n```\n\nThis function adds a role to a guild, returns role id if success."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addRole in forgescript?", "Assistant": "Yes, You use `$addRole` like this:\n```js\n$addRole[data;name_example;color_example;icon_example;false;false;12;perms_example]\n```\n\nThis function adds a role to a guild, returns role id if success."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $addRole?", "Assistant": "The arguments for `$addRole` are as follows:\n\n- **guild ID** (Guild): The guild to add the role to (Required)\n- **name** (String): The role name (Required)\n- **color** (String): The role color (Optional)\n- **icon** (String): The role icon (Optional)\n- **hoisted** (Boolean): Whether the role is hoisted (Optional)\n- **mentionable** (Boolean): Whether the role is mentionable (Optional)\n- **position** (Number): The position for this role (Optional)\n- **perms** (String): The role perms (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $addRole added?", "Assistant": "$addRole was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addRole nativly to forgescipt?", "Assistant": "Yes, $addRole is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $deleteRoles?", "Assistant": "Delete given role ids, returns the count of roles deleted\n\nExample usage:\n```js\n$deleteRoles[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $deleteRoles?", "Assistant": "Use `$deleteRoles` like this:\n```js\n$deleteRoles[data;data]\n```\n\nThis function delete given role ids, returns the count of roles deleted."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteRoles in forgescript?", "Assistant": "Yes, You use `$deleteRoles` like this:\n```js\n$deleteRoles[data;data]\n```\n\nThis function delete given role ids, returns the count of roles deleted."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $deleteRoles?", "Assistant": "The arguments for `$deleteRoles` are as follows:\n\n- **guild ID** (Guild): The guild to delete roles from (Required)\n- **roles** (Role): The roles to delete (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $deleteRoles added?", "Assistant": "$deleteRoles was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteRoles nativly to forgescipt?", "Assistant": "Yes, $deleteRoles is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $editRole?", "Assistant": "Edits role data, returns boolean\n\nExample usage:\n```js\n$editRole[data;data;role_name_example;role_color_example;role_icon_example;true;false;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $editRole?", "Assistant": "Use `$editRole` like this:\n```js\n$editRole[data;data;role_name_example;role_color_example;role_icon_example;true;false;data]\n```\n\nThis function edits role data, returns boolean."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editRole in forgescript?", "Assistant": "Yes, You use `$editRole` like this:\n```js\n$editRole[data;data;role_name_example;role_color_example;role_icon_example;true;false;data]\n```\n\nThis function edits role data, returns boolean."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $editRole?", "Assistant": "The arguments for `$editRole` are as follows:\n\n- **guild ID** (Guild): The guild to pull the role from (Required)\n- **role ID** (Role): The role to edit data (Required)\n- **role name** (String): The new role name, leave empty to not modify (Optional)\n- **role color** (String): The new role color, leave empty to not modify (Optional)\n- **role icon** (String): The new role icon, leave empty to not modify (Optional)\n- **hoisted** (Boolean): Whether the role is hoisted, leave empty to not modify (Optional)\n- **mentionable** (Boolean): Whether the role can be mentioned, leave empty to not modify (Optional)\n- **perms** (Permission): The new perms for the role (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $editRole added?", "Assistant": "$editRole was added in ForgeScript version 1.0.7."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editRole nativly to forgescipt?", "Assistant": "Yes, $editRole is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $editRoleIcon?", "Assistant": "Edits a role's icon, returns boolean\n\nExample usage:\n```js\n$editRoleIcon[data;data;icon_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $editRoleIcon?", "Assistant": "Use `$editRoleIcon` like this:\n```js\n$editRoleIcon[data;data;icon_example]\n```\n\nThis function edits a role's icon, returns boolean."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editRoleIcon in forgescript?", "Assistant": "Yes, You use `$editRoleIcon` like this:\n```js\n$editRoleIcon[data;data;icon_example]\n```\n\nThis function edits a role's icon, returns boolean."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $editRoleIcon?", "Assistant": "The arguments for `$editRoleIcon` are as follows:\n\n- **guild ID** (Guild): The guild to pull the role from (Required)\n- **role ID** (Role): The role to edit icon for (Required)\n- **icon** (String): The new icon for the role (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $editRoleIcon added?", "Assistant": "$editRoleIcon was added in ForgeScript version 1.0.7."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editRoleIcon nativly to forgescipt?", "Assistant": "Yes, $editRoleIcon is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $editRoleName?", "Assistant": "Edits a role's name, returns boolean\n\nExample usage:\n```js\n$editRoleName[data;data;name_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $editRoleName?", "Assistant": "Use `$editRoleName` like this:\n```js\n$editRoleName[data;data;name_example]\n```\n\nThis function edits a role's name, returns boolean."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editRoleName in forgescript?", "Assistant": "Yes, You use `$editRoleName` like this:\n```js\n$editRoleName[data;data;name_example]\n```\n\nThis function edits a role's name, returns boolean."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $editRoleName?", "Assistant": "The arguments for `$editRoleName` are as follows:\n\n- **guild ID** (Guild): The guild to pull the role from (Required)\n- **role ID** (Role): The role to edit name for (Required)\n- **name** (String): The new name for the role (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $editRoleName added?", "Assistant": "$editRoleName was added in ForgeScript version 1.0.7."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editRoleName nativly to forgescipt?", "Assistant": "Yes, $editRoleName is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $editRolePerms?", "Assistant": "Edits a role's perms, returns boolean\n\nExample usage:\n```js\n$editRolePerms[data;data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $editRolePerms?", "Assistant": "Use `$editRolePerms` like this:\n```js\n$editRolePerms[data;data;data]\n```\n\nThis function edits a role's perms, returns boolean."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editRolePerms in forgescript?", "Assistant": "Yes, You use `$editRolePerms` like this:\n```js\n$editRolePerms[data;data;data]\n```\n\nThis function edits a role's perms, returns boolean."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $editRolePerms?", "Assistant": "The arguments for `$editRolePerms` are as follows:\n\n- **guild ID** (Guild): The guild to pull the role from (Required)\n- **role ID** (Role): The role to edit perms for (Required)\n- **perms** (Permission): The new perms for the role (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $editRolePerms added?", "Assistant": "$editRolePerms was added in ForgeScript version 1.0.7."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editRolePerms nativly to forgescipt?", "Assistant": "Yes, $editRolePerms is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $editRolePosition?", "Assistant": "Edits a role's position, returns boolean\n\nExample usage:\n```js\n$editRolePosition[data;data;1]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $editRolePosition?", "Assistant": "Use `$editRolePosition` like this:\n```js\n$editRolePosition[data;data;1]\n```\n\nThis function edits a role's position, returns boolean."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editRolePosition in forgescript?", "Assistant": "Yes, You use `$editRolePosition` like this:\n```js\n$editRolePosition[data;data;1]\n```\n\nThis function edits a role's position, returns boolean."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $editRolePosition?", "Assistant": "The arguments for `$editRolePosition` are as follows:\n\n- **guild ID** (Guild): The guild to pull the role from (Required)\n- **role ID** (Role): The role to edit position for (Required)\n- **position** (Number): The new position for the role (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $editRolePosition added?", "Assistant": "$editRolePosition was added in ForgeScript version 1.0.7."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editRolePosition nativly to forgescipt?", "Assistant": "Yes, $editRolePosition is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $editRoleUnicodeEmoji?", "Assistant": "Edits a role's unicode emoji, returns boolean\n\nExample usage:\n```js\n$editRoleUnicodeEmoji[data;data;emoji_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $editRoleUnicodeEmoji?", "Assistant": "Use `$editRoleUnicodeEmoji` like this:\n```js\n$editRoleUnicodeEmoji[data;data;emoji_example]\n```\n\nThis function edits a role's unicode emoji, returns boolean."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editRoleUnicodeEmoji in forgescript?", "Assistant": "Yes, You use `$editRoleUnicodeEmoji` like this:\n```js\n$editRoleUnicodeEmoji[data;data;emoji_example]\n```\n\nThis function edits a role's unicode emoji, returns boolean."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $editRoleUnicodeEmoji?", "Assistant": "The arguments for `$editRoleUnicodeEmoji` are as follows:\n\n- **guild ID** (Guild): The guild to pull the role from (Required)\n- **role ID** (Role): The role to edit unicode emoji for (Required)\n- **emoji** (String): The new unicode emoji for the role (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $editRoleUnicodeEmoji added?", "Assistant": "$editRoleUnicodeEmoji was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editRoleUnicodeEmoji nativly to forgescipt?", "Assistant": "Yes, $editRoleUnicodeEmoji is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $randomRoleID?", "Assistant": "Returns a random role ID\n\nExample usage:\n```js\n$randomRoleID[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $randomRoleID?", "Assistant": "Use `$randomRoleID` like this:\n```js\n$randomRoleID[data]\n```\n\nThis function returns a random role id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $randomRoleID in forgescript?", "Assistant": "Yes, You use `$randomRoleID` like this:\n```js\n$randomRoleID[data]\n```\n\nThis function returns a random role id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $randomRoleID?", "Assistant": "The arguments for `$randomRoleID` are as follows:\n\n- **guild ID** (Guild): The guild id to return the role from (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $randomRoleID added?", "Assistant": "$randomRoleID was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $randomRoleID nativly to forgescipt?", "Assistant": "Yes, $randomRoleID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $roleColor?", "Assistant": "Returns the role color\n\nExample usage:\n```js\n$roleColor[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $roleColor?", "Assistant": "Use `$roleColor` like this:\n```js\n$roleColor[data;data]\n```\n\nThis function returns the role color."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleColor in forgescript?", "Assistant": "Yes, You use `$roleColor` like this:\n```js\n$roleColor[data;data]\n```\n\nThis function returns the role color."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $roleColor?", "Assistant": "The arguments for `$roleColor` are as follows:\n\n- **guild ID** (Guild): The guild id to return the role from (Required)\n- **role ID** (Role): The role id return its color (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $roleColor added?", "Assistant": "$roleColor was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleColor nativly to forgescipt?", "Assistant": "Yes, $roleColor is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $roleCount?", "Assistant": "Returns the role count of all servers\n\nExample usage:\n```js\n$roleCount[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $roleCount?", "Assistant": "Use `$roleCount` like this:\n```js\n$roleCount[]\n```\n\nThis function returns the role count of all servers."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleCount in forgescript?", "Assistant": "Yes, You use `$roleCount` like this:\n```js\n$roleCount[]\n```\n\nThis function returns the role count of all servers."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $roleCount?", "Assistant": "The arguments for `$roleCount` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $roleCount added?", "Assistant": "$roleCount was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleCount nativly to forgescipt?", "Assistant": "Yes, $roleCount is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $roleCreatedAt?", "Assistant": "Returns the role creation date\n\nExample usage:\n```js\n$roleCreatedAt[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $roleCreatedAt?", "Assistant": "Use `$roleCreatedAt` like this:\n```js\n$roleCreatedAt[data;data]\n```\n\nThis function returns the role creation date."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleCreatedAt in forgescript?", "Assistant": "Yes, You use `$roleCreatedAt` like this:\n```js\n$roleCreatedAt[data;data]\n```\n\nThis function returns the role creation date."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $roleCreatedAt?", "Assistant": "The arguments for `$roleCreatedAt` are as follows:\n\n- **guild ID** (Guild): The guild id to return the role from (Required)\n- **role ID** (Role): The role id return its creation date (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $roleCreatedAt added?", "Assistant": "$roleCreatedAt was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleCreatedAt nativly to forgescipt?", "Assistant": "Yes, $roleCreatedAt is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $roleEditable?", "Assistant": "Returns whether the role is editable by the bot\n\nExample usage:\n```js\n$roleEditable[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $roleEditable?", "Assistant": "Use `$roleEditable` like this:\n```js\n$roleEditable[data;data]\n```\n\nThis function returns whether the role is editable by the bot."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleEditable in forgescript?", "Assistant": "Yes, You use `$roleEditable` like this:\n```js\n$roleEditable[data;data]\n```\n\nThis function returns whether the role is editable by the bot."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $roleEditable?", "Assistant": "The arguments for `$roleEditable` are as follows:\n\n- **guild ID** (Guild): The guild id to return the role from (Required)\n- **role ID** (Role): The role id return its editable state (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $roleEditable added?", "Assistant": "$roleEditable was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleEditable nativly to forgescipt?", "Assistant": "Yes, $roleEditable is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $roleExists?", "Assistant": "Returns whether an role id exists\n\nExample usage:\n```js\n$roleExists[data;role_ID_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $roleExists?", "Assistant": "Use `$roleExists` like this:\n```js\n$roleExists[data;role_ID_example]\n```\n\nThis function returns whether an role id exists."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleExists in forgescript?", "Assistant": "Yes, You use `$roleExists` like this:\n```js\n$roleExists[data;role_ID_example]\n```\n\nThis function returns whether an role id exists."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $roleExists?", "Assistant": "The arguments for `$roleExists` are as follows:\n\n- **guild ID** (Guild): The guild to check for the role (Required)\n- **role ID** (String): The role to check for (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $roleExists added?", "Assistant": "$roleExists was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleExists nativly to forgescipt?", "Assistant": "Yes, $roleExists is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $roleFlags?", "Assistant": "Returns the role flags\n\nExample usage:\n```js\n$roleFlags[data;data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $roleFlags?", "Assistant": "Use `$roleFlags` like this:\n```js\n$roleFlags[data;data;separator_example]\n```\n\nThis function returns the role flags."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleFlags in forgescript?", "Assistant": "Yes, You use `$roleFlags` like this:\n```js\n$roleFlags[data;data;separator_example]\n```\n\nThis function returns the role flags."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $roleFlags?", "Assistant": "The arguments for `$roleFlags` are as follows:\n\n- **guild ID** (Guild): The guild id to return the role from (Required)\n- **role ID** (Role): The role id return its flags (Required)\n- **separator** (String): The separator to use for every flag (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $roleFlags added?", "Assistant": "$roleFlags was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleFlags nativly to forgescipt?", "Assistant": "Yes, $roleFlags is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $roleHoisted?", "Assistant": "Returns whether the role is hoisted\n\nExample usage:\n```js\n$roleHoisted[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $roleHoisted?", "Assistant": "Use `$roleHoisted` like this:\n```js\n$roleHoisted[data;data]\n```\n\nThis function returns whether the role is hoisted."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleHoisted in forgescript?", "Assistant": "Yes, You use `$roleHoisted` like this:\n```js\n$roleHoisted[data;data]\n```\n\nThis function returns whether the role is hoisted."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $roleHoisted?", "Assistant": "The arguments for `$roleHoisted` are as follows:\n\n- **guild ID** (Guild): The guild id to return the role from (Required)\n- **role ID** (Role): The role id return its hoisted state (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $roleHoisted added?", "Assistant": "$roleHoisted was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleHoisted nativly to forgescipt?", "Assistant": "Yes, $roleHoisted is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $roleIcon?", "Assistant": "Returns the role icon\n\nExample usage:\n```js\n$roleIcon[data;data;59;extension_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $roleIcon?", "Assistant": "Use `$roleIcon` like this:\n```js\n$roleIcon[data;data;59;extension_example]\n```\n\nThis function returns the role icon."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleIcon in forgescript?", "Assistant": "Yes, You use `$roleIcon` like this:\n```js\n$roleIcon[data;data;59;extension_example]\n```\n\nThis function returns the role icon."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $roleIcon?", "Assistant": "The arguments for `$roleIcon` are as follows:\n\n- **guild ID** (Guild): The guild to retrieve the role from (Required)\n- **role ID** (Role): The role to use to get its icon (Required)\n- **size** (Number): The size to use for the image (Optional)\n- **extension** (String): The extension to use for the image (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $roleIcon added?", "Assistant": "$roleIcon was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleIcon nativly to forgescipt?", "Assistant": "Yes, $roleIcon is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $roleID?", "Assistant": "Returns a role id with given name\n\nExample usage:\n```js\n$roleID[data;name_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $roleID?", "Assistant": "Use `$roleID` like this:\n```js\n$roleID[data;name_example]\n```\n\nThis function returns a role id with given name."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleID in forgescript?", "Assistant": "Yes, You use `$roleID` like this:\n```js\n$roleID[data;name_example]\n```\n\nThis function returns a role id with given name."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $roleID?", "Assistant": "The arguments for `$roleID` are as follows:\n\n- **guild ID** (Guild): The guild id to return the role from (Required)\n- **name** (String): The role name to return its id (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $roleID added?", "Assistant": "$roleID was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleID nativly to forgescipt?", "Assistant": "Yes, $roleID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $roleIDs?", "Assistant": "Returns the role ids of a guild\n\nExample usage:\n```js\n$roleIDs[data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $roleIDs?", "Assistant": "Use `$roleIDs` like this:\n```js\n$roleIDs[data;separator_example]\n```\n\nThis function returns the role ids of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleIDs in forgescript?", "Assistant": "Yes, You use `$roleIDs` like this:\n```js\n$roleIDs[data;separator_example]\n```\n\nThis function returns the role ids of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $roleIDs?", "Assistant": "The arguments for `$roleIDs` are as follows:\n\n- **guild ID** (Guild): The guild to return the roles of (Required)\n- **separator** (String): The separator to use for each role (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $roleIDs added?", "Assistant": "$roleIDs was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleIDs nativly to forgescipt?", "Assistant": "Yes, $roleIDs is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $roleIntColor?", "Assistant": "Returns the role color as int\n\nExample usage:\n```js\n$roleIntColor[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $roleIntColor?", "Assistant": "Use `$roleIntColor` like this:\n```js\n$roleIntColor[data;data]\n```\n\nThis function returns the role color as int."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleIntColor in forgescript?", "Assistant": "Yes, You use `$roleIntColor` like this:\n```js\n$roleIntColor[data;data]\n```\n\nThis function returns the role color as int."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $roleIntColor?", "Assistant": "The arguments for `$roleIntColor` are as follows:\n\n- **guild ID** (Guild): The guild id to return the role from (Required)\n- **role ID** (Role): The role id return its color (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $roleIntColor added?", "Assistant": "$roleIntColor was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleIntColor nativly to forgescipt?", "Assistant": "Yes, $roleIntColor is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $roleManageable?", "Assistant": "Returns whether the role is managed by discord\n\nExample usage:\n```js\n$roleManageable[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $roleManageable?", "Assistant": "Use `$roleManageable` like this:\n```js\n$roleManageable[data;data]\n```\n\nThis function returns whether the role is managed by discord."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleManageable in forgescript?", "Assistant": "Yes, You use `$roleManageable` like this:\n```js\n$roleManageable[data;data]\n```\n\nThis function returns whether the role is managed by discord."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $roleManageable?", "Assistant": "The arguments for `$roleManageable` are as follows:\n\n- **guild ID** (Guild): The guild id to return the role from (Required)\n- **role ID** (Role): The role id return its managed state (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $roleManageable added?", "Assistant": "$roleManageable was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleManageable nativly to forgescipt?", "Assistant": "Yes, $roleManageable is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $roleMembers?", "Assistant": "Returns the role member ids\n\nExample usage:\n```js\n$roleMembers[data;data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $roleMembers?", "Assistant": "Use `$roleMembers` like this:\n```js\n$roleMembers[data;data;separator_example]\n```\n\nThis function returns the role member ids."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleMembers in forgescript?", "Assistant": "Yes, You use `$roleMembers` like this:\n```js\n$roleMembers[data;data;separator_example]\n```\n\nThis function returns the role member ids."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $roleMembers?", "Assistant": "The arguments for `$roleMembers` are as follows:\n\n- **guild ID** (Guild): The guild id to return the role from (Required)\n- **role ID** (Role): The role id return its members (Required)\n- **separator** (String): The separator to use for each member (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $roleMembers added?", "Assistant": "$roleMembers was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleMembers nativly to forgescipt?", "Assistant": "Yes, $roleMembers is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $roleMentionable?", "Assistant": "Returns whether the role is mentionable\n\nExample usage:\n```js\n$roleMentionable[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $roleMentionable?", "Assistant": "Use `$roleMentionable` like this:\n```js\n$roleMentionable[data;data]\n```\n\nThis function returns whether the role is mentionable."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleMentionable in forgescript?", "Assistant": "Yes, You use `$roleMentionable` like this:\n```js\n$roleMentionable[data;data]\n```\n\nThis function returns whether the role is mentionable."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $roleMentionable?", "Assistant": "The arguments for `$roleMentionable` are as follows:\n\n- **guild ID** (Guild): The guild id to return the role from (Required)\n- **role ID** (Role): The role id return its mentionable state (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $roleMentionable added?", "Assistant": "$roleMentionable was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleMentionable nativly to forgescipt?", "Assistant": "Yes, $roleMentionable is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $roleName?", "Assistant": "Returns a role name with given id\n\nExample usage:\n```js\n$roleName[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $roleName?", "Assistant": "Use `$roleName` like this:\n```js\n$roleName[data;data]\n```\n\nThis function returns a role name with given id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleName in forgescript?", "Assistant": "Yes, You use `$roleName` like this:\n```js\n$roleName[data;data]\n```\n\nThis function returns a role name with given id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $roleName?", "Assistant": "The arguments for `$roleName` are as follows:\n\n- **guild ID** (Guild): The guild id to return the role from (Required)\n- **role ID** (Role): The role to return its name (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $roleName added?", "Assistant": "$roleName was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleName nativly to forgescipt?", "Assistant": "Yes, $roleName is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $roleNames?", "Assistant": "Returns the role names of a guild\n\nExample usage:\n```js\n$roleNames[data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $roleNames?", "Assistant": "Use `$roleNames` like this:\n```js\n$roleNames[data;separator_example]\n```\n\nThis function returns the role names of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleNames in forgescript?", "Assistant": "Yes, You use `$roleNames` like this:\n```js\n$roleNames[data;separator_example]\n```\n\nThis function returns the role names of a guild."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $roleNames?", "Assistant": "The arguments for `$roleNames` are as follows:\n\n- **guild ID** (Guild): The guild to return the roles of (Required)\n- **separator** (String): The separator to use for each role (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $roleNames added?", "Assistant": "$roleNames was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleNames nativly to forgescipt?", "Assistant": "Yes, $roleNames is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $rolePerms?", "Assistant": "Returns the role perms\n\nExample usage:\n```js\n$rolePerms[data;data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $rolePerms?", "Assistant": "Use `$rolePerms` like this:\n```js\n$rolePerms[data;data;separator_example]\n```\n\nThis function returns the role perms."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $rolePerms in forgescript?", "Assistant": "Yes, You use `$rolePerms` like this:\n```js\n$rolePerms[data;data;separator_example]\n```\n\nThis function returns the role perms."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $rolePerms?", "Assistant": "The arguments for `$rolePerms` are as follows:\n\n- **guild ID** (Guild): The guild id to return the role from (Required)\n- **role ID** (Role): The role id return its perms (Required)\n- **separator** (String): The separator to use for every perm (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $rolePerms added?", "Assistant": "$rolePerms was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $rolePerms nativly to forgescipt?", "Assistant": "Yes, $rolePerms is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $rolePosition?", "Assistant": "Returns the role position\n\nExample usage:\n```js\n$rolePosition[data;data;false]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $rolePosition?", "Assistant": "Use `$rolePosition` like this:\n```js\n$rolePosition[data;data;false]\n```\n\nThis function returns the role position."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $rolePosition in forgescript?", "Assistant": "Yes, You use `$rolePosition` like this:\n```js\n$rolePosition[data;data;false]\n```\n\nThis function returns the role position."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $rolePosition?", "Assistant": "The arguments for `$rolePosition` are as follows:\n\n- **guild ID** (Guild): The guild id to return the role from (Required)\n- **role ID** (Role): The role id return its position (Required)\n- **asc order** (Boolean): Whether to count roles in ascending order (top to bottom) (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $rolePosition added?", "Assistant": "$rolePosition was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $rolePosition nativly to forgescipt?", "Assistant": "Yes, $rolePosition is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $roleRawData?", "Assistant": "Returns the raw data of a role\n\nExample usage:\n```js\n$roleRawData[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $roleRawData?", "Assistant": "Use `$roleRawData` like this:\n```js\n$roleRawData[data;data]\n```\n\nThis function returns the raw data of a role."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleRawData in forgescript?", "Assistant": "Yes, You use `$roleRawData` like this:\n```js\n$roleRawData[data;data]\n```\n\nThis function returns the raw data of a role."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $roleRawData?", "Assistant": "The arguments for `$roleRawData` are as follows:\n\n- **guild ID** (Guild): The guild to get role from (Required)\n- **role ID** (Role): The role to get raw data from (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $roleRawData added?", "Assistant": "$roleRawData was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleRawData nativly to forgescipt?", "Assistant": "Yes, $roleRawData is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $roleRawPosition?", "Assistant": "Returns the role raw position\n\nExample usage:\n```js\n$roleRawPosition[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $roleRawPosition?", "Assistant": "Use `$roleRawPosition` like this:\n```js\n$roleRawPosition[data;data]\n```\n\nThis function returns the role raw position."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleRawPosition in forgescript?", "Assistant": "Yes, You use `$roleRawPosition` like this:\n```js\n$roleRawPosition[data;data]\n```\n\nThis function returns the role raw position."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $roleRawPosition?", "Assistant": "The arguments for `$roleRawPosition` are as follows:\n\n- **guild ID** (Guild): The guild id to return the role from (Required)\n- **role ID** (Role): The role id return its raw position (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $roleRawPosition added?", "Assistant": "$roleRawPosition was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleRawPosition nativly to forgescipt?", "Assistant": "Yes, $roleRawPosition is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $roleTags?", "Assistant": "Returns all role tags\n\nExample usage:\n```js\n$roleTags[data;data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $roleTags?", "Assistant": "Use `$roleTags` like this:\n```js\n$roleTags[data;data;separator_example]\n```\n\nThis function returns all role tags."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleTags in forgescript?", "Assistant": "Yes, You use `$roleTags` like this:\n```js\n$roleTags[data;data;separator_example]\n```\n\nThis function returns all role tags."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $roleTags?", "Assistant": "The arguments for `$roleTags` are as follows:\n\n- **guild ID** (Guild): The guild id to return the role from (Required)\n- **role ID** (Role): The role id return its perms (Required)\n- **separator** (String): The separator to use for every perm (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $roleTags added?", "Assistant": "$roleTags was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleTags nativly to forgescipt?", "Assistant": "Yes, $roleTags is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $roleUnicodeEmoji?", "Assistant": "Returns the unicode emoji used by the role\n\nExample usage:\n```js\n$roleUnicodeEmoji[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $roleUnicodeEmoji?", "Assistant": "Use `$roleUnicodeEmoji` like this:\n```js\n$roleUnicodeEmoji[data;data]\n```\n\nThis function returns the unicode emoji used by the role."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleUnicodeEmoji in forgescript?", "Assistant": "Yes, You use `$roleUnicodeEmoji` like this:\n```js\n$roleUnicodeEmoji[data;data]\n```\n\nThis function returns the unicode emoji used by the role."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $roleUnicodeEmoji?", "Assistant": "The arguments for `$roleUnicodeEmoji` are as follows:\n\n- **guild ID** (Guild): The guild id to return the role from (Required)\n- **role ID** (Role): The role id return its unicode emote (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $roleUnicodeEmoji added?", "Assistant": "$roleUnicodeEmoji was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $roleUnicodeEmoji nativly to forgescipt?", "Assistant": "Yes, $roleUnicodeEmoji is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $auditLog?", "Assistant": "Retrieves new data from an event whose context was an audit log instance\n\nExample usage:\n```js\n$auditLog[targetID;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $auditLog?", "Assistant": "Use `$auditLog` like this:\n```js\n$auditLog[targetID;separator_example]\n```\n\nThis function retrieves new data from an event whose context was an audit log instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $auditLog in forgescript?", "Assistant": "Yes, You use `$auditLog` like this:\n```js\n$auditLog[targetID;separator_example]\n```\n\nThis function retrieves new data from an event whose context was an audit log instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $auditLog?", "Assistant": "The arguments for `$auditLog` are as follows:\n\n- **property** (Enum): The property to pull (Required)\n- **separator** (String): The separator to use in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $auditLog added?", "Assistant": "$auditLog was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $auditLog nativly to forgescipt?", "Assistant": "Yes, $auditLog is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $bulk?", "Assistant": "Retrieves data from an event whose context was a bulk delete event\n\nExample usage:\n```js\n$bulk[messages;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $bulk?", "Assistant": "Use `$bulk` like this:\n```js\n$bulk[messages;separator_example]\n```\n\nThis function retrieves data from an event whose context was a bulk delete event."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $bulk in forgescript?", "Assistant": "Yes, You use `$bulk` like this:\n```js\n$bulk[messages;separator_example]\n```\n\nThis function retrieves data from an event whose context was a bulk delete event."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $bulk?", "Assistant": "The arguments for `$bulk` are as follows:\n\n- **property** (Enum): The property to pull (Required)\n- **separator** (String): The separator to use in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $bulk added?", "Assistant": "$bulk was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $bulk nativly to forgescipt?", "Assistant": "Yes, $bulk is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $newAutomodRule?", "Assistant": "Retrieves new data from an event whose context was an automod rule instance\n\nExample usage:\n```js\n$newAutomodRule[authorID;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $newAutomodRule?", "Assistant": "Use `$newAutomodRule` like this:\n```js\n$newAutomodRule[authorID;separator_example]\n```\n\nThis function retrieves new data from an event whose context was an automod rule instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $newAutomodRule in forgescript?", "Assistant": "Yes, You use `$newAutomodRule` like this:\n```js\n$newAutomodRule[authorID;separator_example]\n```\n\nThis function retrieves new data from an event whose context was an automod rule instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $newAutomodRule?", "Assistant": "The arguments for `$newAutomodRule` are as follows:\n\n- **property** (Enum): The property to pull (Required)\n- **separator** (String): The separator to use in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $newAutomodRule added?", "Assistant": "$newAutomodRule was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $newAutomodRule nativly to forgescipt?", "Assistant": "Yes, $newAutomodRule is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $newChannel?", "Assistant": "Retrieves new data from an event whose context was a channel instance\n\nExample usage:\n```js\n$newChannel[id;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $newChannel?", "Assistant": "Use `$newChannel` like this:\n```js\n$newChannel[id;separator_example]\n```\n\nThis function retrieves new data from an event whose context was a channel instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $newChannel in forgescript?", "Assistant": "Yes, You use `$newChannel` like this:\n```js\n$newChannel[id;separator_example]\n```\n\nThis function retrieves new data from an event whose context was a channel instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $newChannel?", "Assistant": "The arguments for `$newChannel` are as follows:\n\n- **property** (Enum): The property to pull (Required)\n- **separator** (String): The separator to use in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $newChannel added?", "Assistant": "$newChannel was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $newChannel nativly to forgescipt?", "Assistant": "Yes, $newChannel is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $newEmoji?", "Assistant": "Retrieves new data from an event whose context was an emoji instance\n\nExample usage:\n```js\n$newEmoji[roles;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $newEmoji?", "Assistant": "Use `$newEmoji` like this:\n```js\n$newEmoji[roles;separator_example]\n```\n\nThis function retrieves new data from an event whose context was an emoji instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $newEmoji in forgescript?", "Assistant": "Yes, You use `$newEmoji` like this:\n```js\n$newEmoji[roles;separator_example]\n```\n\nThis function retrieves new data from an event whose context was an emoji instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $newEmoji?", "Assistant": "The arguments for `$newEmoji` are as follows:\n\n- **property** (Enum): The property to pull (Required)\n- **separator** (String): The separator to use in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $newEmoji added?", "Assistant": "$newEmoji was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $newEmoji nativly to forgescipt?", "Assistant": "Yes, $newEmoji is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $newEntitlement?", "Assistant": "Retrieves new data from an event whose context was an entitlement instance\n\nExample usage:\n```js\n$newEntitlement[endTimestamp;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $newEntitlement?", "Assistant": "Use `$newEntitlement` like this:\n```js\n$newEntitlement[endTimestamp;separator_example]\n```\n\nThis function retrieves new data from an event whose context was an entitlement instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $newEntitlement in forgescript?", "Assistant": "Yes, You use `$newEntitlement` like this:\n```js\n$newEntitlement[endTimestamp;separator_example]\n```\n\nThis function retrieves new data from an event whose context was an entitlement instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $newEntitlement?", "Assistant": "The arguments for `$newEntitlement` are as follows:\n\n- **property** (Enum): The property to pull (Required)\n- **separator** (String): The separator to use in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $newEntitlement added?", "Assistant": "$newEntitlement was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $newEntitlement nativly to forgescipt?", "Assistant": "Yes, $newEntitlement is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $newGuild?", "Assistant": "Retrieves new data from an event whose context was a guild instance\n\nExample usage:\n```js\n$newGuild[boostLevel;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $newGuild?", "Assistant": "Use `$newGuild` like this:\n```js\n$newGuild[boostLevel;separator_example]\n```\n\nThis function retrieves new data from an event whose context was a guild instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $newGuild in forgescript?", "Assistant": "Yes, You use `$newGuild` like this:\n```js\n$newGuild[boostLevel;separator_example]\n```\n\nThis function retrieves new data from an event whose context was a guild instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $newGuild?", "Assistant": "The arguments for `$newGuild` are as follows:\n\n- **property** (Enum): The property to pull (Required)\n- **separator** (String): The separator to use in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $newGuild added?", "Assistant": "$newGuild was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $newGuild nativly to forgescipt?", "Assistant": "Yes, $newGuild is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $newInvite?", "Assistant": "Retrieves new data from an event whose context was an invite instance\n\nExample usage:\n```js\n$newInvite[authorID;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $newInvite?", "Assistant": "Use `$newInvite` like this:\n```js\n$newInvite[authorID;separator_example]\n```\n\nThis function retrieves new data from an event whose context was an invite instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $newInvite in forgescript?", "Assistant": "Yes, You use `$newInvite` like this:\n```js\n$newInvite[authorID;separator_example]\n```\n\nThis function retrieves new data from an event whose context was an invite instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $newInvite?", "Assistant": "The arguments for `$newInvite` are as follows:\n\n- **property** (Enum): The property to pull (Required)\n- **separator** (String): The separator to use in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $newInvite added?", "Assistant": "$newInvite was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $newInvite nativly to forgescipt?", "Assistant": "Yes, $newInvite is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $newMember?", "Assistant": "Retrieves new data from an event whose context was a guild member instance\n\nExample usage:\n```js\n$newMember[displayName;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $newMember?", "Assistant": "Use `$newMember` like this:\n```js\n$newMember[displayName;separator_example]\n```\n\nThis function retrieves new data from an event whose context was a guild member instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $newMember in forgescript?", "Assistant": "Yes, You use `$newMember` like this:\n```js\n$newMember[displayName;separator_example]\n```\n\nThis function retrieves new data from an event whose context was a guild member instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $newMember?", "Assistant": "The arguments for `$newMember` are as follows:\n\n- **property** (Enum): The property to pull (Required)\n- **separator** (String): The separator to use in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $newMember added?", "Assistant": "$newMember was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $newMember nativly to forgescipt?", "Assistant": "Yes, $newMember is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $newMessage?", "Assistant": "Retrieves new data from an event whose context was a message instance\n\nExample usage:\n```js\n$newMessage[id;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $newMessage?", "Assistant": "Use `$newMessage` like this:\n```js\n$newMessage[id;separator_example]\n```\n\nThis function retrieves new data from an event whose context was a message instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $newMessage in forgescript?", "Assistant": "Yes, You use `$newMessage` like this:\n```js\n$newMessage[id;separator_example]\n```\n\nThis function retrieves new data from an event whose context was a message instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $newMessage?", "Assistant": "The arguments for `$newMessage` are as follows:\n\n- **property** (Enum): The property to pull (Required)\n- **separator** (String): The separator to use in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $newMessage added?", "Assistant": "$newMessage was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $newMessage nativly to forgescipt?", "Assistant": "Yes, $newMessage is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $newPresence?", "Assistant": "Retrieves new data from an event whose context was a presence instance\n\nExample usage:\n```js\n$newPresence[guildID;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $newPresence?", "Assistant": "Use `$newPresence` like this:\n```js\n$newPresence[guildID;separator_example]\n```\n\nThis function retrieves new data from an event whose context was a presence instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $newPresence in forgescript?", "Assistant": "Yes, You use `$newPresence` like this:\n```js\n$newPresence[guildID;separator_example]\n```\n\nThis function retrieves new data from an event whose context was a presence instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $newPresence?", "Assistant": "The arguments for `$newPresence` are as follows:\n\n- **property** (Enum): The property to pull (Required)\n- **separator** (String): The separator to use in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $newPresence added?", "Assistant": "$newPresence was added in ForgeScript version 1.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $newPresence nativly to forgescipt?", "Assistant": "Yes, $newPresence is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $newRole?", "Assistant": "Retrieves new data from an event whose context was a role instance\n\nExample usage:\n```js\n$newRole[managed;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $newRole?", "Assistant": "Use `$newRole` like this:\n```js\n$newRole[managed;separator_example]\n```\n\nThis function retrieves new data from an event whose context was a role instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $newRole in forgescript?", "Assistant": "Yes, You use `$newRole` like this:\n```js\n$newRole[managed;separator_example]\n```\n\nThis function retrieves new data from an event whose context was a role instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $newRole?", "Assistant": "The arguments for `$newRole` are as follows:\n\n- **property** (Enum): The property to pull (Required)\n- **separator** (String): The separator to use in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $newRole added?", "Assistant": "$newRole was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $newRole nativly to forgescipt?", "Assistant": "Yes, $newRole is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $newScheduledEvent?", "Assistant": "Retrieves new data from an event whose context was a scheduled event instance\n\nExample usage:\n```js\n$newScheduledEvent[guildID;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $newScheduledEvent?", "Assistant": "Use `$newScheduledEvent` like this:\n```js\n$newScheduledEvent[guildID;separator_example]\n```\n\nThis function retrieves new data from an event whose context was a scheduled event instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $newScheduledEvent in forgescript?", "Assistant": "Yes, You use `$newScheduledEvent` like this:\n```js\n$newScheduledEvent[guildID;separator_example]\n```\n\nThis function retrieves new data from an event whose context was a scheduled event instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $newScheduledEvent?", "Assistant": "The arguments for `$newScheduledEvent` are as follows:\n\n- **property** (Enum): The property to pull (Required)\n- **separator** (String): The separator to use in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $newScheduledEvent added?", "Assistant": "$newScheduledEvent was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $newScheduledEvent nativly to forgescipt?", "Assistant": "Yes, $newScheduledEvent is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $newStage?", "Assistant": "Retrieves new data from an event whose context was a stage instance\n\nExample usage:\n```js\n$newStage[channelID;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $newStage?", "Assistant": "Use `$newStage` like this:\n```js\n$newStage[channelID;separator_example]\n```\n\nThis function retrieves new data from an event whose context was a stage instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $newStage in forgescript?", "Assistant": "Yes, You use `$newStage` like this:\n```js\n$newStage[channelID;separator_example]\n```\n\nThis function retrieves new data from an event whose context was a stage instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $newStage?", "Assistant": "The arguments for `$newStage` are as follows:\n\n- **property** (Enum): The property to pull (Required)\n- **separator** (String): The separator to use in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $newStage added?", "Assistant": "$newStage was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $newStage nativly to forgescipt?", "Assistant": "Yes, $newStage is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $newState?", "Assistant": "Retrieves new data from an event whose context was a voice state instance\n\nExample usage:\n```js\n$newState[selfMuted;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $newState?", "Assistant": "Use `$newState` like this:\n```js\n$newState[selfMuted;separator_example]\n```\n\nThis function retrieves new data from an event whose context was a voice state instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $newState in forgescript?", "Assistant": "Yes, You use `$newState` like this:\n```js\n$newState[selfMuted;separator_example]\n```\n\nThis function retrieves new data from an event whose context was a voice state instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $newState?", "Assistant": "The arguments for `$newState` are as follows:\n\n- **property** (Enum): The property to pull (Required)\n- **separator** (String): The separator to use in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $newState added?", "Assistant": "$newState was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $newState nativly to forgescipt?", "Assistant": "Yes, $newState is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $newSticker?", "Assistant": "Retrieves new data from an event whose context was a sticker instance\n\nExample usage:\n```js\n$newSticker[description;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $newSticker?", "Assistant": "Use `$newSticker` like this:\n```js\n$newSticker[description;separator_example]\n```\n\nThis function retrieves new data from an event whose context was a sticker instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $newSticker in forgescript?", "Assistant": "Yes, You use `$newSticker` like this:\n```js\n$newSticker[description;separator_example]\n```\n\nThis function retrieves new data from an event whose context was a sticker instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $newSticker?", "Assistant": "The arguments for `$newSticker` are as follows:\n\n- **property** (Enum): The property to pull (Required)\n- **separator** (String): The separator to use in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $newSticker added?", "Assistant": "$newSticker was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $newSticker nativly to forgescipt?", "Assistant": "Yes, $newSticker is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $newUser?", "Assistant": "Retrieves new data from an event whose context was a user instance\n\nExample usage:\n```js\n$newUser[timestamp;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $newUser?", "Assistant": "Use `$newUser` like this:\n```js\n$newUser[timestamp;separator_example]\n```\n\nThis function retrieves new data from an event whose context was a user instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $newUser in forgescript?", "Assistant": "Yes, You use `$newUser` like this:\n```js\n$newUser[timestamp;separator_example]\n```\n\nThis function retrieves new data from an event whose context was a user instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $newUser?", "Assistant": "The arguments for `$newUser` are as follows:\n\n- **property** (Enum): The property to pull (Required)\n- **separator** (String): The separator to use in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $newUser added?", "Assistant": "$newUser was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $newUser nativly to forgescipt?", "Assistant": "Yes, $newUser is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $oldAutomodRule?", "Assistant": "Retrieves old data from an event whose context was an automod rule instance\n\nExample usage:\n```js\n$oldAutomodRule[exemptChannels;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $oldAutomodRule?", "Assistant": "Use `$oldAutomodRule` like this:\n```js\n$oldAutomodRule[exemptChannels;separator_example]\n```\n\nThis function retrieves old data from an event whose context was an automod rule instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $oldAutomodRule in forgescript?", "Assistant": "Yes, You use `$oldAutomodRule` like this:\n```js\n$oldAutomodRule[exemptChannels;separator_example]\n```\n\nThis function retrieves old data from an event whose context was an automod rule instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $oldAutomodRule?", "Assistant": "The arguments for `$oldAutomodRule` are as follows:\n\n- **property** (Enum): The property to pull (Required)\n- **separator** (String): The separator to use in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $oldAutomodRule added?", "Assistant": "$oldAutomodRule was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $oldAutomodRule nativly to forgescipt?", "Assistant": "Yes, $oldAutomodRule is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $oldChannel?", "Assistant": "Retrieves old data from an event whose context was a channel instance\n\nExample usage:\n```js\n$oldChannel[id;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $oldChannel?", "Assistant": "Use `$oldChannel` like this:\n```js\n$oldChannel[id;separator_example]\n```\n\nThis function retrieves old data from an event whose context was a channel instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $oldChannel in forgescript?", "Assistant": "Yes, You use `$oldChannel` like this:\n```js\n$oldChannel[id;separator_example]\n```\n\nThis function retrieves old data from an event whose context was a channel instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $oldChannel?", "Assistant": "The arguments for `$oldChannel` are as follows:\n\n- **property** (Enum): The property to pull (Required)\n- **separator** (String): The separator to use in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $oldChannel added?", "Assistant": "$oldChannel was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $oldChannel nativly to forgescipt?", "Assistant": "Yes, $oldChannel is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $oldEmoji?", "Assistant": "Retrieves old data from an event whose context was an emoji instance\n\nExample usage:\n```js\n$oldEmoji[id;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $oldEmoji?", "Assistant": "Use `$oldEmoji` like this:\n```js\n$oldEmoji[id;separator_example]\n```\n\nThis function retrieves old data from an event whose context was an emoji instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $oldEmoji in forgescript?", "Assistant": "Yes, You use `$oldEmoji` like this:\n```js\n$oldEmoji[id;separator_example]\n```\n\nThis function retrieves old data from an event whose context was an emoji instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $oldEmoji?", "Assistant": "The arguments for `$oldEmoji` are as follows:\n\n- **property** (Enum): The property to pull (Required)\n- **separator** (String): The separator to use in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $oldEmoji added?", "Assistant": "$oldEmoji was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $oldEmoji nativly to forgescipt?", "Assistant": "Yes, $oldEmoji is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $oldEntitlement?", "Assistant": "Retrieves old data from an event whose context was an entitlement instance\n\nExample usage:\n```js\n$oldEntitlement[active;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $oldEntitlement?", "Assistant": "Use `$oldEntitlement` like this:\n```js\n$oldEntitlement[active;separator_example]\n```\n\nThis function retrieves old data from an event whose context was an entitlement instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $oldEntitlement in forgescript?", "Assistant": "Yes, You use `$oldEntitlement` like this:\n```js\n$oldEntitlement[active;separator_example]\n```\n\nThis function retrieves old data from an event whose context was an entitlement instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $oldEntitlement?", "Assistant": "The arguments for `$oldEntitlement` are as follows:\n\n- **property** (Enum): The property to pull (Required)\n- **separator** (String): The separator to use in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $oldEntitlement added?", "Assistant": "$oldEntitlement was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $oldEntitlement nativly to forgescipt?", "Assistant": "Yes, $oldEntitlement is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $oldGuild?", "Assistant": "Retrieves old data from an event whose context was a guild instance\n\nExample usage:\n```js\n$oldGuild[memberCount;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $oldGuild?", "Assistant": "Use `$oldGuild` like this:\n```js\n$oldGuild[memberCount;separator_example]\n```\n\nThis function retrieves old data from an event whose context was a guild instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $oldGuild in forgescript?", "Assistant": "Yes, You use `$oldGuild` like this:\n```js\n$oldGuild[memberCount;separator_example]\n```\n\nThis function retrieves old data from an event whose context was a guild instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $oldGuild?", "Assistant": "The arguments for `$oldGuild` are as follows:\n\n- **property** (Enum): The property to pull (Required)\n- **separator** (String): The separator to use in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $oldGuild added?", "Assistant": "$oldGuild was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $oldGuild nativly to forgescipt?", "Assistant": "Yes, $oldGuild is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $oldInvite?", "Assistant": "Retrieves old data from an event whose context was an invite instance\n\nExample usage:\n```js\n$oldInvite[channelID;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $oldInvite?", "Assistant": "Use `$oldInvite` like this:\n```js\n$oldInvite[channelID;separator_example]\n```\n\nThis function retrieves old data from an event whose context was an invite instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $oldInvite in forgescript?", "Assistant": "Yes, You use `$oldInvite` like this:\n```js\n$oldInvite[channelID;separator_example]\n```\n\nThis function retrieves old data from an event whose context was an invite instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $oldInvite?", "Assistant": "The arguments for `$oldInvite` are as follows:\n\n- **property** (Enum): The property to pull (Required)\n- **separator** (String): The separator to use in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $oldInvite added?", "Assistant": "$oldInvite was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $oldInvite nativly to forgescipt?", "Assistant": "Yes, $oldInvite is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $oldMember?", "Assistant": "Retrieves old data from an event whose context was a guild member instance\n\nExample usage:\n```js\n$oldMember[roleCount;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $oldMember?", "Assistant": "Use `$oldMember` like this:\n```js\n$oldMember[roleCount;separator_example]\n```\n\nThis function retrieves old data from an event whose context was a guild member instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $oldMember in forgescript?", "Assistant": "Yes, You use `$oldMember` like this:\n```js\n$oldMember[roleCount;separator_example]\n```\n\nThis function retrieves old data from an event whose context was a guild member instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $oldMember?", "Assistant": "The arguments for `$oldMember` are as follows:\n\n- **property** (Enum): The property to pull (Required)\n- **separator** (String): The separator to use in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $oldMember added?", "Assistant": "$oldMember was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $oldMember nativly to forgescipt?", "Assistant": "Yes, $oldMember is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $oldMessage?", "Assistant": "Retrieves old data from an event whose context was a message instance\n\nExample usage:\n```js\n$oldMessage[content;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $oldMessage?", "Assistant": "Use `$oldMessage` like this:\n```js\n$oldMessage[content;separator_example]\n```\n\nThis function retrieves old data from an event whose context was a message instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $oldMessage in forgescript?", "Assistant": "Yes, You use `$oldMessage` like this:\n```js\n$oldMessage[content;separator_example]\n```\n\nThis function retrieves old data from an event whose context was a message instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $oldMessage?", "Assistant": "The arguments for `$oldMessage` are as follows:\n\n- **property** (Enum): The property to pull (Required)\n- **separator** (String): The separator to use in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $oldMessage added?", "Assistant": "$oldMessage was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $oldMessage nativly to forgescipt?", "Assistant": "Yes, $oldMessage is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $oldPresence?", "Assistant": "Retrieves old data from an event whose context was a presence instance\n\nExample usage:\n```js\n$oldPresence[id;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $oldPresence?", "Assistant": "Use `$oldPresence` like this:\n```js\n$oldPresence[id;separator_example]\n```\n\nThis function retrieves old data from an event whose context was a presence instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $oldPresence in forgescript?", "Assistant": "Yes, You use `$oldPresence` like this:\n```js\n$oldPresence[id;separator_example]\n```\n\nThis function retrieves old data from an event whose context was a presence instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $oldPresence?", "Assistant": "The arguments for `$oldPresence` are as follows:\n\n- **property** (Enum): The property to pull (Required)\n- **separator** (String): The separator to use in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $oldPresence added?", "Assistant": "$oldPresence was added in ForgeScript version 1.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $oldPresence nativly to forgescipt?", "Assistant": "Yes, $oldPresence is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $oldRole?", "Assistant": "Retrieves old data from an event whose context was a role instance\n\nExample usage:\n```js\n$oldRole[tags;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $oldRole?", "Assistant": "Use `$oldRole` like this:\n```js\n$oldRole[tags;separator_example]\n```\n\nThis function retrieves old data from an event whose context was a role instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $oldRole in forgescript?", "Assistant": "Yes, You use `$oldRole` like this:\n```js\n$oldRole[tags;separator_example]\n```\n\nThis function retrieves old data from an event whose context was a role instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $oldRole?", "Assistant": "The arguments for `$oldRole` are as follows:\n\n- **property** (Enum): The property to pull (Required)\n- **separator** (String): The separator to use in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $oldRole added?", "Assistant": "$oldRole was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $oldRole nativly to forgescipt?", "Assistant": "Yes, $oldRole is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $oldScheduledEvent?", "Assistant": "Retrieves old data from an event whose context was a scheduled event instance\n\nExample usage:\n```js\n$oldScheduledEvent[endTimestamp;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $oldScheduledEvent?", "Assistant": "Use `$oldScheduledEvent` like this:\n```js\n$oldScheduledEvent[endTimestamp;separator_example]\n```\n\nThis function retrieves old data from an event whose context was a scheduled event instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $oldScheduledEvent in forgescript?", "Assistant": "Yes, You use `$oldScheduledEvent` like this:\n```js\n$oldScheduledEvent[endTimestamp;separator_example]\n```\n\nThis function retrieves old data from an event whose context was a scheduled event instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $oldScheduledEvent?", "Assistant": "The arguments for `$oldScheduledEvent` are as follows:\n\n- **property** (Enum): The property to pull (Required)\n- **separator** (String): The separator to use in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $oldScheduledEvent added?", "Assistant": "$oldScheduledEvent was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $oldScheduledEvent nativly to forgescipt?", "Assistant": "Yes, $oldScheduledEvent is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $oldStage?", "Assistant": "Retrieves old data from an event whose context was a stage instance\n\nExample usage:\n```js\n$oldStage[eventId;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $oldStage?", "Assistant": "Use `$oldStage` like this:\n```js\n$oldStage[eventId;separator_example]\n```\n\nThis function retrieves old data from an event whose context was a stage instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $oldStage in forgescript?", "Assistant": "Yes, You use `$oldStage` like this:\n```js\n$oldStage[eventId;separator_example]\n```\n\nThis function retrieves old data from an event whose context was a stage instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $oldStage?", "Assistant": "The arguments for `$oldStage` are as follows:\n\n- **property** (Enum): The property to pull (Required)\n- **separator** (String): The separator to use in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $oldStage added?", "Assistant": "$oldStage was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $oldStage nativly to forgescipt?", "Assistant": "Yes, $oldStage is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $oldState?", "Assistant": "Retrieves old data from an event whose context was a voice state instance\n\nExample usage:\n```js\n$oldState[selfVideo;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $oldState?", "Assistant": "Use `$oldState` like this:\n```js\n$oldState[selfVideo;separator_example]\n```\n\nThis function retrieves old data from an event whose context was a voice state instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $oldState in forgescript?", "Assistant": "Yes, You use `$oldState` like this:\n```js\n$oldState[selfVideo;separator_example]\n```\n\nThis function retrieves old data from an event whose context was a voice state instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $oldState?", "Assistant": "The arguments for `$oldState` are as follows:\n\n- **property** (Enum): The property to pull (Required)\n- **separator** (String): The separator to use in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $oldState added?", "Assistant": "$oldState was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $oldState nativly to forgescipt?", "Assistant": "Yes, $oldState is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $oldSticker?", "Assistant": "Retrieves old data from an event whose context was a sticker instance\n\nExample usage:\n```js\n$oldSticker[guildID;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $oldSticker?", "Assistant": "Use `$oldSticker` like this:\n```js\n$oldSticker[guildID;separator_example]\n```\n\nThis function retrieves old data from an event whose context was a sticker instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $oldSticker in forgescript?", "Assistant": "Yes, You use `$oldSticker` like this:\n```js\n$oldSticker[guildID;separator_example]\n```\n\nThis function retrieves old data from an event whose context was a sticker instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $oldSticker?", "Assistant": "The arguments for `$oldSticker` are as follows:\n\n- **property** (Enum): The property to pull (Required)\n- **separator** (String): The separator to use in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $oldSticker added?", "Assistant": "$oldSticker was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $oldSticker nativly to forgescipt?", "Assistant": "Yes, $oldSticker is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $oldUser?", "Assistant": "Retrieves old data from an event whose context was a user instance\n\nExample usage:\n```js\n$oldUser[avatar;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $oldUser?", "Assistant": "Use `$oldUser` like this:\n```js\n$oldUser[avatar;separator_example]\n```\n\nThis function retrieves old data from an event whose context was a user instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $oldUser in forgescript?", "Assistant": "Yes, You use `$oldUser` like this:\n```js\n$oldUser[avatar;separator_example]\n```\n\nThis function retrieves old data from an event whose context was a user instance."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $oldUser?", "Assistant": "The arguments for `$oldUser` are as follows:\n\n- **property** (Enum): The property to pull (Required)\n- **separator** (String): The separator to use in case of array (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $oldUser added?", "Assistant": "$oldUser was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $oldUser nativly to forgescipt?", "Assistant": "Yes, $oldUser is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $async?", "Assistant": "Runs code asynchronously, will not return any value\n\nExample usage:\n```js\n$async[code_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $async?", "Assistant": "Use `$async` like this:\n```js\n$async[code_example]\n```\n\nThis function runs code asynchronously, will not return any value."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $async in forgescript?", "Assistant": "Yes, You use `$async` like this:\n```js\n$async[code_example]\n```\n\nThis function runs code asynchronously, will not return any value."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $async?", "Assistant": "The arguments for `$async` are as follows:\n\n- **code** (String): The code to execute (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $async added?", "Assistant": "$async was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $async nativly to forgescipt?", "Assistant": "Yes, $async is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $break?", "Assistant": "Breaks the loop\n\nExample usage:\n```js\n$break[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $break?", "Assistant": "Use `$break` like this:\n```js\n$break[]\n```\n\nThis function breaks the loop."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $break in forgescript?", "Assistant": "Yes, You use `$break` like this:\n```js\n$break[]\n```\n\nThis function breaks the loop."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $break?", "Assistant": "The arguments for `$break` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $break added?", "Assistant": "$break was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $break nativly to forgescipt?", "Assistant": "Yes, $break is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $case?", "Assistant": "Adds a switch case\n\nExample usage:\n```js\n$case[value_example;code_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $case?", "Assistant": "Use `$case` like this:\n```js\n$case[value_example;code_example]\n```\n\nThis function adds a switch case."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $case in forgescript?", "Assistant": "Yes, You use `$case` like this:\n```js\n$case[value_example;code_example]\n```\n\nThis function adds a switch case."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $case?", "Assistant": "The arguments for `$case` are as follows:\n\n- **value** (String): The match case (Required)\n- **code** (String): Code to execute if it matches this case (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $case added?", "Assistant": "$case was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $case nativly to forgescipt?", "Assistant": "Yes, $case is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $continue?", "Assistant": "Skips executing bottom code of the loop\n\nExample usage:\n```js\n$continue[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $continue?", "Assistant": "Use `$continue` like this:\n```js\n$continue[]\n```\n\nThis function skips executing bottom code of the loop."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $continue in forgescript?", "Assistant": "Yes, You use `$continue` like this:\n```js\n$continue[]\n```\n\nThis function skips executing bottom code of the loop."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $continue?", "Assistant": "The arguments for `$continue` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $continue added?", "Assistant": "$continue was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $continue nativly to forgescipt?", "Assistant": "Yes, $continue is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $default?", "Assistant": "Returns right hand value if the left hand value is falsy\n\nExample usage:\n```js\n$default[left_hand_example;right_hand_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $default?", "Assistant": "Use `$default` like this:\n```js\n$default[left_hand_example;right_hand_example]\n```\n\nThis function returns right hand value if the left hand value is falsy."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $default in forgescript?", "Assistant": "Yes, You use `$default` like this:\n```js\n$default[left_hand_example;right_hand_example]\n```\n\nThis function returns right hand value if the left hand value is falsy."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $default?", "Assistant": "The arguments for `$default` are as follows:\n\n- **left hand** (String): Left hand value (Required)\n- **right hand** (String): Right hand value (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $default added?", "Assistant": "$default was added in ForgeScript version 1.0.6."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $default nativly to forgescipt?", "Assistant": "Yes, $default is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $else?", "Assistant": "Creates an else statement\n\nExample usage:\n```js\n$else[else_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $else?", "Assistant": "Use `$else` like this:\n```js\n$else[else_example]\n```\n\nThis function creates an else statement."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $else in forgescript?", "Assistant": "Yes, You use `$else` like this:\n```js\n$else[else_example]\n```\n\nThis function creates an else statement."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $else?", "Assistant": "The arguments for `$else` are as follows:\n\n- **else** (String): The code to run (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $else added?", "Assistant": "$else was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $else nativly to forgescipt?", "Assistant": "Yes, $else is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $elseIf?", "Assistant": "Creates an else if statement\n\nExample usage:\n```js\n$elseIf[condition_example;if_true_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $elseIf?", "Assistant": "Use `$elseIf` like this:\n```js\n$elseIf[condition_example;if_true_example]\n```\n\nThis function creates an else if statement."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $elseIf in forgescript?", "Assistant": "Yes, You use `$elseIf` like this:\n```js\n$elseIf[condition_example;if_true_example]\n```\n\nThis function creates an else if statement."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $elseIf?", "Assistant": "The arguments for `$elseIf` are as follows:\n\n- **condition** (String): The condition to check against (Optional)\n- **if true** (String): The code to run if true (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $elseIf added?", "Assistant": "$elseIf was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $elseIf nativly to forgescipt?", "Assistant": "Yes, $elseIf is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $if?", "Assistant": "Creates an if statement\n\nExample usage:\n```js\n$if[condition_example;if_true_example;if_false_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $if?", "Assistant": "Use `$if` like this:\n```js\n$if[condition_example;if_true_example;if_false_example]\n```\n\nThis function creates an if statement."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $if in forgescript?", "Assistant": "Yes, You use `$if` like this:\n```js\n$if[condition_example;if_true_example;if_false_example]\n```\n\nThis function creates an if statement."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $if?", "Assistant": "The arguments for `$if` are as follows:\n\n- **condition** (String): The condition to check against (Optional)\n- **if true** (String): The code to run if true (Required)\n- **if false** (String): The code to run if false (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $if added?", "Assistant": "$if was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $if nativly to forgescipt?", "Assistant": "Yes, $if is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $ifx?", "Assistant": "WIP if statements\n\nExample usage:\n```js\n$ifx[block_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $ifx?", "Assistant": "Use `$ifx` like this:\n```js\n$ifx[block_example]\n```\n\nThis function wip if statements."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $ifx in forgescript?", "Assistant": "Yes, You use `$ifx` like this:\n```js\n$ifx[block_example]\n```\n\nThis function wip if statements."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $ifx?", "Assistant": "The arguments for `$ifx` are as follows:\n\n- **block** (String): The if, elseif, else blocks (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $ifx added?", "Assistant": "$ifx was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $ifx nativly to forgescipt?", "Assistant": "Yes, $ifx is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $loop?", "Assistant": "Executes given code for N times\n\nExample usage:\n```js\n$loop[49;code_example;variable_example;asc]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $loop?", "Assistant": "Use `$loop` like this:\n```js\n$loop[49;code_example;variable_example;asc]\n```\n\nThis function executes given code for n times."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $loop in forgescript?", "Assistant": "Yes, You use `$loop` like this:\n```js\n$loop[49;code_example;variable_example;asc]\n```\n\nThis function executes given code for n times."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $loop?", "Assistant": "The arguments for `$loop` are as follows:\n\n- **times** (Number): How many times to run the code (Required)\n- **code** (String): The code to execute (Required)\n- **variable** (String): The variable to load the current iteration count for $env (Optional)\n- **direction** (Enum): The direction of the iteration count to use (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $loop added?", "Assistant": "$loop was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $loop nativly to forgescipt?", "Assistant": "Yes, $loop is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $return?", "Assistant": "Returns a value\n\nExample usage:\n```js\n$return[value_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $return?", "Assistant": "Use `$return` like this:\n```js\n$return[value_example]\n```\n\nThis function returns a value."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $return in forgescript?", "Assistant": "Yes, You use `$return` like this:\n```js\n$return[value_example]\n```\n\nThis function returns a value."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $return?", "Assistant": "The arguments for `$return` are as follows:\n\n- **value** (String): The value to return (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $return added?", "Assistant": "$return was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $return nativly to forgescipt?", "Assistant": "Yes, $return is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $scope?", "Assistant": "Runs functions in a cloned context\n\nExample usage:\n```js\n$scope[code_example;false]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $scope?", "Assistant": "Use `$scope` like this:\n```js\n$scope[code_example;false]\n```\n\nThis function runs functions in a cloned context."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $scope in forgescript?", "Assistant": "Yes, You use `$scope` like this:\n```js\n$scope[code_example;false]\n```\n\nThis function runs functions in a cloned context."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $scope?", "Assistant": "The arguments for `$scope` are as follows:\n\n- **code** (String): The code to execute (Required)\n- **sync vars** (Boolean): Whether to pass vars as reference (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $scope added?", "Assistant": "$scope was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $scope nativly to forgescipt?", "Assistant": "Yes, $scope is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $switch?", "Assistant": "Switch-case statement for javascript\n\nExample usage:\n```js\n$switch[value_example;cases_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $switch?", "Assistant": "Use `$switch` like this:\n```js\n$switch[value_example;cases_example]\n```\n\nThis function switch-case statement for javascript."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $switch in forgescript?", "Assistant": "Yes, You use `$switch` like this:\n```js\n$switch[value_example;cases_example]\n```\n\nThis function switch-case statement for javascript."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $switch?", "Assistant": "The arguments for `$switch` are as follows:\n\n- **value** (String): The value to match with (Required)\n- **cases** (String): The cases to use ($case), use $case[default;...] to add a default case (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $switch added?", "Assistant": "$switch was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $switch nativly to forgescipt?", "Assistant": "Yes, $switch is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $try?", "Assistant": "Handles a possible error from given code\n\nExample usage:\n```js\n$try[code_example;catch_code_example;variable_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $try?", "Assistant": "Use `$try` like this:\n```js\n$try[code_example;catch_code_example;variable_example]\n```\n\nThis function handles a possible error from given code."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $try in forgescript?", "Assistant": "Yes, You use `$try` like this:\n```js\n$try[code_example;catch_code_example;variable_example]\n```\n\nThis function handles a possible error from given code."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $try?", "Assistant": "The arguments for `$try` are as follows:\n\n- **code** (String): The code to safely execute (Required)\n- **catch code** (String): The code to run in case of an error (Optional)\n- **variable** (String): Variable to load the error message to (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $try added?", "Assistant": "$try was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $try nativly to forgescipt?", "Assistant": "Yes, $try is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $while?", "Assistant": "Executes code while a condition is true\n\nExample usage:\n```js\n$while[condition_example;code_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $while?", "Assistant": "Use `$while` like this:\n```js\n$while[condition_example;code_example]\n```\n\nThis function executes code while a condition is true."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $while in forgescript?", "Assistant": "Yes, You use `$while` like this:\n```js\n$while[condition_example;code_example]\n```\n\nThis function executes code while a condition is true."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $while?", "Assistant": "The arguments for `$while` are as follows:\n\n- **condition** (String): The condition to validate (Required)\n- **code** (String): The code to execute (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $while added?", "Assistant": "$while was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $while nativly to forgescipt?", "Assistant": "Yes, $while is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $addSticker?", "Assistant": "Adds a sticker to a guild, returns sticker id\n\nExample usage:\n```js\n$addSticker[data;url_example;name_example;tags_example;description_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $addSticker?", "Assistant": "Use `$addSticker` like this:\n```js\n$addSticker[data;url_example;name_example;tags_example;description_example]\n```\n\nThis function adds a sticker to a guild, returns sticker id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addSticker in forgescript?", "Assistant": "Yes, You use `$addSticker` like this:\n```js\n$addSticker[data;url_example;name_example;tags_example;description_example]\n```\n\nThis function adds a sticker to a guild, returns sticker id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $addSticker?", "Assistant": "The arguments for `$addSticker` are as follows:\n\n- **guild ID** (Guild): The guild to add the sticker to (Required)\n- **url** (String): The url or file path for this sticker (Required)\n- **name** (String): The sticker name (Required)\n- **tags** (String): The tags to use for this sticker (Required)\n- **description** (String): The description for the sticker (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $addSticker added?", "Assistant": "$addSticker was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $addSticker nativly to forgescipt?", "Assistant": "Yes, $addSticker is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $deleteStickers?", "Assistant": "Delete given sticker ids, returns the count of stickers deleted\n\nExample usage:\n```js\n$deleteStickers[data;stickers_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $deleteStickers?", "Assistant": "Use `$deleteStickers` like this:\n```js\n$deleteStickers[data;stickers_example]\n```\n\nThis function delete given sticker ids, returns the count of stickers deleted."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteStickers in forgescript?", "Assistant": "Yes, You use `$deleteStickers` like this:\n```js\n$deleteStickers[data;stickers_example]\n```\n\nThis function delete given sticker ids, returns the count of stickers deleted."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $deleteStickers?", "Assistant": "The arguments for `$deleteStickers` are as follows:\n\n- **guild ID** (Guild): The guild to delete stickers from (Required)\n- **stickers** (String): The stickers to delete (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $deleteStickers added?", "Assistant": "$deleteStickers was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $deleteStickers nativly to forgescipt?", "Assistant": "Yes, $deleteStickers is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $editSticker?", "Assistant": "Edits a sticker's data\n\nExample usage:\n```js\n$editSticker[data;name_example;description_example;tags_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $editSticker?", "Assistant": "Use `$editSticker` like this:\n```js\n$editSticker[data;name_example;description_example;tags_example]\n```\n\nThis function edits a sticker's data."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editSticker in forgescript?", "Assistant": "Yes, You use `$editSticker` like this:\n```js\n$editSticker[data;name_example;description_example;tags_example]\n```\n\nThis function edits a sticker's data."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $editSticker?", "Assistant": "The arguments for `$editSticker` are as follows:\n\n- **sticker ID** (Sticker): The sticker to edit (Required)\n- **name** (String): The new name for the sticker (Optional)\n- **description** (String): The new description for the sticker (Optional)\n- **tags** (String): The new tags for the sticker (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $editSticker added?", "Assistant": "$editSticker was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $editSticker nativly to forgescipt?", "Assistant": "Yes, $editSticker is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setStickerDescription?", "Assistant": "Sets a sticker's description\n\nExample usage:\n```js\n$setStickerDescription[data;description_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setStickerDescription?", "Assistant": "Use `$setStickerDescription` like this:\n```js\n$setStickerDescription[data;description_example]\n```\n\nThis function sets a sticker's description."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setStickerDescription in forgescript?", "Assistant": "Yes, You use `$setStickerDescription` like this:\n```js\n$setStickerDescription[data;description_example]\n```\n\nThis function sets a sticker's description."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setStickerDescription?", "Assistant": "The arguments for `$setStickerDescription` are as follows:\n\n- **sticker ID** (Sticker): The sticker to edit (Required)\n- **description** (String): The new description for the sticker (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setStickerDescription added?", "Assistant": "$setStickerDescription was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setStickerDescription nativly to forgescipt?", "Assistant": "Yes, $setStickerDescription is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setStickerName?", "Assistant": "Sets a sticker's name\n\nExample usage:\n```js\n$setStickerName[data;name_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setStickerName?", "Assistant": "Use `$setStickerName` like this:\n```js\n$setStickerName[data;name_example]\n```\n\nThis function sets a sticker's name."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setStickerName in forgescript?", "Assistant": "Yes, You use `$setStickerName` like this:\n```js\n$setStickerName[data;name_example]\n```\n\nThis function sets a sticker's name."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setStickerName?", "Assistant": "The arguments for `$setStickerName` are as follows:\n\n- **sticker ID** (Sticker): The sticker to edit (Required)\n- **name** (String): The new name for the sticker (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setStickerName added?", "Assistant": "$setStickerName was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setStickerName nativly to forgescipt?", "Assistant": "Yes, $setStickerName is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setStickerTags?", "Assistant": "Sets a sticker's tags\n\nExample usage:\n```js\n$setStickerTags[data;tags_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setStickerTags?", "Assistant": "Use `$setStickerTags` like this:\n```js\n$setStickerTags[data;tags_example]\n```\n\nThis function sets a sticker's tags."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setStickerTags in forgescript?", "Assistant": "Yes, You use `$setStickerTags` like this:\n```js\n$setStickerTags[data;tags_example]\n```\n\nThis function sets a sticker's tags."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setStickerTags?", "Assistant": "The arguments for `$setStickerTags` are as follows:\n\n- **sticker ID** (Sticker): The sticker to edit (Required)\n- **tags** (String): The new tags for the sticker (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setStickerTags added?", "Assistant": "$setStickerTags was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setStickerTags nativly to forgescipt?", "Assistant": "Yes, $setStickerTags is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $stickerAvailable?", "Assistant": "Returns whether a sticker is available\n\nExample usage:\n```js\n$stickerAvailable[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $stickerAvailable?", "Assistant": "Use `$stickerAvailable` like this:\n```js\n$stickerAvailable[data]\n```\n\nThis function returns whether a sticker is available."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $stickerAvailable in forgescript?", "Assistant": "Yes, You use `$stickerAvailable` like this:\n```js\n$stickerAvailable[data]\n```\n\nThis function returns whether a sticker is available."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $stickerAvailable?", "Assistant": "The arguments for `$stickerAvailable` are as follows:\n\n- **sticker ID** (Sticker): The sticker to get availability of (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $stickerAvailable added?", "Assistant": "$stickerAvailable was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $stickerAvailable nativly to forgescipt?", "Assistant": "Yes, $stickerAvailable is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $stickerCreatedAt?", "Assistant": "Returns a sticker's creation timestamp\n\nExample usage:\n```js\n$stickerCreatedAt[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $stickerCreatedAt?", "Assistant": "Use `$stickerCreatedAt` like this:\n```js\n$stickerCreatedAt[data]\n```\n\nThis function returns a sticker's creation timestamp."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $stickerCreatedAt in forgescript?", "Assistant": "Yes, You use `$stickerCreatedAt` like this:\n```js\n$stickerCreatedAt[data]\n```\n\nThis function returns a sticker's creation timestamp."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $stickerCreatedAt?", "Assistant": "The arguments for `$stickerCreatedAt` are as follows:\n\n- **sticker ID** (Sticker): The sticker to pull timestamp of (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $stickerCreatedAt added?", "Assistant": "$stickerCreatedAt was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $stickerCreatedAt nativly to forgescipt?", "Assistant": "Yes, $stickerCreatedAt is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $stickerDescription?", "Assistant": "Returns a sticker's description\n\nExample usage:\n```js\n$stickerDescription[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $stickerDescription?", "Assistant": "Use `$stickerDescription` like this:\n```js\n$stickerDescription[data]\n```\n\nThis function returns a sticker's description."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $stickerDescription in forgescript?", "Assistant": "Yes, You use `$stickerDescription` like this:\n```js\n$stickerDescription[data]\n```\n\nThis function returns a sticker's description."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $stickerDescription?", "Assistant": "The arguments for `$stickerDescription` are as follows:\n\n- **sticker ID** (Sticker): The sticker to pull description of (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $stickerDescription added?", "Assistant": "$stickerDescription was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $stickerDescription nativly to forgescipt?", "Assistant": "Yes, $stickerDescription is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $stickerFormat?", "Assistant": "Returns a sticker's format\n\nExample usage:\n```js\n$stickerFormat[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $stickerFormat?", "Assistant": "Use `$stickerFormat` like this:\n```js\n$stickerFormat[data]\n```\n\nThis function returns a sticker's format."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $stickerFormat in forgescript?", "Assistant": "Yes, You use `$stickerFormat` like this:\n```js\n$stickerFormat[data]\n```\n\nThis function returns a sticker's format."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $stickerFormat?", "Assistant": "The arguments for `$stickerFormat` are as follows:\n\n- **sticker ID** (Sticker): The sticker to get format of (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $stickerFormat added?", "Assistant": "$stickerFormat was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $stickerFormat nativly to forgescipt?", "Assistant": "Yes, $stickerFormat is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $stickerGuildID?", "Assistant": "Returns a sticker's guild id\n\nExample usage:\n```js\n$stickerGuildID[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $stickerGuildID?", "Assistant": "Use `$stickerGuildID` like this:\n```js\n$stickerGuildID[data]\n```\n\nThis function returns a sticker's guild id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $stickerGuildID in forgescript?", "Assistant": "Yes, You use `$stickerGuildID` like this:\n```js\n$stickerGuildID[data]\n```\n\nThis function returns a sticker's guild id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $stickerGuildID?", "Assistant": "The arguments for `$stickerGuildID` are as follows:\n\n- **sticker ID** (Sticker): The sticker to pull guild of (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $stickerGuildID added?", "Assistant": "$stickerGuildID was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $stickerGuildID nativly to forgescipt?", "Assistant": "Yes, $stickerGuildID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $stickerID?", "Assistant": "Returns the sticker id\n\nExample usage:\n```js\n$stickerID[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $stickerID?", "Assistant": "Use `$stickerID` like this:\n```js\n$stickerID[]\n```\n\nThis function returns the sticker id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $stickerID in forgescript?", "Assistant": "Yes, You use `$stickerID` like this:\n```js\n$stickerID[]\n```\n\nThis function returns the sticker id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $stickerID?", "Assistant": "The arguments for `$stickerID` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $stickerID added?", "Assistant": "$stickerID was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $stickerID nativly to forgescipt?", "Assistant": "Yes, $stickerID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $stickerName?", "Assistant": "Returns a sticker name\n\nExample usage:\n```js\n$stickerName[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $stickerName?", "Assistant": "Use `$stickerName` like this:\n```js\n$stickerName[data]\n```\n\nThis function returns a sticker name."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $stickerName in forgescript?", "Assistant": "Yes, You use `$stickerName` like this:\n```js\n$stickerName[data]\n```\n\nThis function returns a sticker name."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $stickerName?", "Assistant": "The arguments for `$stickerName` are as follows:\n\n- **sticker ID** (Sticker): The sticker to pull name of (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $stickerName added?", "Assistant": "$stickerName was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $stickerName nativly to forgescipt?", "Assistant": "Yes, $stickerName is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $stickerOwnerID?", "Assistant": "Returns the user who added the sticker\n\nExample usage:\n```js\n$stickerOwnerID[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $stickerOwnerID?", "Assistant": "Use `$stickerOwnerID` like this:\n```js\n$stickerOwnerID[data]\n```\n\nThis function returns the user who added the sticker."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $stickerOwnerID in forgescript?", "Assistant": "Yes, You use `$stickerOwnerID` like this:\n```js\n$stickerOwnerID[data]\n```\n\nThis function returns the user who added the sticker."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $stickerOwnerID?", "Assistant": "The arguments for `$stickerOwnerID` are as follows:\n\n- **sticker ID** (Sticker): The sticker to pull owner of (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $stickerOwnerID added?", "Assistant": "$stickerOwnerID was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $stickerOwnerID nativly to forgescipt?", "Assistant": "Yes, $stickerOwnerID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $stickerPackID?", "Assistant": "Returns a sticker's pack id\n\nExample usage:\n```js\n$stickerPackID[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $stickerPackID?", "Assistant": "Use `$stickerPackID` like this:\n```js\n$stickerPackID[data]\n```\n\nThis function returns a sticker's pack id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $stickerPackID in forgescript?", "Assistant": "Yes, You use `$stickerPackID` like this:\n```js\n$stickerPackID[data]\n```\n\nThis function returns a sticker's pack id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $stickerPackID?", "Assistant": "The arguments for `$stickerPackID` are as follows:\n\n- **sticker ID** (Sticker): The sticker to pull pack of (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $stickerPackID added?", "Assistant": "$stickerPackID was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $stickerPackID nativly to forgescipt?", "Assistant": "Yes, $stickerPackID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $stickerRawData?", "Assistant": "Returns the raw data of a sticker\n\nExample usage:\n```js\n$stickerRawData[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $stickerRawData?", "Assistant": "Use `$stickerRawData` like this:\n```js\n$stickerRawData[data]\n```\n\nThis function returns the raw data of a sticker."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $stickerRawData in forgescript?", "Assistant": "Yes, You use `$stickerRawData` like this:\n```js\n$stickerRawData[data]\n```\n\nThis function returns the raw data of a sticker."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $stickerRawData?", "Assistant": "The arguments for `$stickerRawData` are as follows:\n\n- **sticker ID** (Sticker): The sticker to get raw data from (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $stickerRawData added?", "Assistant": "$stickerRawData was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $stickerRawData nativly to forgescipt?", "Assistant": "Yes, $stickerRawData is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $stickerSortValue?", "Assistant": "Returns a sticker's sort value\n\nExample usage:\n```js\n$stickerSortValue[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $stickerSortValue?", "Assistant": "Use `$stickerSortValue` like this:\n```js\n$stickerSortValue[data]\n```\n\nThis function returns a sticker's sort value."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $stickerSortValue in forgescript?", "Assistant": "Yes, You use `$stickerSortValue` like this:\n```js\n$stickerSortValue[data]\n```\n\nThis function returns a sticker's sort value."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $stickerSortValue?", "Assistant": "The arguments for `$stickerSortValue` are as follows:\n\n- **sticker ID** (Sticker): The sticker to get sort value of (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $stickerSortValue added?", "Assistant": "$stickerSortValue was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $stickerSortValue nativly to forgescipt?", "Assistant": "Yes, $stickerSortValue is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $stickerTags?", "Assistant": "Returns a sticker's tags\n\nExample usage:\n```js\n$stickerTags[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $stickerTags?", "Assistant": "Use `$stickerTags` like this:\n```js\n$stickerTags[data]\n```\n\nThis function returns a sticker's tags."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $stickerTags in forgescript?", "Assistant": "Yes, You use `$stickerTags` like this:\n```js\n$stickerTags[data]\n```\n\nThis function returns a sticker's tags."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $stickerTags?", "Assistant": "The arguments for `$stickerTags` are as follows:\n\n- **sticker ID** (Sticker): The sticker to pull tags of (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $stickerTags added?", "Assistant": "$stickerTags was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $stickerTags nativly to forgescipt?", "Assistant": "Yes, $stickerTags is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $stickerType?", "Assistant": "Returns the sticker's type\n\nExample usage:\n```js\n$stickerType[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $stickerType?", "Assistant": "Use `$stickerType` like this:\n```js\n$stickerType[data]\n```\n\nThis function returns the sticker's type."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $stickerType in forgescript?", "Assistant": "Yes, You use `$stickerType` like this:\n```js\n$stickerType[data]\n```\n\nThis function returns the sticker's type."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $stickerType?", "Assistant": "The arguments for `$stickerType` are as follows:\n\n- **sticker ID** (Sticker): The sticker to get type of (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $stickerType added?", "Assistant": "$stickerType was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $stickerType nativly to forgescipt?", "Assistant": "Yes, $stickerType is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $advancedReplace?", "Assistant": "Replaces text in a string multiple times\n\nExample usage:\n```js\n$advancedReplace[text_example;match;replacement_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $advancedReplace?", "Assistant": "Use `$advancedReplace` like this:\n```js\n$advancedReplace[text_example;match;replacement_example]\n```\n\nThis function replaces text in a string multiple times."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $advancedReplace in forgescript?", "Assistant": "Yes, You use `$advancedReplace` like this:\n```js\n$advancedReplace[text_example;match;replacement_example]\n```\n\nThis function replaces text in a string multiple times."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $advancedReplace?", "Assistant": "The arguments for `$advancedReplace` are as follows:\n\n- **text** (String): The base text (Required)\n- **match;replacement** (String): The text to match and their replacement (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $advancedReplace added?", "Assistant": "$advancedReplace was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $advancedReplace nativly to forgescipt?", "Assistant": "Yes, $advancedReplace is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $argCount?", "Assistant": "Counts number of args in message\n\nExample usage:\n```js\n$argCount[text_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $argCount?", "Assistant": "Use `$argCount` like this:\n```js\n$argCount[text_example]\n```\n\nThis function counts number of args in message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $argCount in forgescript?", "Assistant": "Yes, You use `$argCount` like this:\n```js\n$argCount[text_example]\n```\n\nThis function counts number of args in message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $argCount?", "Assistant": "The arguments for `$argCount` are as follows:\n\n- **text** (String): Text to count arguments (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $argCount added?", "Assistant": "$argCount was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $argCount nativly to forgescipt?", "Assistant": "Yes, $argCount is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $charCodeAt?", "Assistant": "Returns the char code at given index\n\nExample usage:\n```js\n$charCodeAt[message_example;35]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $charCodeAt?", "Assistant": "Use `$charCodeAt` like this:\n```js\n$charCodeAt[message_example;35]\n```\n\nThis function returns the char code at given index."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $charCodeAt in forgescript?", "Assistant": "Yes, You use `$charCodeAt` like this:\n```js\n$charCodeAt[message_example;35]\n```\n\nThis function returns the char code at given index."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $charCodeAt?", "Assistant": "The arguments for `$charCodeAt` are as follows:\n\n- **message** (String): The string to get char code of (Required)\n- **index** (Number): The index to get its char code (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $charCodeAt added?", "Assistant": "$charCodeAt was added in ForgeScript version 1.0.6."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $charCodeAt nativly to forgescipt?", "Assistant": "Yes, $charCodeAt is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $charCount?", "Assistant": "Gets the char count of a text\n\nExample usage:\n```js\n$charCount[text_example;char_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $charCount?", "Assistant": "Use `$charCount` like this:\n```js\n$charCount[text_example;char_example]\n```\n\nThis function gets the char count of a text."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $charCount in forgescript?", "Assistant": "Yes, You use `$charCount` like this:\n```js\n$charCount[text_example;char_example]\n```\n\nThis function gets the char count of a text."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $charCount?", "Assistant": "The arguments for `$charCount` are as follows:\n\n- **text** (String): The text to get its length (Required)\n- **char** (String): The character to count in the text (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $charCount added?", "Assistant": "$charCount was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $charCount nativly to forgescipt?", "Assistant": "Yes, $charCount is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $checkContains?", "Assistant": "Checks whether a string contains a set of other trings\n\nExample usage:\n```js\n$checkContains[text_example;matches_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $checkContains?", "Assistant": "Use `$checkContains` like this:\n```js\n$checkContains[text_example;matches_example]\n```\n\nThis function checks whether a string contains a set of other trings."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $checkContains in forgescript?", "Assistant": "Yes, You use `$checkContains` like this:\n```js\n$checkContains[text_example;matches_example]\n```\n\nThis function checks whether a string contains a set of other trings."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $checkContains?", "Assistant": "The arguments for `$checkContains` are as follows:\n\n- **text** (String): The text to check on (Required)\n- **matches** (String): The list of strings to try match (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $checkContains added?", "Assistant": "$checkContains was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $checkContains nativly to forgescipt?", "Assistant": "Yes, $checkContains is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $cropArgs?", "Assistant": "Crops given args\n\nExample usage:\n```js\n$cropArgs[args_example;66;43]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $cropArgs?", "Assistant": "Use `$cropArgs` like this:\n```js\n$cropArgs[args_example;66;43]\n```\n\nThis function crops given args."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $cropArgs in forgescript?", "Assistant": "Yes, You use `$cropArgs` like this:\n```js\n$cropArgs[args_example;66;43]\n```\n\nThis function crops given args."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $cropArgs?", "Assistant": "The arguments for `$cropArgs` are as follows:\n\n- **args** (String): The args to crop (Required)\n- **start index** (Number): The start index to start cropping (Required)\n- **end index** (Number): The end index to finish cropping (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $cropArgs added?", "Assistant": "$cropArgs was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $cropArgs nativly to forgescipt?", "Assistant": "Yes, $cropArgs is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $cropText?", "Assistant": "Crops given text\n\nExample usage:\n```js\n$cropText[text_example;6;67;ending_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $cropText?", "Assistant": "Use `$cropText` like this:\n```js\n$cropText[text_example;6;67;ending_example]\n```\n\nThis function crops given text."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $cropText in forgescript?", "Assistant": "Yes, You use `$cropText` like this:\n```js\n$cropText[text_example;6;67;ending_example]\n```\n\nThis function crops given text."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $cropText?", "Assistant": "The arguments for `$cropText` are as follows:\n\n- **text** (String): The text to crop (Required)\n- **start index** (Number): The start index to start cropping (Required)\n- **end index** (Number): The end index to finish cropping (Optional)\n- **ending** (String): Add extra text to the end (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $cropText added?", "Assistant": "$cropText was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $cropText nativly to forgescipt?", "Assistant": "Yes, $cropText is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $endsWith?", "Assistant": "Checks whether given string ends with X string\n\nExample usage:\n```js\n$endsWith[string_example;values_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $endsWith?", "Assistant": "Use `$endsWith` like this:\n```js\n$endsWith[string_example;values_example]\n```\n\nThis function checks whether given string ends with x string."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $endsWith in forgescript?", "Assistant": "Yes, You use `$endsWith` like this:\n```js\n$endsWith[string_example;values_example]\n```\n\nThis function checks whether given string ends with x string."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $endsWith?", "Assistant": "The arguments for `$endsWith` are as follows:\n\n- **string** (String): The string to check against (Required)\n- **values** (String): The values to match at the end (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $endsWith added?", "Assistant": "$endsWith was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $endsWith nativly to forgescipt?", "Assistant": "Yes, $endsWith is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $fromCharCode?", "Assistant": "Returns the characters from given codes\n\nExample usage:\n```js\n$fromCharCode[17]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $fromCharCode?", "Assistant": "Use `$fromCharCode` like this:\n```js\n$fromCharCode[17]\n```\n\nThis function returns the characters from given codes."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $fromCharCode in forgescript?", "Assistant": "Yes, You use `$fromCharCode` like this:\n```js\n$fromCharCode[17]\n```\n\nThis function returns the characters from given codes."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $fromCharCode?", "Assistant": "The arguments for `$fromCharCode` are as follows:\n\n- **codes** (Number): The codes to get its char codes (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $fromCharCode added?", "Assistant": "$fromCharCode was added in ForgeScript version 1.0.6."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $fromCharCode nativly to forgescipt?", "Assistant": "Yes, $fromCharCode is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $padEnd?", "Assistant": "Pads a string at the end\n\nExample usage:\n```js\n$padEnd[message_example;45;filler_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $padEnd?", "Assistant": "Use `$padEnd` like this:\n```js\n$padEnd[message_example;45;filler_example]\n```\n\nThis function pads a string at the end."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $padEnd in forgescript?", "Assistant": "Yes, You use `$padEnd` like this:\n```js\n$padEnd[message_example;45;filler_example]\n```\n\nThis function pads a string at the end."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $padEnd?", "Assistant": "The arguments for `$padEnd` are as follows:\n\n- **message** (String): The string to pad at the end (Required)\n- **max length** (Number): The max length of the string (Required)\n- **filler** (String): The filler to use to pad (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $padEnd added?", "Assistant": "$padEnd was added in ForgeScript version 1.0.6."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $padEnd nativly to forgescipt?", "Assistant": "Yes, $padEnd is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $padStart?", "Assistant": "Pads a string at the start\n\nExample usage:\n```js\n$padStart[message_example;44;filler_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $padStart?", "Assistant": "Use `$padStart` like this:\n```js\n$padStart[message_example;44;filler_example]\n```\n\nThis function pads a string at the start."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $padStart in forgescript?", "Assistant": "Yes, You use `$padStart` like this:\n```js\n$padStart[message_example;44;filler_example]\n```\n\nThis function pads a string at the start."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $padStart?", "Assistant": "The arguments for `$padStart` are as follows:\n\n- **message** (String): The string to pad at the start (Required)\n- **max length** (Number): The max length of the string (Required)\n- **filler** (String): The filler to use to pad (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $padStart added?", "Assistant": "$padStart was added in ForgeScript version 1.0.6."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $padStart nativly to forgescipt?", "Assistant": "Yes, $padStart is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $randomString?", "Assistant": "Creates a random string\n\nExample usage:\n```js\n$randomString[78;characters_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $randomString?", "Assistant": "Use `$randomString` like this:\n```js\n$randomString[78;characters_example]\n```\n\nThis function creates a random string."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $randomString in forgescript?", "Assistant": "Yes, You use `$randomString` like this:\n```js\n$randomString[78;characters_example]\n```\n\nThis function creates a random string."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $randomString?", "Assistant": "The arguments for `$randomString` are as follows:\n\n- **length** (Number): The length of the random string (Required)\n- **characters** (String): The characters to use for this string (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $randomString added?", "Assistant": "$randomString was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $randomString nativly to forgescipt?", "Assistant": "Yes, $randomString is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $randomText?", "Assistant": "Returns a random text (no cache)\n\nExample usage:\n```js\n$randomText[texts_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $randomText?", "Assistant": "Use `$randomText` like this:\n```js\n$randomText[texts_example]\n```\n\nThis function returns a random text (no cache)."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $randomText in forgescript?", "Assistant": "Yes, You use `$randomText` like this:\n```js\n$randomText[texts_example]\n```\n\nThis function returns a random text (no cache)."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $randomText?", "Assistant": "The arguments for `$randomText` are as follows:\n\n- **texts** (String): The texts to use (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $randomText added?", "Assistant": "$randomText was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $randomText nativly to forgescipt?", "Assistant": "Yes, $randomText is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $randomUUID?", "Assistant": "Returns a random uuid\n\nExample usage:\n```js\n$randomUUID[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $randomUUID?", "Assistant": "Use `$randomUUID` like this:\n```js\n$randomUUID[]\n```\n\nThis function returns a random uuid."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $randomUUID in forgescript?", "Assistant": "Yes, You use `$randomUUID` like this:\n```js\n$randomUUID[]\n```\n\nThis function returns a random uuid."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $randomUUID?", "Assistant": "The arguments for `$randomUUID` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $randomUUID added?", "Assistant": "$randomUUID was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $randomUUID nativly to forgescipt?", "Assistant": "Yes, $randomUUID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $repeat?", "Assistant": "Repeats given text for x times\n\nExample usage:\n```js\n$repeat[text_example;43]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $repeat?", "Assistant": "Use `$repeat` like this:\n```js\n$repeat[text_example;43]\n```\n\nThis function repeats given text for x times."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $repeat in forgescript?", "Assistant": "Yes, You use `$repeat` like this:\n```js\n$repeat[text_example;43]\n```\n\nThis function repeats given text for x times."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $repeat?", "Assistant": "The arguments for `$repeat` are as follows:\n\n- **text** (String): The text to repeat (Required)\n- **amount** (Number): How many times to repeat this text (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $repeat added?", "Assistant": "$repeat was added in ForgeScript version 1.1.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $repeat nativly to forgescipt?", "Assistant": "Yes, $repeat is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $replace?", "Assistant": "Replace text in a string\n\nExample usage:\n```js\n$replace[text_example;match_example;new_value_example;86]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $replace?", "Assistant": "Use `$replace` like this:\n```js\n$replace[text_example;match_example;new_value_example;86]\n```\n\nThis function replace text in a string."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $replace in forgescript?", "Assistant": "Yes, You use `$replace` like this:\n```js\n$replace[text_example;match_example;new_value_example;86]\n```\n\nThis function replace text in a string."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $replace?", "Assistant": "The arguments for `$replace` are as follows:\n\n- **text** (String): The base text (Required)\n- **match** (String): Text to match in base (Required)\n- **new value** (String): The text to replace matches with (Required)\n- **amount** (Number): How many times to perform this replacement (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $replace added?", "Assistant": "$replace was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $replace nativly to forgescipt?", "Assistant": "Yes, $replace is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $replaceRegex?", "Assistant": "Replace text in a string using regex\n\nExample usage:\n```js\n$replaceRegex[text_example;match_example;flags_example;new_value_example;6]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $replaceRegex?", "Assistant": "Use `$replaceRegex` like this:\n```js\n$replaceRegex[text_example;match_example;flags_example;new_value_example;6]\n```\n\nThis function replace text in a string using regex."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $replaceRegex in forgescript?", "Assistant": "Yes, You use `$replaceRegex` like this:\n```js\n$replaceRegex[text_example;match_example;flags_example;new_value_example;6]\n```\n\nThis function replace text in a string using regex."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $replaceRegex?", "Assistant": "The arguments for `$replaceRegex` are as follows:\n\n- **text** (String): The base text (Required)\n- **match** (String): Regex to match in base (Required)\n- **flags** (String): The flags to use for the regex (Required)\n- **new value** (String): The text to replace matches with (Required)\n- **amount** (Number): How many times to perform this replacement (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $replaceRegex added?", "Assistant": "$replaceRegex was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $replaceRegex nativly to forgescipt?", "Assistant": "Yes, $replaceRegex is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $reverseText?", "Assistant": "Reverses given text\n\nExample usage:\n```js\n$reverseText[string_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $reverseText?", "Assistant": "Use `$reverseText` like this:\n```js\n$reverseText[string_example]\n```\n\nThis function reverses given text."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $reverseText in forgescript?", "Assistant": "Yes, You use `$reverseText` like this:\n```js\n$reverseText[string_example]\n```\n\nThis function reverses given text."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $reverseText?", "Assistant": "The arguments for `$reverseText` are as follows:\n\n- **string** (String): The string to use (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $reverseText added?", "Assistant": "$reverseText was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $reverseText nativly to forgescipt?", "Assistant": "Yes, $reverseText is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $sliceText?", "Assistant": "Slices given text\n\nExample usage:\n```js\n$sliceText[text_example;90;34]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $sliceText?", "Assistant": "Use `$sliceText` like this:\n```js\n$sliceText[text_example;90;34]\n```\n\nThis function slices given text."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $sliceText in forgescript?", "Assistant": "Yes, You use `$sliceText` like this:\n```js\n$sliceText[text_example;90;34]\n```\n\nThis function slices given text."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $sliceText?", "Assistant": "The arguments for `$sliceText` are as follows:\n\n- **text** (String): The text to slice (Required)\n- **start** (Number): The start index (Optional)\n- **end** (Number): The end index (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $sliceText added?", "Assistant": "$sliceText was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $sliceText nativly to forgescipt?", "Assistant": "Yes, $sliceText is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $snowflake?", "Assistant": "Generates a snowflake, this value will never clash\n\nExample usage:\n```js\n$snowflake[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $snowflake?", "Assistant": "Use `$snowflake` like this:\n```js\n$snowflake[]\n```\n\nThis function generates a snowflake, this value will never clash."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $snowflake in forgescript?", "Assistant": "Yes, You use `$snowflake` like this:\n```js\n$snowflake[]\n```\n\nThis function generates a snowflake, this value will never clash."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $snowflake?", "Assistant": "The arguments for `$snowflake` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $snowflake added?", "Assistant": "$snowflake was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $snowflake nativly to forgescipt?", "Assistant": "Yes, $snowflake is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $startsWith?", "Assistant": "Checks whether given string starts with X string\n\nExample usage:\n```js\n$startsWith[string_example;values_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $startsWith?", "Assistant": "Use `$startsWith` like this:\n```js\n$startsWith[string_example;values_example]\n```\n\nThis function checks whether given string starts with x string."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $startsWith in forgescript?", "Assistant": "Yes, You use `$startsWith` like this:\n```js\n$startsWith[string_example;values_example]\n```\n\nThis function checks whether given string starts with x string."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $startsWith?", "Assistant": "The arguments for `$startsWith` are as follows:\n\n- **string** (String): The string to check against (Required)\n- **values** (String): The values to match at the start (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $startsWith added?", "Assistant": "$startsWith was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $startsWith nativly to forgescipt?", "Assistant": "Yes, $startsWith is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $toCamelCase?", "Assistant": "Converts a string to camel case\n\nExample usage:\n```js\n$toCamelCase[message_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $toCamelCase?", "Assistant": "Use `$toCamelCase` like this:\n```js\n$toCamelCase[message_example]\n```\n\nThis function converts a string to camel case."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $toCamelCase in forgescript?", "Assistant": "Yes, You use `$toCamelCase` like this:\n```js\n$toCamelCase[message_example]\n```\n\nThis function converts a string to camel case."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $toCamelCase?", "Assistant": "The arguments for `$toCamelCase` are as follows:\n\n- **message** (String): The string to turn camel case (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $toCamelCase added?", "Assistant": "$toCamelCase was added in ForgeScript version 1.0.6."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $toCamelCase nativly to forgescipt?", "Assistant": "Yes, $toCamelCase is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $toKebabCase?", "Assistant": "Converts a string to kebab case\n\nExample usage:\n```js\n$toKebabCase[message_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $toKebabCase?", "Assistant": "Use `$toKebabCase` like this:\n```js\n$toKebabCase[message_example]\n```\n\nThis function converts a string to kebab case."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $toKebabCase in forgescript?", "Assistant": "Yes, You use `$toKebabCase` like this:\n```js\n$toKebabCase[message_example]\n```\n\nThis function converts a string to kebab case."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $toKebabCase?", "Assistant": "The arguments for `$toKebabCase` are as follows:\n\n- **message** (String): The string to turn kebab case (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $toKebabCase added?", "Assistant": "$toKebabCase was added in ForgeScript version 1.0.6."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $toKebabCase nativly to forgescipt?", "Assistant": "Yes, $toKebabCase is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $toLowerCase?", "Assistant": "Makes a string lowercase\n\nExample usage:\n```js\n$toLowerCase[string_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $toLowerCase?", "Assistant": "Use `$toLowerCase` like this:\n```js\n$toLowerCase[string_example]\n```\n\nThis function makes a string lowercase."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $toLowerCase in forgescript?", "Assistant": "Yes, You use `$toLowerCase` like this:\n```js\n$toLowerCase[string_example]\n```\n\nThis function makes a string lowercase."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $toLowerCase?", "Assistant": "The arguments for `$toLowerCase` are as follows:\n\n- **string** (String): The string to turn lowercase (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $toLowerCase added?", "Assistant": "$toLowerCase was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $toLowerCase nativly to forgescipt?", "Assistant": "Yes, $toLowerCase is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $toSnakeCase?", "Assistant": "Converts a string to snake case\n\nExample usage:\n```js\n$toSnakeCase[message_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $toSnakeCase?", "Assistant": "Use `$toSnakeCase` like this:\n```js\n$toSnakeCase[message_example]\n```\n\nThis function converts a string to snake case."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $toSnakeCase in forgescript?", "Assistant": "Yes, You use `$toSnakeCase` like this:\n```js\n$toSnakeCase[message_example]\n```\n\nThis function converts a string to snake case."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $toSnakeCase?", "Assistant": "The arguments for `$toSnakeCase` are as follows:\n\n- **message** (String): The string to turn snake case (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $toSnakeCase added?", "Assistant": "$toSnakeCase was added in ForgeScript version 1.0.6."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $toSnakeCase nativly to forgescipt?", "Assistant": "Yes, $toSnakeCase is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $toTitleCase?", "Assistant": "Converts a string to title case\n\nExample usage:\n```js\n$toTitleCase[message_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $toTitleCase?", "Assistant": "Use `$toTitleCase` like this:\n```js\n$toTitleCase[message_example]\n```\n\nThis function converts a string to title case."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $toTitleCase in forgescript?", "Assistant": "Yes, You use `$toTitleCase` like this:\n```js\n$toTitleCase[message_example]\n```\n\nThis function converts a string to title case."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $toTitleCase?", "Assistant": "The arguments for `$toTitleCase` are as follows:\n\n- **message** (String): The string to turn title case (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $toTitleCase added?", "Assistant": "$toTitleCase was added in ForgeScript version 1.0.6."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $toTitleCase nativly to forgescipt?", "Assistant": "Yes, $toTitleCase is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $toUpperCase?", "Assistant": "Makes a string uppercase\n\nExample usage:\n```js\n$toUpperCase[string_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $toUpperCase?", "Assistant": "Use `$toUpperCase` like this:\n```js\n$toUpperCase[string_example]\n```\n\nThis function makes a string uppercase."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $toUpperCase in forgescript?", "Assistant": "Yes, You use `$toUpperCase` like this:\n```js\n$toUpperCase[string_example]\n```\n\nThis function makes a string uppercase."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $toUpperCase?", "Assistant": "The arguments for `$toUpperCase` are as follows:\n\n- **string** (String): The string to turn uppercase (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $toUpperCase added?", "Assistant": "$toUpperCase was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $toUpperCase nativly to forgescipt?", "Assistant": "Yes, $toUpperCase is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $trim?", "Assistant": "Trims a string\n\nExample usage:\n```js\n$trim[text_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $trim?", "Assistant": "Use `$trim` like this:\n```js\n$trim[text_example]\n```\n\nThis function trims a string."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $trim in forgescript?", "Assistant": "Yes, You use `$trim` like this:\n```js\n$trim[text_example]\n```\n\nThis function trims a string."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $trim?", "Assistant": "The arguments for `$trim` are as follows:\n\n- **text** (String): The text to trim (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $trim added?", "Assistant": "$trim was added in ForgeScript version 1.0.6."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $trim nativly to forgescipt?", "Assistant": "Yes, $trim is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $trimEnd?", "Assistant": "Trims at the end of a string\n\nExample usage:\n```js\n$trimEnd[text_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $trimEnd?", "Assistant": "Use `$trimEnd` like this:\n```js\n$trimEnd[text_example]\n```\n\nThis function trims at the end of a string."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $trimEnd in forgescript?", "Assistant": "Yes, You use `$trimEnd` like this:\n```js\n$trimEnd[text_example]\n```\n\nThis function trims at the end of a string."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $trimEnd?", "Assistant": "The arguments for `$trimEnd` are as follows:\n\n- **text** (String): The text to trim at the end (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $trimEnd added?", "Assistant": "$trimEnd was added in ForgeScript version 1.0.6."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $trimEnd nativly to forgescipt?", "Assistant": "Yes, $trimEnd is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $trimLines?", "Assistant": "Trims empty lines from a string\n\nExample usage:\n```js\n$trimLines[text_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $trimLines?", "Assistant": "Use `$trimLines` like this:\n```js\n$trimLines[text_example]\n```\n\nThis function trims empty lines from a string."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $trimLines in forgescript?", "Assistant": "Yes, You use `$trimLines` like this:\n```js\n$trimLines[text_example]\n```\n\nThis function trims empty lines from a string."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $trimLines?", "Assistant": "The arguments for `$trimLines` are as follows:\n\n- **text** (String): The text to trim empty lines (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $trimLines added?", "Assistant": "$trimLines was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $trimLines nativly to forgescipt?", "Assistant": "Yes, $trimLines is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $trimStart?", "Assistant": "Trims at the start of a string\n\nExample usage:\n```js\n$trimStart[text_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $trimStart?", "Assistant": "Use `$trimStart` like this:\n```js\n$trimStart[text_example]\n```\n\nThis function trims at the start of a string."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $trimStart in forgescript?", "Assistant": "Yes, You use `$trimStart` like this:\n```js\n$trimStart[text_example]\n```\n\nThis function trims at the start of a string."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $trimStart?", "Assistant": "The arguments for `$trimStart` are as follows:\n\n- **text** (String): The text to trim at the start (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $trimStart added?", "Assistant": "$trimStart was added in ForgeScript version 1.0.6."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $trimStart nativly to forgescipt?", "Assistant": "Yes, $trimStart is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $cpu?", "Assistant": "Returns the cpu usage of the host (not accurate)\n\nExample usage:\n```js\n$cpu[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $cpu?", "Assistant": "Use `$cpu` like this:\n```js\n$cpu[]\n```\n\nThis function returns the cpu usage of the host (not accurate)."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $cpu in forgescript?", "Assistant": "Yes, You use `$cpu` like this:\n```js\n$cpu[]\n```\n\nThis function returns the cpu usage of the host (not accurate)."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $cpu?", "Assistant": "The arguments for `$cpu` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $cpu added?", "Assistant": "$cpu was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $cpu nativly to forgescipt?", "Assistant": "Yes, $cpu is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $cpuArch?", "Assistant": "Returns the cpu architecture\n\nExample usage:\n```js\n$cpuArch[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $cpuArch?", "Assistant": "Use `$cpuArch` like this:\n```js\n$cpuArch[]\n```\n\nThis function returns the cpu architecture."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $cpuArch in forgescript?", "Assistant": "Yes, You use `$cpuArch` like this:\n```js\n$cpuArch[]\n```\n\nThis function returns the cpu architecture."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $cpuArch?", "Assistant": "The arguments for `$cpuArch` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $cpuArch added?", "Assistant": "$cpuArch was added in ForgeScript version 1.0.7."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $cpuArch nativly to forgescipt?", "Assistant": "Yes, $cpuArch is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $cpuCores?", "Assistant": "Returns the amount of cpu cores\n\nExample usage:\n```js\n$cpuCores[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $cpuCores?", "Assistant": "Use `$cpuCores` like this:\n```js\n$cpuCores[]\n```\n\nThis function returns the amount of cpu cores."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $cpuCores in forgescript?", "Assistant": "Yes, You use `$cpuCores` like this:\n```js\n$cpuCores[]\n```\n\nThis function returns the amount of cpu cores."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $cpuCores?", "Assistant": "The arguments for `$cpuCores` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $cpuCores added?", "Assistant": "$cpuCores was added in ForgeScript version 1.0.7."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $cpuCores nativly to forgescipt?", "Assistant": "Yes, $cpuCores is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $cpuModel?", "Assistant": "Returns the cpu model\n\nExample usage:\n```js\n$cpuModel[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $cpuModel?", "Assistant": "Use `$cpuModel` like this:\n```js\n$cpuModel[]\n```\n\nThis function returns the cpu model."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $cpuModel in forgescript?", "Assistant": "Yes, You use `$cpuModel` like this:\n```js\n$cpuModel[]\n```\n\nThis function returns the cpu model."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $cpuModel?", "Assistant": "The arguments for `$cpuModel` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $cpuModel added?", "Assistant": "$cpuModel was added in ForgeScript version 1.0.7."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $cpuModel nativly to forgescipt?", "Assistant": "Yes, $cpuModel is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $cpuSpeed?", "Assistant": "Returns the cpu speed in MHz\n\nExample usage:\n```js\n$cpuSpeed[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $cpuSpeed?", "Assistant": "Use `$cpuSpeed` like this:\n```js\n$cpuSpeed[]\n```\n\nThis function returns the cpu speed in mhz."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $cpuSpeed in forgescript?", "Assistant": "Yes, You use `$cpuSpeed` like this:\n```js\n$cpuSpeed[]\n```\n\nThis function returns the cpu speed in mhz."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $cpuSpeed?", "Assistant": "The arguments for `$cpuSpeed` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $cpuSpeed added?", "Assistant": "$cpuSpeed was added in ForgeScript version 1.0.7."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $cpuSpeed nativly to forgescipt?", "Assistant": "Yes, $cpuSpeed is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $networkCardIPs?", "Assistant": "Returns your network's card ips\n\nExample usage:\n```js\n$networkCardIPs[separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $networkCardIPs?", "Assistant": "Use `$networkCardIPs` like this:\n```js\n$networkCardIPs[separator_example]\n```\n\nThis function returns your network's card ips."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $networkCardIPs in forgescript?", "Assistant": "Yes, You use `$networkCardIPs` like this:\n```js\n$networkCardIPs[separator_example]\n```\n\nThis function returns your network's card ips."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $networkCardIPs?", "Assistant": "The arguments for `$networkCardIPs` are as follows:\n\n- **separator** (String): The separator to use (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $networkCardIPs added?", "Assistant": "$networkCardIPs was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $networkCardIPs nativly to forgescipt?", "Assistant": "Yes, $networkCardIPs is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $networkCardNames?", "Assistant": "Returns your network's card names\n\nExample usage:\n```js\n$networkCardNames[separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $networkCardNames?", "Assistant": "Use `$networkCardNames` like this:\n```js\n$networkCardNames[separator_example]\n```\n\nThis function returns your network's card names."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $networkCardNames in forgescript?", "Assistant": "Yes, You use `$networkCardNames` like this:\n```js\n$networkCardNames[separator_example]\n```\n\nThis function returns your network's card names."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $networkCardNames?", "Assistant": "The arguments for `$networkCardNames` are as follows:\n\n- **separator** (String): The separator to use (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $networkCardNames added?", "Assistant": "$networkCardNames was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $networkCardNames nativly to forgescipt?", "Assistant": "Yes, $networkCardNames is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $nodeVersion?", "Assistant": "Returns the node version\n\nExample usage:\n```js\n$nodeVersion[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $nodeVersion?", "Assistant": "Use `$nodeVersion` like this:\n```js\n$nodeVersion[]\n```\n\nThis function returns the node version."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $nodeVersion in forgescript?", "Assistant": "Yes, You use `$nodeVersion` like this:\n```js\n$nodeVersion[]\n```\n\nThis function returns the node version."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $nodeVersion?", "Assistant": "The arguments for `$nodeVersion` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $nodeVersion added?", "Assistant": "$nodeVersion was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $nodeVersion nativly to forgescipt?", "Assistant": "Yes, $nodeVersion is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $os?", "Assistant": "Returns the operating system name\n\nExample usage:\n```js\n$os[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $os?", "Assistant": "Use `$os` like this:\n```js\n$os[]\n```\n\nThis function returns the operating system name."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $os in forgescript?", "Assistant": "Yes, You use `$os` like this:\n```js\n$os[]\n```\n\nThis function returns the operating system name."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $os?", "Assistant": "The arguments for `$os` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $os added?", "Assistant": "$os was added in ForgeScript version 1.0.7."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $os nativly to forgescipt?", "Assistant": "Yes, $os is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $osUptime?", "Assistant": "Returns the operating system uptime (seconds)\n\nExample usage:\n```js\n$osUptime[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $osUptime?", "Assistant": "Use `$osUptime` like this:\n```js\n$osUptime[]\n```\n\nThis function returns the operating system uptime (seconds)."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $osUptime in forgescript?", "Assistant": "Yes, You use `$osUptime` like this:\n```js\n$osUptime[]\n```\n\nThis function returns the operating system uptime (seconds)."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $osUptime?", "Assistant": "The arguments for `$osUptime` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $osUptime added?", "Assistant": "$osUptime was added in ForgeScript version 1.0.7."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $osUptime nativly to forgescipt?", "Assistant": "Yes, $osUptime is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $ram?", "Assistant": "Returns the current ram usage in MB\n\nExample usage:\n```js\n$ram[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $ram?", "Assistant": "Use `$ram` like this:\n```js\n$ram[]\n```\n\nThis function returns the current ram usage in mb."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $ram in forgescript?", "Assistant": "Yes, You use `$ram` like this:\n```js\n$ram[]\n```\n\nThis function returns the current ram usage in mb."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $ram?", "Assistant": "The arguments for `$ram` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $ram added?", "Assistant": "$ram was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $ram nativly to forgescipt?", "Assistant": "Yes, $ram is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $calendarDay?", "Assistant": "Returns the calendar day\n\nExample usage:\n```js\n$calendarDay[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $calendarDay?", "Assistant": "Use `$calendarDay` like this:\n```js\n$calendarDay[]\n```\n\nThis function returns the calendar day."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $calendarDay in forgescript?", "Assistant": "Yes, You use `$calendarDay` like this:\n```js\n$calendarDay[]\n```\n\nThis function returns the calendar day."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $calendarDay?", "Assistant": "The arguments for `$calendarDay` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $calendarDay added?", "Assistant": "$calendarDay was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $calendarDay nativly to forgescipt?", "Assistant": "Yes, $calendarDay is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $calendarWeek?", "Assistant": "Returns the calendar week\n\nExample usage:\n```js\n$calendarWeek[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $calendarWeek?", "Assistant": "Use `$calendarWeek` like this:\n```js\n$calendarWeek[]\n```\n\nThis function returns the calendar week."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $calendarWeek in forgescript?", "Assistant": "Yes, You use `$calendarWeek` like this:\n```js\n$calendarWeek[]\n```\n\nThis function returns the calendar week."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $calendarWeek?", "Assistant": "The arguments for `$calendarWeek` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $calendarWeek added?", "Assistant": "$calendarWeek was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $calendarWeek nativly to forgescipt?", "Assistant": "Yes, $calendarWeek is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $day?", "Assistant": "Returns current day\n\nExample usage:\n```js\n$day[Short]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $day?", "Assistant": "Use `$day` like this:\n```js\n$day[Short]\n```\n\nThis function returns current day."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $day in forgescript?", "Assistant": "Yes, You use `$day` like this:\n```js\n$day[Short]\n```\n\nThis function returns current day."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $day?", "Assistant": "The arguments for `$day` are as follows:\n\n- **format** (Enum): The format of the day (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $day added?", "Assistant": "$day was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $day nativly to forgescipt?", "Assistant": "Yes, $day is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $discordTimestamp?", "Assistant": "Creates a discord timestamp\n\nExample usage:\n```js\n$discordTimestamp[data;RelativeTime]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $discordTimestamp?", "Assistant": "Use `$discordTimestamp` like this:\n```js\n$discordTimestamp[data;RelativeTime]\n```\n\nThis function creates a discord timestamp."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $discordTimestamp in forgescript?", "Assistant": "Yes, You use `$discordTimestamp` like this:\n```js\n$discordTimestamp[data;RelativeTime]\n```\n\nThis function creates a discord timestamp."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $discordTimestamp?", "Assistant": "The arguments for `$discordTimestamp` are as follows:\n\n- **time** (Time): The time to turn into timestamp (Required)\n- **style** (Enum): The timestamp style (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $discordTimestamp added?", "Assistant": "$discordTimestamp was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $discordTimestamp nativly to forgescipt?", "Assistant": "Yes, $discordTimestamp is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $executionTime?", "Assistant": "Returns current execution time\n\nExample usage:\n```js\n$executionTime[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $executionTime?", "Assistant": "Use `$executionTime` like this:\n```js\n$executionTime[]\n```\n\nThis function returns current execution time."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $executionTime in forgescript?", "Assistant": "Yes, You use `$executionTime` like this:\n```js\n$executionTime[]\n```\n\nThis function returns current execution time."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $executionTime?", "Assistant": "The arguments for `$executionTime` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $executionTime added?", "Assistant": "$executionTime was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $executionTime nativly to forgescipt?", "Assistant": "Yes, $executionTime is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $getTimestamp?", "Assistant": "Gets the current timestamp\n\nExample usage:\n```js\n$getTimestamp[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $getTimestamp?", "Assistant": "Use `$getTimestamp` like this:\n```js\n$getTimestamp[]\n```\n\nThis function gets the current timestamp."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $getTimestamp in forgescript?", "Assistant": "Yes, You use `$getTimestamp` like this:\n```js\n$getTimestamp[]\n```\n\nThis function gets the current timestamp."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $getTimestamp?", "Assistant": "The arguments for `$getTimestamp` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $getTimestamp added?", "Assistant": "$getTimestamp was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $getTimestamp nativly to forgescipt?", "Assistant": "Yes, $getTimestamp is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $hour?", "Assistant": "Returns current hour\n\nExample usage:\n```js\n$hour[TwoDigit]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $hour?", "Assistant": "Use `$hour` like this:\n```js\n$hour[TwoDigit]\n```\n\nThis function returns current hour."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $hour in forgescript?", "Assistant": "Yes, You use `$hour` like this:\n```js\n$hour[TwoDigit]\n```\n\nThis function returns current hour."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $hour?", "Assistant": "The arguments for `$hour` are as follows:\n\n- **format** (Enum): The format of the hour (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $hour added?", "Assistant": "$hour was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $hour nativly to forgescipt?", "Assistant": "Yes, $hour is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $minute?", "Assistant": "Returns current minute\n\nExample usage:\n```js\n$minute[TwoDigit]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $minute?", "Assistant": "Use `$minute` like this:\n```js\n$minute[TwoDigit]\n```\n\nThis function returns current minute."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $minute in forgescript?", "Assistant": "Yes, You use `$minute` like this:\n```js\n$minute[TwoDigit]\n```\n\nThis function returns current minute."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $minute?", "Assistant": "The arguments for `$minute` are as follows:\n\n- **format** (Enum): The format of the minute (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $minute added?", "Assistant": "$minute was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $minute nativly to forgescipt?", "Assistant": "Yes, $minute is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $month?", "Assistant": "Returns current month\n\nExample usage:\n```js\n$month[TwoDigit]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $month?", "Assistant": "Use `$month` like this:\n```js\n$month[TwoDigit]\n```\n\nThis function returns current month."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $month in forgescript?", "Assistant": "Yes, You use `$month` like this:\n```js\n$month[TwoDigit]\n```\n\nThis function returns current month."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $month?", "Assistant": "The arguments for `$month` are as follows:\n\n- **format** (Enum): The format of the month (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $month added?", "Assistant": "$month was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $month nativly to forgescipt?", "Assistant": "Yes, $month is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $parseDate?", "Assistant": "Parses valid ms to a date\n\nExample usage:\n```js\n$parseDate[97;Locale]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $parseDate?", "Assistant": "Use `$parseDate` like this:\n```js\n$parseDate[97;Locale]\n```\n\nThis function parses valid ms to a date."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $parseDate in forgescript?", "Assistant": "Yes, You use `$parseDate` like this:\n```js\n$parseDate[97;Locale]\n```\n\nThis function parses valid ms to a date."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $parseDate?", "Assistant": "The arguments for `$parseDate` are as follows:\n\n- **ms** (Number): The ms to convert to date (Required)\n- **type** (Enum): The date type (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $parseDate added?", "Assistant": "$parseDate was added in ForgeScript version 1.0.2."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $parseDate nativly to forgescipt?", "Assistant": "Yes, $parseDate is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $parseDigital?", "Assistant": "Parses given ms to digital format\n\nExample usage:\n```js\n$parseDigital[26]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $parseDigital?", "Assistant": "Use `$parseDigital` like this:\n```js\n$parseDigital[26]\n```\n\nThis function parses given ms to digital format."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $parseDigital in forgescript?", "Assistant": "Yes, You use `$parseDigital` like this:\n```js\n$parseDigital[26]\n```\n\nThis function parses given ms to digital format."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $parseDigital?", "Assistant": "The arguments for `$parseDigital` are as follows:\n\n- **ms** (Number): The ms to convert to digital format (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $parseDigital added?", "Assistant": "$parseDigital was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $parseDigital nativly to forgescipt?", "Assistant": "Yes, $parseDigital is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $parseMS?", "Assistant": "Parses valid ms to duration\n\nExample usage:\n```js\n$parseMS[33;30;separator_example;true]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $parseMS?", "Assistant": "Use `$parseMS` like this:\n```js\n$parseMS[33;30;separator_example;true]\n```\n\nThis function parses valid ms to duration."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $parseMS in forgescript?", "Assistant": "Yes, You use `$parseMS` like this:\n```js\n$parseMS[33;30;separator_example;true]\n```\n\nThis function parses valid ms to duration."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $parseMS?", "Assistant": "The arguments for `$parseMS` are as follows:\n\n- **ms** (Number): The ms to convert to string (Required)\n- **limit** (Number): Limit of units to use (Optional)\n- **separator** (String): The separator to use for every unit (Optional)\n- **and** (Boolean): Whether to use and word for last unit (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $parseMS added?", "Assistant": "$parseMS was added in ForgeScript version 1.0.2."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $parseMS nativly to forgescipt?", "Assistant": "Yes, $parseMS is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $parseString?", "Assistant": "Parses valid duration string to ms\n\nExample usage:\n```js\n$parseString[duration_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $parseString?", "Assistant": "Use `$parseString` like this:\n```js\n$parseString[duration_example]\n```\n\nThis function parses valid duration string to ms."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $parseString in forgescript?", "Assistant": "Yes, You use `$parseString` like this:\n```js\n$parseString[duration_example]\n```\n\nThis function parses valid duration string to ms."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $parseString?", "Assistant": "The arguments for `$parseString` are as follows:\n\n- **duration** (String): The valid string to convert to ms (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $parseString added?", "Assistant": "$parseString was added in ForgeScript version 1.0.2."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $parseString nativly to forgescipt?", "Assistant": "Yes, $parseString is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $second?", "Assistant": "Returns current second\n\nExample usage:\n```js\n$second[Numeric]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $second?", "Assistant": "Use `$second` like this:\n```js\n$second[Numeric]\n```\n\nThis function returns current second."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $second in forgescript?", "Assistant": "Yes, You use `$second` like this:\n```js\n$second[Numeric]\n```\n\nThis function returns current second."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $second?", "Assistant": "The arguments for `$second` are as follows:\n\n- **format** (Enum): The format of the second (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $second added?", "Assistant": "$second was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $second nativly to forgescipt?", "Assistant": "Yes, $second is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setCalendar?", "Assistant": "Sets the calendar for time functions\n\nExample usage:\n```js\n$setCalendar[Coptic]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setCalendar?", "Assistant": "Use `$setCalendar` like this:\n```js\n$setCalendar[Coptic]\n```\n\nThis function sets the calendar for time functions."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setCalendar in forgescript?", "Assistant": "Yes, You use `$setCalendar` like this:\n```js\n$setCalendar[Coptic]\n```\n\nThis function sets the calendar for time functions."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setCalendar?", "Assistant": "The arguments for `$setCalendar` are as follows:\n\n- **type** (Enum): The calendar type to use (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setCalendar added?", "Assistant": "$setCalendar was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setCalendar nativly to forgescipt?", "Assistant": "Yes, $setCalendar is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setInterval?", "Assistant": "Executes code after given duration until canceled\n\nExample usage:\n```js\n$setInterval[code_example;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setInterval?", "Assistant": "Use `$setInterval` like this:\n```js\n$setInterval[code_example;data]\n```\n\nThis function executes code after given duration until canceled."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setInterval in forgescript?", "Assistant": "Yes, You use `$setInterval` like this:\n```js\n$setInterval[code_example;data]\n```\n\nThis function executes code after given duration until canceled."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setInterval?", "Assistant": "The arguments for `$setInterval` are as follows:\n\n- **code** (String): The code to execute (Required)\n- **time** (Time): How long to wait for before running this code (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setInterval added?", "Assistant": "$setInterval was added in ForgeScript version 1.0.2."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setInterval nativly to forgescipt?", "Assistant": "Yes, $setInterval is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setTimeout?", "Assistant": "Executes code after given duration\n\nExample usage:\n```js\n$setTimeout[code_example;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setTimeout?", "Assistant": "Use `$setTimeout` like this:\n```js\n$setTimeout[code_example;data]\n```\n\nThis function executes code after given duration."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setTimeout in forgescript?", "Assistant": "Yes, You use `$setTimeout` like this:\n```js\n$setTimeout[code_example;data]\n```\n\nThis function executes code after given duration."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setTimeout?", "Assistant": "The arguments for `$setTimeout` are as follows:\n\n- **code** (String): The code to execute (Required)\n- **time** (Time): How long to wait for before running this code (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setTimeout added?", "Assistant": "$setTimeout was added in ForgeScript version 1.0.2."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setTimeout nativly to forgescipt?", "Assistant": "Yes, $setTimeout is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $setTimezone?", "Assistant": "Sets the timezone for time functions\n\nExample usage:\n```js\n$setTimezone[timezone_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $setTimezone?", "Assistant": "Use `$setTimezone` like this:\n```js\n$setTimezone[timezone_example]\n```\n\nThis function sets the timezone for time functions."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setTimezone in forgescript?", "Assistant": "Yes, You use `$setTimezone` like this:\n```js\n$setTimezone[timezone_example]\n```\n\nThis function sets the timezone for time functions."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $setTimezone?", "Assistant": "The arguments for `$setTimezone` are as follows:\n\n- **timezone** (String): The timezone to set (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $setTimezone added?", "Assistant": "$setTimezone was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $setTimezone nativly to forgescipt?", "Assistant": "Yes, $setTimezone is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $unparseDate?", "Assistant": "Unparses given date to ms\n\nExample usage:\n```js\n$unparseDate[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $unparseDate?", "Assistant": "Use `$unparseDate` like this:\n```js\n$unparseDate[data]\n```\n\nThis function unparses given date to ms."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $unparseDate in forgescript?", "Assistant": "Yes, You use `$unparseDate` like this:\n```js\n$unparseDate[data]\n```\n\nThis function unparses given date to ms."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $unparseDate?", "Assistant": "The arguments for `$unparseDate` are as follows:\n\n- **date** (Date): The date to get its ms (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $unparseDate added?", "Assistant": "$unparseDate was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $unparseDate nativly to forgescipt?", "Assistant": "Yes, $unparseDate is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $unparseDigital?", "Assistant": "Unparses given digital format to ms\n\nExample usage:\n```js\n$unparseDigital[digital_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $unparseDigital?", "Assistant": "Use `$unparseDigital` like this:\n```js\n$unparseDigital[digital_example]\n```\n\nThis function unparses given digital format to ms."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $unparseDigital in forgescript?", "Assistant": "Yes, You use `$unparseDigital` like this:\n```js\n$unparseDigital[digital_example]\n```\n\nThis function unparses given digital format to ms."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $unparseDigital?", "Assistant": "The arguments for `$unparseDigital` are as follows:\n\n- **digital** (String): The digital format to convert to ms (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $unparseDigital added?", "Assistant": "$unparseDigital was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $unparseDigital nativly to forgescipt?", "Assistant": "Yes, $unparseDigital is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $wait?", "Assistant": "Delays the code below for x milliseconds\n\nExample usage:\n```js\n$wait[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $wait?", "Assistant": "Use `$wait` like this:\n```js\n$wait[data]\n```\n\nThis function delays the code below for x milliseconds."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $wait in forgescript?", "Assistant": "Yes, You use `$wait` like this:\n```js\n$wait[data]\n```\n\nThis function delays the code below for x milliseconds."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $wait?", "Assistant": "The arguments for `$wait` are as follows:\n\n- **duration** (Time): The duration to wait for (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $wait added?", "Assistant": "$wait was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $wait nativly to forgescipt?", "Assistant": "Yes, $wait is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $week?", "Assistant": "Returns current week of month\n\nExample usage:\n```js\n$week[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $week?", "Assistant": "Use `$week` like this:\n```js\n$week[]\n```\n\nThis function returns current week of month."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $week in forgescript?", "Assistant": "Yes, You use `$week` like this:\n```js\n$week[]\n```\n\nThis function returns current week of month."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $week?", "Assistant": "The arguments for `$week` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $week added?", "Assistant": "$week was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $week nativly to forgescipt?", "Assistant": "Yes, $week is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $year?", "Assistant": "Returns current year\n\nExample usage:\n```js\n$year[Numeric]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $year?", "Assistant": "Use `$year` like this:\n```js\n$year[Numeric]\n```\n\nThis function returns current year."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $year in forgescript?", "Assistant": "Yes, You use `$year` like this:\n```js\n$year[Numeric]\n```\n\nThis function returns current year."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $year?", "Assistant": "The arguments for `$year` are as follows:\n\n- **format** (Enum): The format of the year (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $year added?", "Assistant": "$year was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $year nativly to forgescipt?", "Assistant": "Yes, $year is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $api?", "Assistant": "Sends a discord api request, using a discord-api-types route\n\nExample usage:\n```js\n$api[route_name_example;route_method_example;route_params;body_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $api?", "Assistant": "Use `$api` like this:\n```js\n$api[route_name_example;route_method_example;route_params;body_example]\n```\n\nThis function sends a discord api request, using a discord-api-types route."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $api in forgescript?", "Assistant": "Yes, You use `$api` like this:\n```js\n$api[route_name_example;route_method_example;route_params;body_example]\n```\n\nThis function sends a discord api request, using a discord-api-types route."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $api?", "Assistant": "The arguments for `$api` are as follows:\n\n- **route name** (String): Route name, like so `channel` (Optional)\n- **route method** (String): Route method, like so `get` (Required)\n- **route params;body** (String): Parameters for this route, body has to be json (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $api added?", "Assistant": "$api was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $api nativly to forgescipt?", "Assistant": "Yes, $api is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $coroutine?", "Assistant": "Runs given code in a separate thread\n\nExample usage:\n```js\n$coroutine[code_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $coroutine?", "Assistant": "Use `$coroutine` like this:\n```js\n$coroutine[code_example]\n```\n\nThis function runs given code in a separate thread."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $coroutine in forgescript?", "Assistant": "Yes, You use `$coroutine` like this:\n```js\n$coroutine[code_example]\n```\n\nThis function runs given code in a separate thread."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $coroutine?", "Assistant": "The arguments for `$coroutine` are as follows:\n\n- **code** (String): The code to run (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $coroutine added?", "Assistant": "$coroutine was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $coroutine nativly to forgescipt?", "Assistant": "Yes, $coroutine is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $djsEval?", "Assistant": "Evaluates JavaScript code\n\nExample usage:\n```js\n$djsEval[code_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $djsEval?", "Assistant": "Use `$djsEval` like this:\n```js\n$djsEval[code_example]\n```\n\nThis function evaluates javascript code."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $djsEval in forgescript?", "Assistant": "Yes, You use `$djsEval` like this:\n```js\n$djsEval[code_example]\n```\n\nThis function evaluates javascript code."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $djsEval?", "Assistant": "The arguments for `$djsEval` are as follows:\n\n- **code** (String): The code to eval (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $djsEval added?", "Assistant": "$djsEval was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $djsEval nativly to forgescipt?", "Assistant": "Yes, $djsEval is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $eval?", "Assistant": "Evaluates given code\n\nExample usage:\n```js\n$eval[code_example;true]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $eval?", "Assistant": "Use `$eval` like this:\n```js\n$eval[code_example;true]\n```\n\nThis function evaluates given code."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $eval in forgescript?", "Assistant": "Yes, You use `$eval` like this:\n```js\n$eval[code_example;true]\n```\n\nThis function evaluates given code."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $eval?", "Assistant": "The arguments for `$eval` are as follows:\n\n- **code** (String): The code to eval (Required)\n- **send** (Boolean): Whether to send as new message (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $eval added?", "Assistant": "$eval was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $eval nativly to forgescipt?", "Assistant": "Yes, $eval is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $exec?", "Assistant": "Runs a command in console\n\nExample usage:\n```js\n$exec[command_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $exec?", "Assistant": "Use `$exec` like this:\n```js\n$exec[command_example]\n```\n\nThis function runs a command in console."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $exec in forgescript?", "Assistant": "Yes, You use `$exec` like this:\n```js\n$exec[command_example]\n```\n\nThis function runs a command in console."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $exec?", "Assistant": "The arguments for `$exec` are as follows:\n\n- **command** (String): The command to execute (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $exec added?", "Assistant": "$exec was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $exec nativly to forgescipt?", "Assistant": "Yes, $exec is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $function?", "Assistant": "Runs a function\n\nExample usage:\n```js\n$function[code_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $function?", "Assistant": "Use `$function` like this:\n```js\n$function[code_example]\n```\n\nThis function runs a function."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $function in forgescript?", "Assistant": "Yes, You use `$function` like this:\n```js\n$function[code_example]\n```\n\nThis function runs a function."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $function?", "Assistant": "The arguments for `$function` are as follows:\n\n- **code** (String): Code to execute (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $function added?", "Assistant": "$function was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $function nativly to forgescipt?", "Assistant": "Yes, $function is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $gc?", "Assistant": "Triggers JavaScript's garbage collector, only available if passed --expose-gc flag to node\n\nExample usage:\n```js\n$gc[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $gc?", "Assistant": "Use `$gc` like this:\n```js\n$gc[]\n```\n\nThis function triggers javascript's garbage collector, only available if passed --expose-gc flag to node."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $gc in forgescript?", "Assistant": "Yes, You use `$gc` like this:\n```js\n$gc[]\n```\n\nThis function triggers javascript's garbage collector, only available if passed --expose-gc flag to node."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $gc?", "Assistant": "The arguments for `$gc` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $gc added?", "Assistant": "$gc was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $gc nativly to forgescipt?", "Assistant": "Yes, $gc is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $instanceName?", "Assistant": "Returns the context's instance name\n\nExample usage:\n```js\n$instanceName[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $instanceName?", "Assistant": "Use `$instanceName` like this:\n```js\n$instanceName[]\n```\n\nThis function returns the context's instance name."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $instanceName in forgescript?", "Assistant": "Yes, You use `$instanceName` like this:\n```js\n$instanceName[]\n```\n\nThis function returns the context's instance name."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $instanceName?", "Assistant": "The arguments for `$instanceName` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $instanceName added?", "Assistant": "$instanceName was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $instanceName nativly to forgescipt?", "Assistant": "Yes, $instanceName is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $loadChannelContext?", "Assistant": "Loads a channel instance to the current context, this is not reversible and is adviced to use with $scope.\n\nExample usage:\n```js\n$loadChannelContext[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $loadChannelContext?", "Assistant": "Use `$loadChannelContext` like this:\n```js\n$loadChannelContext[data]\n```\n\nThis function loads a channel instance to the current context, this is not reversible and is adviced to use with $scope.."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $loadChannelContext in forgescript?", "Assistant": "Yes, You use `$loadChannelContext` like this:\n```js\n$loadChannelContext[data]\n```\n\nThis function loads a channel instance to the current context, this is not reversible and is adviced to use with $scope.."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $loadChannelContext?", "Assistant": "The arguments for `$loadChannelContext` are as follows:\n\n- **channel ID** (Channel): The channel to adapt context with (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $loadChannelContext added?", "Assistant": "$loadChannelContext was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $loadChannelContext nativly to forgescipt?", "Assistant": "Yes, $loadChannelContext is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $loadGuildContext?", "Assistant": "Loads a guild instance to the current context, this is not reversible and is adviced to use with $scope.\n\nExample usage:\n```js\n$loadGuildContext[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $loadGuildContext?", "Assistant": "Use `$loadGuildContext` like this:\n```js\n$loadGuildContext[data]\n```\n\nThis function loads a guild instance to the current context, this is not reversible and is adviced to use with $scope.."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $loadGuildContext in forgescript?", "Assistant": "Yes, You use `$loadGuildContext` like this:\n```js\n$loadGuildContext[data]\n```\n\nThis function loads a guild instance to the current context, this is not reversible and is adviced to use with $scope.."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $loadGuildContext?", "Assistant": "The arguments for `$loadGuildContext` are as follows:\n\n- **guild ID** (Guild): The guild to adapt context with (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $loadGuildContext added?", "Assistant": "$loadGuildContext was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $loadGuildContext nativly to forgescipt?", "Assistant": "Yes, $loadGuildContext is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $loadMemberContext?", "Assistant": "Loads a member instance to the current context, this is not reversible and is adviced to use with $scope.\n\nExample usage:\n```js\n$loadMemberContext[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $loadMemberContext?", "Assistant": "Use `$loadMemberContext` like this:\n```js\n$loadMemberContext[data;data]\n```\n\nThis function loads a member instance to the current context, this is not reversible and is adviced to use with $scope.."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $loadMemberContext in forgescript?", "Assistant": "Yes, You use `$loadMemberContext` like this:\n```js\n$loadMemberContext[data;data]\n```\n\nThis function loads a member instance to the current context, this is not reversible and is adviced to use with $scope.."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $loadMemberContext?", "Assistant": "The arguments for `$loadMemberContext` are as follows:\n\n- **guild ID** (Guild): The guild to pull member from (Required)\n- **member ID** (Member): The member to adapt context with (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $loadMemberContext added?", "Assistant": "$loadMemberContext was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $loadMemberContext nativly to forgescipt?", "Assistant": "Yes, $loadMemberContext is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $loadMessageContext?", "Assistant": "Loads a message instance to the current context, this is not reversible and is adviced to use with $scope.\n\nExample usage:\n```js\n$loadMessageContext[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $loadMessageContext?", "Assistant": "Use `$loadMessageContext` like this:\n```js\n$loadMessageContext[data;data]\n```\n\nThis function loads a message instance to the current context, this is not reversible and is adviced to use with $scope.."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $loadMessageContext in forgescript?", "Assistant": "Yes, You use `$loadMessageContext` like this:\n```js\n$loadMessageContext[data;data]\n```\n\nThis function loads a message instance to the current context, this is not reversible and is adviced to use with $scope.."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $loadMessageContext?", "Assistant": "The arguments for `$loadMessageContext` are as follows:\n\n- **channel ID** (TextChannel): The channel to pull message from (Required)\n- **message ID** (Message): The message to adapt context with (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $loadMessageContext added?", "Assistant": "$loadMessageContext was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $loadMessageContext nativly to forgescipt?", "Assistant": "Yes, $loadMessageContext is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $loadRoleContext?", "Assistant": "Loads a role instance to the current context, this is not reversible and is adviced to use with $scope.\n\nExample usage:\n```js\n$loadRoleContext[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $loadRoleContext?", "Assistant": "Use `$loadRoleContext` like this:\n```js\n$loadRoleContext[data;data]\n```\n\nThis function loads a role instance to the current context, this is not reversible and is adviced to use with $scope.."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $loadRoleContext in forgescript?", "Assistant": "Yes, You use `$loadRoleContext` like this:\n```js\n$loadRoleContext[data;data]\n```\n\nThis function loads a role instance to the current context, this is not reversible and is adviced to use with $scope.."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $loadRoleContext?", "Assistant": "The arguments for `$loadRoleContext` are as follows:\n\n- **guild ID** (Guild): The guild to pull role from (Required)\n- **role ID** (Role): The role to adapt context with (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $loadRoleContext added?", "Assistant": "$loadRoleContext was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $loadRoleContext nativly to forgescipt?", "Assistant": "Yes, $loadRoleContext is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $loadStickerContext?", "Assistant": "Loads a sticker instance to the current context, this is not reversible and is adviced to use with $scope.\n\nExample usage:\n```js\n$loadStickerContext[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $loadStickerContext?", "Assistant": "Use `$loadStickerContext` like this:\n```js\n$loadStickerContext[data]\n```\n\nThis function loads a sticker instance to the current context, this is not reversible and is adviced to use with $scope.."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $loadStickerContext in forgescript?", "Assistant": "Yes, You use `$loadStickerContext` like this:\n```js\n$loadStickerContext[data]\n```\n\nThis function loads a sticker instance to the current context, this is not reversible and is adviced to use with $scope.."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $loadStickerContext?", "Assistant": "The arguments for `$loadStickerContext` are as follows:\n\n- **sticker ID** (Sticker): The sticker to adapt context with (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $loadStickerContext added?", "Assistant": "$loadStickerContext was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $loadStickerContext nativly to forgescipt?", "Assistant": "Yes, $loadStickerContext is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $loadUserContext?", "Assistant": "Loads a user instance to the current context, this is not reversible and is adviced to use with $scope.\n\nExample usage:\n```js\n$loadUserContext[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $loadUserContext?", "Assistant": "Use `$loadUserContext` like this:\n```js\n$loadUserContext[data]\n```\n\nThis function loads a user instance to the current context, this is not reversible and is adviced to use with $scope.."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $loadUserContext in forgescript?", "Assistant": "Yes, You use `$loadUserContext` like this:\n```js\n$loadUserContext[data]\n```\n\nThis function loads a user instance to the current context, this is not reversible and is adviced to use with $scope.."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $loadUserContext?", "Assistant": "The arguments for `$loadUserContext` are as follows:\n\n- **user ID** (User): The user to adapt context with (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $loadUserContext added?", "Assistant": "$loadUserContext was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $loadUserContext nativly to forgescipt?", "Assistant": "Yes, $loadUserContext is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $test?", "Assistant": "This is just a test function\n\nExample usage:\n```js\n$test[test_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $test?", "Assistant": "Use `$test` like this:\n```js\n$test[test_example]\n```\n\nThis function this is just a test function."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $test in forgescript?", "Assistant": "Yes, You use `$test` like this:\n```js\n$test[test_example]\n```\n\nThis function this is just a test function."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $test?", "Assistant": "The arguments for `$test` are as follows:\n\n- **test** (String): The string to use (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $test added?", "Assistant": "$test was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $test nativly to forgescipt?", "Assistant": "Yes, $test is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $authorID?", "Assistant": "Retrieves a user's id\n\nExample usage:\n```js\n$authorID[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $authorID?", "Assistant": "Use `$authorID` like this:\n```js\n$authorID[]\n```\n\nThis function retrieves a user's id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $authorID in forgescript?", "Assistant": "Yes, You use `$authorID` like this:\n```js\n$authorID[]\n```\n\nThis function retrieves a user's id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $authorID?", "Assistant": "The arguments for `$authorID` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $authorID added?", "Assistant": "$authorID was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $authorID nativly to forgescipt?", "Assistant": "Yes, $authorID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $discriminator?", "Assistant": "Returns the user discriminator\n\nExample usage:\n```js\n$discriminator[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $discriminator?", "Assistant": "Use `$discriminator` like this:\n```js\n$discriminator[data]\n```\n\nThis function returns the user discriminator."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $discriminator in forgescript?", "Assistant": "Yes, You use `$discriminator` like this:\n```js\n$discriminator[data]\n```\n\nThis function returns the user discriminator."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $discriminator?", "Assistant": "The arguments for `$discriminator` are as follows:\n\n- **user ID** (User): The user to get its discriminator (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $discriminator added?", "Assistant": "$discriminator was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $discriminator nativly to forgescipt?", "Assistant": "Yes, $discriminator is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isBot?", "Assistant": "Whether the user is a bot\n\nExample usage:\n```js\n$isBot[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isBot?", "Assistant": "Use `$isBot` like this:\n```js\n$isBot[data]\n```\n\nThis function whether the user is a bot."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isBot in forgescript?", "Assistant": "Yes, You use `$isBot` like this:\n```js\n$isBot[data]\n```\n\nThis function whether the user is a bot."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isBot?", "Assistant": "The arguments for `$isBot` are as follows:\n\n- **user ID** (User): The user to check whether its a bot (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isBot added?", "Assistant": "$isBot was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isBot nativly to forgescipt?", "Assistant": "Yes, $isBot is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isBotVerified?", "Assistant": "Whether the bot is verified\n\nExample usage:\n```js\n$isBotVerified[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isBotVerified?", "Assistant": "Use `$isBotVerified` like this:\n```js\n$isBotVerified[data]\n```\n\nThis function whether the bot is verified."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isBotVerified in forgescript?", "Assistant": "Yes, You use `$isBotVerified` like this:\n```js\n$isBotVerified[data]\n```\n\nThis function whether the bot is verified."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isBotVerified?", "Assistant": "The arguments for `$isBotVerified` are as follows:\n\n- **user ID** (User): The bot to check whether its verified (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isBotVerified added?", "Assistant": "$isBotVerified was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isBotVerified nativly to forgescipt?", "Assistant": "Yes, $isBotVerified is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $isUserDMEnabled?", "Assistant": "Checks whether given user can be DMed\n\nExample usage:\n```js\n$isUserDMEnabled[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $isUserDMEnabled?", "Assistant": "Use `$isUserDMEnabled` like this:\n```js\n$isUserDMEnabled[data]\n```\n\nThis function checks whether given user can be dmed."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isUserDMEnabled in forgescript?", "Assistant": "Yes, You use `$isUserDMEnabled` like this:\n```js\n$isUserDMEnabled[data]\n```\n\nThis function checks whether given user can be dmed."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $isUserDMEnabled?", "Assistant": "The arguments for `$isUserDMEnabled` are as follows:\n\n- **user** (User): The user to test dms (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $isUserDMEnabled added?", "Assistant": "$isUserDMEnabled was added in ForgeScript version 1.2.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $isUserDMEnabled nativly to forgescipt?", "Assistant": "Yes, $isUserDMEnabled is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $randomUserID?", "Assistant": "Returns a random user ID\n\nExample usage:\n```js\n$randomUserID[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $randomUserID?", "Assistant": "Use `$randomUserID` like this:\n```js\n$randomUserID[]\n```\n\nThis function returns a random user id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $randomUserID in forgescript?", "Assistant": "Yes, You use `$randomUserID` like this:\n```js\n$randomUserID[]\n```\n\nThis function returns a random user id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $randomUserID?", "Assistant": "The arguments for `$randomUserID` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $randomUserID added?", "Assistant": "$randomUserID was added in ForgeScript version 1.0.3."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $randomUserID nativly to forgescipt?", "Assistant": "Yes, $randomUserID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $sendDM?", "Assistant": "Sends a dm to the user\n\nExample usage:\n```js\n$sendDM[data;content_example;false]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $sendDM?", "Assistant": "Use `$sendDM` like this:\n```js\n$sendDM[data;content_example;false]\n```\n\nThis function sends a dm to the user."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $sendDM in forgescript?", "Assistant": "Yes, You use `$sendDM` like this:\n```js\n$sendDM[data;content_example;false]\n```\n\nThis function sends a dm to the user."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $sendDM?", "Assistant": "The arguments for `$sendDM` are as follows:\n\n- **user ID** (User): The user to dm (Required)\n- **content** (String): The content to send (Optional)\n- **return message ID** (Boolean): Returns the message id of the newly created message (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $sendDM added?", "Assistant": "$sendDM was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $sendDM nativly to forgescipt?", "Assistant": "Yes, $sendDM is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $userAccentColor?", "Assistant": "Returns the user accent color\n\nExample usage:\n```js\n$userAccentColor[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $userAccentColor?", "Assistant": "Use `$userAccentColor` like this:\n```js\n$userAccentColor[data]\n```\n\nThis function returns the user accent color."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $userAccentColor in forgescript?", "Assistant": "Yes, You use `$userAccentColor` like this:\n```js\n$userAccentColor[data]\n```\n\nThis function returns the user accent color."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $userAccentColor?", "Assistant": "The arguments for `$userAccentColor` are as follows:\n\n- **user ID** (User): The user to retrieve the accent color (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $userAccentColor added?", "Assistant": "$userAccentColor was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $userAccentColor nativly to forgescipt?", "Assistant": "Yes, $userAccentColor is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $userAvatar?", "Assistant": "Returns the user avatar\n\nExample usage:\n```js\n$userAvatar[data;48;extension_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $userAvatar?", "Assistant": "Use `$userAvatar` like this:\n```js\n$userAvatar[data;48;extension_example]\n```\n\nThis function returns the user avatar."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $userAvatar in forgescript?", "Assistant": "Yes, You use `$userAvatar` like this:\n```js\n$userAvatar[data;48;extension_example]\n```\n\nThis function returns the user avatar."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $userAvatar?", "Assistant": "The arguments for `$userAvatar` are as follows:\n\n- **user ID** (User): The user to retrieve the avatar (Required)\n- **size** (Number): The size to use for the image (Optional)\n- **extension** (String): The extension to use for the image (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $userAvatar added?", "Assistant": "$userAvatar was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $userAvatar nativly to forgescipt?", "Assistant": "Yes, $userAvatar is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $userAvatarDecoration?", "Assistant": "Returns the user decoration\n\nExample usage:\n```js\n$userAvatarDecoration[data;86;extension_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $userAvatarDecoration?", "Assistant": "Use `$userAvatarDecoration` like this:\n```js\n$userAvatarDecoration[data;86;extension_example]\n```\n\nThis function returns the user decoration."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $userAvatarDecoration in forgescript?", "Assistant": "Yes, You use `$userAvatarDecoration` like this:\n```js\n$userAvatarDecoration[data;86;extension_example]\n```\n\nThis function returns the user decoration."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $userAvatarDecoration?", "Assistant": "The arguments for `$userAvatarDecoration` are as follows:\n\n- **user ID** (User): The user to retrieve the decoration (Required)\n- **size** (Number): The size to use for the image (Optional)\n- **extension** (String): The extension to use for the image (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $userAvatarDecoration added?", "Assistant": "$userAvatarDecoration was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $userAvatarDecoration nativly to forgescipt?", "Assistant": "Yes, $userAvatarDecoration is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $userBadges?", "Assistant": "Returns the public badges of a user\n\nExample usage:\n```js\n$userBadges[data;separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $userBadges?", "Assistant": "Use `$userBadges` like this:\n```js\n$userBadges[data;separator_example]\n```\n\nThis function returns the public badges of a user."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $userBadges in forgescript?", "Assistant": "Yes, You use `$userBadges` like this:\n```js\n$userBadges[data;separator_example]\n```\n\nThis function returns the public badges of a user."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $userBadges?", "Assistant": "The arguments for `$userBadges` are as follows:\n\n- **user ID** (User): The user to return its badges (Required)\n- **separator** (String): The separator to use for every badge (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $userBadges added?", "Assistant": "$userBadges was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $userBadges nativly to forgescipt?", "Assistant": "Yes, $userBadges is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $userBanner?", "Assistant": "Returns the user banner\n\nExample usage:\n```js\n$userBanner[data;94;extension_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $userBanner?", "Assistant": "Use `$userBanner` like this:\n```js\n$userBanner[data;94;extension_example]\n```\n\nThis function returns the user banner."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $userBanner in forgescript?", "Assistant": "Yes, You use `$userBanner` like this:\n```js\n$userBanner[data;94;extension_example]\n```\n\nThis function returns the user banner."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $userBanner?", "Assistant": "The arguments for `$userBanner` are as follows:\n\n- **user ID** (User): The user to retrieve the banner (Required)\n- **size** (Number): The size to use for the image (Optional)\n- **extension** (String): The extension to use for the image (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $userBanner added?", "Assistant": "$userBanner was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $userBanner nativly to forgescipt?", "Assistant": "Yes, $userBanner is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $userCount?", "Assistant": "Returns the user count of the bot\n\nExample usage:\n```js\n$userCount[]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $userCount?", "Assistant": "Use `$userCount` like this:\n```js\n$userCount[]\n```\n\nThis function returns the user count of the bot."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $userCount in forgescript?", "Assistant": "Yes, You use `$userCount` like this:\n```js\n$userCount[]\n```\n\nThis function returns the user count of the bot."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $userCount?", "Assistant": "The arguments for `$userCount` are as follows:\n\nNo arguments.\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $userCount added?", "Assistant": "$userCount was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $userCount nativly to forgescipt?", "Assistant": "Yes, $userCount is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $userCreatedAt?", "Assistant": "Returns the timestamp this user created their account\n\nExample usage:\n```js\n$userCreatedAt[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $userCreatedAt?", "Assistant": "Use `$userCreatedAt` like this:\n```js\n$userCreatedAt[data]\n```\n\nThis function returns the timestamp this user created their account."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $userCreatedAt in forgescript?", "Assistant": "Yes, You use `$userCreatedAt` like this:\n```js\n$userCreatedAt[data]\n```\n\nThis function returns the timestamp this user created their account."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $userCreatedAt?", "Assistant": "The arguments for `$userCreatedAt` are as follows:\n\n- **user ID** (User): The user to return its creation date (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $userCreatedAt added?", "Assistant": "$userCreatedAt was added in ForgeScript version 1.0.2."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $userCreatedAt nativly to forgescipt?", "Assistant": "Yes, $userCreatedAt is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $userDefaultAvatar?", "Assistant": "Returns the default user avatar\n\nExample usage:\n```js\n$userDefaultAvatar[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $userDefaultAvatar?", "Assistant": "Use `$userDefaultAvatar` like this:\n```js\n$userDefaultAvatar[data]\n```\n\nThis function returns the default user avatar."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $userDefaultAvatar in forgescript?", "Assistant": "Yes, You use `$userDefaultAvatar` like this:\n```js\n$userDefaultAvatar[data]\n```\n\nThis function returns the default user avatar."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $userDefaultAvatar?", "Assistant": "The arguments for `$userDefaultAvatar` are as follows:\n\n- **user ID** (User): The user to retrieve the default avatar (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $userDefaultAvatar added?", "Assistant": "$userDefaultAvatar was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $userDefaultAvatar nativly to forgescipt?", "Assistant": "Yes, $userDefaultAvatar is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $userDisplayName?", "Assistant": "Returns the display name of a user\n\nExample usage:\n```js\n$userDisplayName[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $userDisplayName?", "Assistant": "Use `$userDisplayName` like this:\n```js\n$userDisplayName[data]\n```\n\nThis function returns the display name of a user."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $userDisplayName in forgescript?", "Assistant": "Yes, You use `$userDisplayName` like this:\n```js\n$userDisplayName[data]\n```\n\nThis function returns the display name of a user."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $userDisplayName?", "Assistant": "The arguments for `$userDisplayName` are as follows:\n\n- **user ID** (User): The user to return its display name (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $userDisplayName added?", "Assistant": "$userDisplayName was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $userDisplayName nativly to forgescipt?", "Assistant": "Yes, $userDisplayName is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $userExists?", "Assistant": "Returns whether a user id exists\n\nExample usage:\n```js\n$userExists[user_ID_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $userExists?", "Assistant": "Use `$userExists` like this:\n```js\n$userExists[user_ID_example]\n```\n\nThis function returns whether a user id exists."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $userExists in forgescript?", "Assistant": "Yes, You use `$userExists` like this:\n```js\n$userExists[user_ID_example]\n```\n\nThis function returns whether a user id exists."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $userExists?", "Assistant": "The arguments for `$userExists` are as follows:\n\n- **user ID** (String): The user to check (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $userExists added?", "Assistant": "$userExists was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $userExists nativly to forgescipt?", "Assistant": "Yes, $userExists is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $userGlobalName?", "Assistant": "Returns the global name of a user\n\nExample usage:\n```js\n$userGlobalName[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $userGlobalName?", "Assistant": "Use `$userGlobalName` like this:\n```js\n$userGlobalName[data]\n```\n\nThis function returns the global name of a user."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $userGlobalName in forgescript?", "Assistant": "Yes, You use `$userGlobalName` like this:\n```js\n$userGlobalName[data]\n```\n\nThis function returns the global name of a user."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $userGlobalName?", "Assistant": "The arguments for `$userGlobalName` are as follows:\n\n- **user ID** (User): The user to return its global name (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $userGlobalName added?", "Assistant": "$userGlobalName was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $userGlobalName nativly to forgescipt?", "Assistant": "Yes, $userGlobalName is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $userIDs?", "Assistant": "Returns all the users that are currently cached\n\nExample usage:\n```js\n$userIDs[separator_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $userIDs?", "Assistant": "Use `$userIDs` like this:\n```js\n$userIDs[separator_example]\n```\n\nThis function returns all the users that are currently cached."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $userIDs in forgescript?", "Assistant": "Yes, You use `$userIDs` like this:\n```js\n$userIDs[separator_example]\n```\n\nThis function returns all the users that are currently cached."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $userIDs?", "Assistant": "The arguments for `$userIDs` are as follows:\n\n- **separator** (String): The separator to use for every id (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $userIDs added?", "Assistant": "$userIDs was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $userIDs nativly to forgescipt?", "Assistant": "Yes, $userIDs is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $username?", "Assistant": "Retrieves a user's username\n\nExample usage:\n```js\n$username[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $username?", "Assistant": "Use `$username` like this:\n```js\n$username[data]\n```\n\nThis function retrieves a user's username."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $username in forgescript?", "Assistant": "Yes, You use `$username` like this:\n```js\n$username[data]\n```\n\nThis function retrieves a user's username."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $username?", "Assistant": "The arguments for `$username` are as follows:\n\n- **id** (User): The user id to get the username of (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $username added?", "Assistant": "$username was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $username nativly to forgescipt?", "Assistant": "Yes, $username is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $userRawData?", "Assistant": "Returns the raw data of a user\n\nExample usage:\n```js\n$userRawData[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $userRawData?", "Assistant": "Use `$userRawData` like this:\n```js\n$userRawData[data]\n```\n\nThis function returns the raw data of a user."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $userRawData in forgescript?", "Assistant": "Yes, You use `$userRawData` like this:\n```js\n$userRawData[data]\n```\n\nThis function returns the raw data of a user."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $userRawData?", "Assistant": "The arguments for `$userRawData` are as follows:\n\n- **user ID** (User): The user to get raw data from (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $userRawData added?", "Assistant": "$userRawData was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $userRawData nativly to forgescipt?", "Assistant": "Yes, $userRawData is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $userReferenceID?", "Assistant": "Returns the id of the user this message replies to\n\nExample usage:\n```js\n$userReferenceID[data;data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $userReferenceID?", "Assistant": "Use `$userReferenceID` like this:\n```js\n$userReferenceID[data;data]\n```\n\nThis function returns the id of the user this message replies to."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $userReferenceID in forgescript?", "Assistant": "Yes, You use `$userReferenceID` like this:\n```js\n$userReferenceID[data;data]\n```\n\nThis function returns the id of the user this message replies to."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $userReferenceID?", "Assistant": "The arguments for `$userReferenceID` are as follows:\n\n- **channel ID** (Channel): The channel to get the message from (Required)\n- **message ID** (Message): The message to get its reference user (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $userReferenceID added?", "Assistant": "$userReferenceID was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $userReferenceID nativly to forgescipt?", "Assistant": "Yes, $userReferenceID is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $userTag?", "Assistant": "Returns the user tag\n\nExample usage:\n```js\n$userTag[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $userTag?", "Assistant": "Use `$userTag` like this:\n```js\n$userTag[data]\n```\n\nThis function returns the user tag."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $userTag in forgescript?", "Assistant": "Yes, You use `$userTag` like this:\n```js\n$userTag[data]\n```\n\nThis function returns the user tag."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $userTag?", "Assistant": "The arguments for `$userTag` are as follows:\n\n- **user ID** (User): The user to get its tag (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $userTag added?", "Assistant": "$userTag was added in ForgeScript version 1.4.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $userTag nativly to forgescipt?", "Assistant": "Yes, $userTag is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $delete?", "Assistant": "Deletes a keyword\n\nExample usage:\n```js\n$delete[key_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $delete?", "Assistant": "Use `$delete` like this:\n```js\n$delete[key_example]\n```\n\nThis function deletes a keyword."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $delete in forgescript?", "Assistant": "Yes, You use `$delete` like this:\n```js\n$delete[key_example]\n```\n\nThis function deletes a keyword."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $delete?", "Assistant": "The arguments for `$delete` are as follows:\n\n- **key** (String): The key name (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $delete added?", "Assistant": "$delete was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $delete nativly to forgescipt?", "Assistant": "Yes, $delete is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $env?", "Assistant": "Retrieves an environment value\n\nExample usage:\n```js\n$env[key_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $env?", "Assistant": "Use `$env` like this:\n```js\n$env[key_example]\n```\n\nThis function retrieves an environment value."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $env in forgescript?", "Assistant": "Yes, You use `$env` like this:\n```js\n$env[key_example]\n```\n\nThis function retrieves an environment value."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $env?", "Assistant": "The arguments for `$env` are as follows:\n\n- **key** (String): The key to return its value (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $env added?", "Assistant": "$env was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $env nativly to forgescipt?", "Assistant": "Yes, $env is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $get?", "Assistant": "Get a keyword value\n\nExample usage:\n```js\n$get[key_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $get?", "Assistant": "Use `$get` like this:\n```js\n$get[key_example]\n```\n\nThis function get a keyword value."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $get in forgescript?", "Assistant": "Yes, You use `$get` like this:\n```js\n$get[key_example]\n```\n\nThis function get a keyword value."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $get?", "Assistant": "The arguments for `$get` are as follows:\n\n- **key** (String): The key name (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $get added?", "Assistant": "$get was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $get nativly to forgescipt?", "Assistant": "Yes, $get is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $has?", "Assistant": "Checks whether a keyword exists\n\nExample usage:\n```js\n$has[name_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $has?", "Assistant": "Use `$has` like this:\n```js\n$has[name_example]\n```\n\nThis function checks whether a keyword exists."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $has in forgescript?", "Assistant": "Yes, You use `$has` like this:\n```js\n$has[name_example]\n```\n\nThis function checks whether a keyword exists."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $has?", "Assistant": "The arguments for `$has` are as follows:\n\n- **name** (String): The name of the keyword (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $has added?", "Assistant": "$has was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $has nativly to forgescipt?", "Assistant": "Yes, $has is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $let?", "Assistant": "Create a keyword\n\nExample usage:\n```js\n$let[key_example;value_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $let?", "Assistant": "Use `$let` like this:\n```js\n$let[key_example;value_example]\n```\n\nThis function create a keyword."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $let in forgescript?", "Assistant": "Yes, You use `$let` like this:\n```js\n$let[key_example;value_example]\n```\n\nThis function create a keyword."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $let?", "Assistant": "The arguments for `$let` are as follows:\n\n- **key** (String): The key name (Required)\n- **value** (String): The key value (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $let added?", "Assistant": "$let was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $let nativly to forgescipt?", "Assistant": "Yes, $let is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $letDivide?", "Assistant": "Short-hand for $let[...;$divide[$get[...];...]]\n\nExample usage:\n```js\n$letDivide[key_example;2]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $letDivide?", "Assistant": "Use `$letDivide` like this:\n```js\n$letDivide[key_example;2]\n```\n\nThis function short-hand for $let[...;$divide[$get[...];...]]."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $letDivide in forgescript?", "Assistant": "Yes, You use `$letDivide` like this:\n```js\n$letDivide[key_example;2]\n```\n\nThis function short-hand for $let[...;$divide[$get[...];...]]."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $letDivide?", "Assistant": "The arguments for `$letDivide` are as follows:\n\n- **key** (String): The key name (Required)\n- **value** (Number): The value to divide with (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $letDivide added?", "Assistant": "$letDivide was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $letDivide nativly to forgescipt?", "Assistant": "Yes, $letDivide is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $letMulti?", "Assistant": "Short-hand for $let[...;$multi[$get[...];...]]\n\nExample usage:\n```js\n$letMulti[key_example;90]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $letMulti?", "Assistant": "Use `$letMulti` like this:\n```js\n$letMulti[key_example;90]\n```\n\nThis function short-hand for $let[...;$multi[$get[...];...]]."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $letMulti in forgescript?", "Assistant": "Yes, You use `$letMulti` like this:\n```js\n$letMulti[key_example;90]\n```\n\nThis function short-hand for $let[...;$multi[$get[...];...]]."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $letMulti?", "Assistant": "The arguments for `$letMulti` are as follows:\n\n- **key** (String): The key name (Required)\n- **value** (Number): The value to multiply with (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $letMulti added?", "Assistant": "$letMulti was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $letMulti nativly to forgescipt?", "Assistant": "Yes, $letMulti is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $letSub?", "Assistant": "Short-hand for $let[...;$sub[$get[...];...]]\n\nExample usage:\n```js\n$letSub[key_example;3]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $letSub?", "Assistant": "Use `$letSub` like this:\n```js\n$letSub[key_example;3]\n```\n\nThis function short-hand for $let[...;$sub[$get[...];...]]."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $letSub in forgescript?", "Assistant": "Yes, You use `$letSub` like this:\n```js\n$letSub[key_example;3]\n```\n\nThis function short-hand for $let[...;$sub[$get[...];...]]."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $letSub?", "Assistant": "The arguments for `$letSub` are as follows:\n\n- **key** (String): The key name (Required)\n- **value** (Number): The value to sub with (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $letSub added?", "Assistant": "$letSub was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $letSub nativly to forgescipt?", "Assistant": "Yes, $letSub is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $letSum?", "Assistant": "Short-hand for $let[...;$sum[$get[...];...]]\n\nExample usage:\n```js\n$letSum[key_example;15]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $letSum?", "Assistant": "Use `$letSum` like this:\n```js\n$letSum[key_example;15]\n```\n\nThis function short-hand for $let[...;$sum[$get[...];...]]."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $letSum in forgescript?", "Assistant": "Yes, You use `$letSum` like this:\n```js\n$letSum[key_example;15]\n```\n\nThis function short-hand for $let[...;$sum[$get[...];...]]."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $letSum?", "Assistant": "The arguments for `$letSum` are as follows:\n\n- **key** (String): The key name (Required)\n- **value** (Number): The value to sum with (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $letSum added?", "Assistant": "$letSum was added in ForgeScript version 1.3.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $letSum nativly to forgescipt?", "Assistant": "Yes, $letSum is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $webhookCreate?", "Assistant": "Creates a webhook in a channel, returns the webhook id\n\nExample usage:\n```js\n$webhookCreate[data;name_example;url_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $webhookCreate?", "Assistant": "Use `$webhookCreate` like this:\n```js\n$webhookCreate[data;name_example;url_example]\n```\n\nThis function creates a webhook in a channel, returns the webhook id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $webhookCreate in forgescript?", "Assistant": "Yes, You use `$webhookCreate` like this:\n```js\n$webhookCreate[data;name_example;url_example]\n```\n\nThis function creates a webhook in a channel, returns the webhook id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $webhookCreate?", "Assistant": "The arguments for `$webhookCreate` are as follows:\n\n- **channel ID** (Channel): The channel to create the webhook (Required)\n- **name** (String): The webhook name (Required)\n- **url** (String): The avatar url (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $webhookCreate added?", "Assistant": "$webhookCreate was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $webhookCreate nativly to forgescipt?", "Assistant": "Yes, $webhookCreate is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $webhookDelete?", "Assistant": "Deletes webhook with given id\n\nExample usage:\n```js\n$webhookDelete[data]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $webhookDelete?", "Assistant": "Use `$webhookDelete` like this:\n```js\n$webhookDelete[data]\n```\n\nThis function deletes webhook with given id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $webhookDelete in forgescript?", "Assistant": "Yes, You use `$webhookDelete` like this:\n```js\n$webhookDelete[data]\n```\n\nThis function deletes webhook with given id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $webhookDelete?", "Assistant": "The arguments for `$webhookDelete` are as follows:\n\n- **id** (Webhook): The webhook id (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $webhookDelete added?", "Assistant": "$webhookDelete was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $webhookDelete nativly to forgescipt?", "Assistant": "Yes, $webhookDelete is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $webhookEdit?", "Assistant": "Edits webhook with given id\n\nExample usage:\n```js\n$webhookEdit[data;name_example;url_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $webhookEdit?", "Assistant": "Use `$webhookEdit` like this:\n```js\n$webhookEdit[data;name_example;url_example]\n```\n\nThis function edits webhook with given id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $webhookEdit in forgescript?", "Assistant": "Yes, You use `$webhookEdit` like this:\n```js\n$webhookEdit[data;name_example;url_example]\n```\n\nThis function edits webhook with given id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $webhookEdit?", "Assistant": "The arguments for `$webhookEdit` are as follows:\n\n- **id** (Webhook): The webhook id (Required)\n- **name** (String): The new name for the webhook (Optional)\n- **url** (String): The new avatar for the webhook (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $webhookEdit added?", "Assistant": "$webhookEdit was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $webhookEdit nativly to forgescipt?", "Assistant": "Yes, $webhookEdit is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $webhookEditMessage?", "Assistant": "Edits a webhook message, returns bool\n\nExample usage:\n```js\n$webhookEditMessage[url_example;message_ID_example;content_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $webhookEditMessage?", "Assistant": "Use `$webhookEditMessage` like this:\n```js\n$webhookEditMessage[url_example;message_ID_example;content_example]\n```\n\nThis function edits a webhook message, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $webhookEditMessage in forgescript?", "Assistant": "Yes, You use `$webhookEditMessage` like this:\n```js\n$webhookEditMessage[url_example;message_ID_example;content_example]\n```\n\nThis function edits a webhook message, returns bool."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $webhookEditMessage?", "Assistant": "The arguments for `$webhookEditMessage` are as follows:\n\n- **url** (String): The webhook url (Required)\n- **message ID** (String): The message to edit (Required)\n- **content** (String): The new content for the message (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $webhookEditMessage added?", "Assistant": "$webhookEditMessage was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $webhookEditMessage nativly to forgescipt?", "Assistant": "Yes, $webhookEditMessage is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $webhookExists?", "Assistant": "Checks whether given webhook id eixsts\n\nExample usage:\n```js\n$webhookExists[id_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $webhookExists?", "Assistant": "Use `$webhookExists` like this:\n```js\n$webhookExists[id_example]\n```\n\nThis function checks whether given webhook id eixsts."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $webhookExists in forgescript?", "Assistant": "Yes, You use `$webhookExists` like this:\n```js\n$webhookExists[id_example]\n```\n\nThis function checks whether given webhook id eixsts."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $webhookExists?", "Assistant": "The arguments for `$webhookExists` are as follows:\n\n- **id** (String): The webhook id (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $webhookExists added?", "Assistant": "$webhookExists was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $webhookExists nativly to forgescipt?", "Assistant": "Yes, $webhookExists is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $webhookSend?", "Assistant": "Sends a message with a webhook\n\nExample usage:\n```js\n$webhookSend[url_example;content_example;true;username_example;avatar_example;data;post_name_example;tags_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $webhookSend?", "Assistant": "Use `$webhookSend` like this:\n```js\n$webhookSend[url_example;content_example;true;username_example;avatar_example;data;post_name_example;tags_example]\n```\n\nThis function sends a message with a webhook."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $webhookSend in forgescript?", "Assistant": "Yes, You use `$webhookSend` like this:\n```js\n$webhookSend[url_example;content_example;true;username_example;avatar_example;data;post_name_example;tags_example]\n```\n\nThis function sends a message with a webhook."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $webhookSend?", "Assistant": "The arguments for `$webhookSend` are as follows:\n\n- **url** (String): The webhook url (Required)\n- **content** (String): The content for the message (Optional)\n- **return message ID** (Boolean): Return the message id of the sent message (Optional)\n- **username** (String): The username for the message (Optional)\n- **avatar** (String): The avatar for the message (Optional)\n- **thread ID** (Channel): The thread to send message to (Optional)\n- **post name** (String): The name for the created forum post (Optional)\n- **tags** (String): The tags for the created forum post (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $webhookSend added?", "Assistant": "$webhookSend was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $webhookSend nativly to forgescipt?", "Assistant": "Yes, $webhookSend is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $webhookToken?", "Assistant": "Gets webhook token of given id\n\nExample usage:\n```js\n$webhookToken[id_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $webhookToken?", "Assistant": "Use `$webhookToken` like this:\n```js\n$webhookToken[id_example]\n```\n\nThis function gets webhook token of given id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $webhookToken in forgescript?", "Assistant": "Yes, You use `$webhookToken` like this:\n```js\n$webhookToken[id_example]\n```\n\nThis function gets webhook token of given id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $webhookToken?", "Assistant": "The arguments for `$webhookToken` are as follows:\n\n- **id** (String): The webhook id (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $webhookToken added?", "Assistant": "$webhookToken was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $webhookToken nativly to forgescipt?", "Assistant": "Yes, $webhookToken is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $webhookURL?", "Assistant": "Gets webhook url with given id\n\nExample usage:\n```js\n$webhookURL[id_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $webhookURL?", "Assistant": "Use `$webhookURL` like this:\n```js\n$webhookURL[id_example]\n```\n\nThis function gets webhook url with given id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $webhookURL in forgescript?", "Assistant": "Yes, You use `$webhookURL` like this:\n```js\n$webhookURL[id_example]\n```\n\nThis function gets webhook url with given id."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $webhookURL?", "Assistant": "The arguments for `$webhookURL` are as follows:\n\n- **id** (String): The webhook id (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $webhookURL added?", "Assistant": "$webhookURL was added in ForgeScript version 1.0.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $webhookURL nativly to forgescipt?", "Assistant": "Yes, $webhookURL is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $ws?", "Assistant": "Creates a WebSocket connection to a server\n\nExample usage:\n```js\n$ws[host_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $ws?", "Assistant": "Use `$ws` like this:\n```js\n$ws[host_example]\n```\n\nThis function creates a websocket connection to a server."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $ws in forgescript?", "Assistant": "Yes, You use `$ws` like this:\n```js\n$ws[host_example]\n```\n\nThis function creates a websocket connection to a server."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $ws?", "Assistant": "The arguments for `$ws` are as follows:\n\n- **host** (String): The WS host, formatted as wss://hostname:port (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $ws added?", "Assistant": "$ws was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $ws nativly to forgescipt?", "Assistant": "Yes, $ws is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $wsClose?", "Assistant": "Closes a websocket connection and removes all listeners of it\n\nExample usage:\n```js\n$wsClose[95;88]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $wsClose?", "Assistant": "Use `$wsClose` like this:\n```js\n$wsClose[95;88]\n```\n\nThis function closes a websocket connection and removes all listeners of it."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $wsClose in forgescript?", "Assistant": "Yes, You use `$wsClose` like this:\n```js\n$wsClose[95;88]\n```\n\nThis function closes a websocket connection and removes all listeners of it."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $wsClose?", "Assistant": "The arguments for `$wsClose` are as follows:\n\n- **websocket ID** (Number): The id of the websocket to attach this listener to (Required)\n- **code** (Number): The status code to send (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $wsClose added?", "Assistant": "$wsClose was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $wsClose nativly to forgescipt?", "Assistant": "Yes, $wsClose is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $wsOn?", "Assistant": "Attach a listener to a websocket\n\nExample usage:\n```js\n$wsOn[54;listener_name_example;callback_example;params_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $wsOn?", "Assistant": "Use `$wsOn` like this:\n```js\n$wsOn[54;listener_name_example;callback_example;params_example]\n```\n\nThis function attach a listener to a websocket."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $wsOn in forgescript?", "Assistant": "Yes, You use `$wsOn` like this:\n```js\n$wsOn[54;listener_name_example;callback_example;params_example]\n```\n\nThis function attach a listener to a websocket."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $wsOn?", "Assistant": "The arguments for `$wsOn` are as follows:\n\n- **websocket ID** (Number): The id of the websocket to attach this listener to (Required)\n- **listener name** (String): The name of the event to listen to (Required)\n- **callback** (String): The code to execute every time this event is fired (Required)\n- **params** (String): The arguments that will contain the data of the event that was sent (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $wsOn added?", "Assistant": "$wsOn was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $wsOn nativly to forgescipt?", "Assistant": "Yes, $wsOn is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $wsSend?", "Assistant": "Sends a websocket message\n\nExample usage:\n```js\n$wsSend[76;{key: value_value};callback_example;variable_name_example]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $wsSend?", "Assistant": "Use `$wsSend` like this:\n```js\n$wsSend[76;{key: value_value};callback_example;variable_name_example]\n```\n\nThis function sends a websocket message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $wsSend in forgescript?", "Assistant": "Yes, You use `$wsSend` like this:\n```js\n$wsSend[76;{key: value_value};callback_example;variable_name_example]\n```\n\nThis function sends a websocket message."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $wsSend?", "Assistant": "The arguments for `$wsSend` are as follows:\n\n- **websocket ID** (Number): The id of the websocket to attach this listener to (Required)\n- **value** (Json): The json value to send over (Required)\n- **callback** (String): Code to execute on completion of request (Optional)\n- **variable name** (String): Variable to store error on if callback was called for an error (Optional)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $wsSend added?", "Assistant": "$wsSend was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $wsSend nativly to forgescipt?", "Assistant": "Yes, $wsSend is Nativly from ForgeScript and no extention is needed to be downloaded."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What is $wsState?", "Assistant": "Returns a websocket's connection state\n\nExample usage:\n```js\n$wsState[15]\n```"}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "How do I use $wsState?", "Assistant": "Use `$wsState` like this:\n```js\n$wsState[15]\n```\n\nThis function returns a websocket's connection state."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $wsState in forgescript?", "Assistant": "Yes, You use `$wsState` like this:\n```js\n$wsState[15]\n```\n\nThis function returns a websocket's connection state."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "What are the args for $wsState?", "Assistant": "The arguments for `$wsState` are as follows:\n\n- **websocket ID** (Number): The websocket to get its state (Required)\n\nEach argument has a specific role in how the function works."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "In what ForgeScript version was $wsState added?", "Assistant": "$wsState was added in ForgeScript version 1.5.0."}
{"System": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful answers to the user's questions.", "User": "Is $wsState nativly to forgescipt?", "Assistant": "Yes, $wsState is Nativly from ForgeScript and no extention is needed to be downloaded."}
